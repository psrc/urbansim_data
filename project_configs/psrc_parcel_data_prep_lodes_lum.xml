<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for parcelizing LODES job data </description>
    <parent type="file">psrc_parcel_just_friends.xml</parent>
    <expression_library type="dictionary">
    </expression_library>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="employment_relocation_model" type="model">
        <structure type="dictionary">
          <prepare_for_run type="dictionary">
            <argument convert_blank_to_none="True" name="rate_storage" type="string"></argument>
            <argument convert_blank_to_none="True" name="probability_attribute" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="table" name="rate_table" parser_action="quote_string" type="string"></argument>
          </prepare_for_run>
        </structure>
      </model>
      <model name="non_home_based_employment_location_choice_model" type="model">
        <structure type="dictionary">
          <group_by_attribute type="tuple">
            <argument name="grouping_table" type="string">home_based_status</argument>
            <argument name="grouping_column" type="string">name</argument>
          </group_by_attribute>
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">psrc_parcel.models.employment_location_choice_model_by_geography</class_module>
            <class_name>EmploymentLocationChoiceModelByGeography</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">EmploymentLocationChoiceModelByGeography</name>
            <argument model_dependency_type="dataset" name="geography_dataset" type="string">census_block_group</argument>
            <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string"></argument>
            <!--<argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>-->
            <argument name="choices" parser_action="quote_string" type="string">urbansim.random_choices_from_index</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">job_capacity</argument>
            <argument name="simulation_weight_string" parser_action="quote_string" type="string">clip_to_zero(psrc_parcel.building.total_non_home_based_job_space)</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string">urbansim_parcel.building.total_non_home_based_job_space &gt; 0</argument>
            <argument name="compute_capacity_flag" type="boolean">False</argument>
            <argument name="sample_size_locations" type="integer">200</argument>
            <key convert_blank_to_none="True" name="number_of_units_string" type="string"></key>
            <argument name="run_config" type="dictionary">
              <key convert_blank_to_none="True" name="agent_units_string" type="string"></key>
              <key name="lottery_max_iterations" type="integer">10</key>
            </argument>
            <argument name="variable_package" parser_action="quote_string" type="string">psrc_parcel</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <output hidden="True" name="output" type="string">(specification, coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">employment_location_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string">job</argument>
            <argument hidden="True" name="agents_index" type="string">erm_index</argument>
            <!--<argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>-->
            <argument name="chunk_specification" type="string">{'records_per_chunk':5000}</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
          </run>
        </structure>
      </model>
      <model name="non_home_based_employment_tract_location_choice_model" type="model">
        <structure type="dictionary">
          <group_by_attribute type="tuple">
            <argument name="grouping_table" type="string">home_based_status</argument>
            <argument name="grouping_column" type="string">name</argument>
          </group_by_attribute>
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">psrc_parcel.models.employment_location_choice_model_by_geography</class_module>
            <class_name>EmploymentLocationChoiceModelByGeography</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">EmploymentLocationChoiceModelByGeography</name>
            <argument model_dependency_type="dataset" name="geography_dataset" type="string">census_tract</argument>
            <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string"></argument>
            <!--<argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>-->
            <argument name="choices" parser_action="quote_string" type="string">urbansim.random_choices_from_index</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">job_capacity</argument>
            <argument name="simulation_weight_string" parser_action="quote_string" type="string">clip_to_zero(psrc_parcel.building.total_non_home_based_job_space)</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string">urbansim_parcel.building.total_non_home_based_job_space &gt; 0</argument>
            <argument name="compute_capacity_flag" type="boolean">False</argument>
            <argument name="sample_size_locations" type="integer">200</argument>
            <key convert_blank_to_none="True" name="number_of_units_string" type="string"></key>
            <argument name="run_config" type="dictionary">
              <key convert_blank_to_none="True" name="agent_units_string" type="string"></key>
              <key name="lottery_max_iterations" type="integer">10</key>
            </argument>
            <argument name="variable_package" parser_action="quote_string" type="string">psrc_parcel</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <output hidden="True" name="output" type="string">(specification, coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">employment_location_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string">job</argument>
            <argument hidden="True" name="agents_index" type="string">erm_index</argument>
            <!--<argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>-->
            <argument name="chunk_specification" type="string">{'records_per_chunk':5000}</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">3</argument>
          </run>
        </structure>
      </model>
      <model name="edu_sector_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim_parcel.models.subarea_scaling_agents_model</class_module>
            <class_name>SubareaScalingAgentsModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaScalingAgentsModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">census_block_group_id</argument>
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">building.building_type_id == 18</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="weights" parser_action="quote_string" type="string"></argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">job.sector_id==13</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <output hidden="True" name="output" type="string">filtered_erm_index</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument name="agents_index" type="string">filtered_erm_index</argument>
            <argument name="run_no_area" type="boolean">False</argument>
            <argument name="ignore_agents_distribution" type="boolean">True</argument>
          </run>
        </structure>
      </model>
      <model name="edu_sector_tract_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim_parcel.models.subarea_scaling_agents_model</class_module>
            <class_name>SubareaScalingAgentsModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaScalingAgentsModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">census_tract_id</argument>
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">building.building_type_id == 18</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="weights" parser_action="quote_string" type="string"></argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">job.sector_id==13</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <output hidden="True" name="output" type="string">filtered_erm_index</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument name="agents_index" type="string">filtered_erm_index</argument>
            <argument name="run_no_area" type="boolean">False</argument>
            <argument name="ignore_agents_distribution" type="boolean">True</argument>
          </run>
        </structure>
      </model>
      <model name="public_sector_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim_parcel.models.subarea_scaling_agents_model</class_module>
            <class_name>SubareaScalingAgentsModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaScalingAgentsModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">census_block_group_id</argument>
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">urbansim_parcel.building.is_governmental * (building.building_type_id &lt;&gt; 18)</argument>
            <argument model_dependency_type="variable" name="weights" parser_action="quote_string" type="string">building.non_residential_sqft / 1000.0 + 1 </argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <!--<argument name="agents_filter" type="string" parser_action="quote_string" model_dependency_type="variable">job.sector_id==18</argument>-->
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">numpy.in1d(job.sector_id, [12, 13])</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <output hidden="True" name="output" type="string">filtered_erm_index</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument name="agents_index" type="string">filtered_erm_index</argument>
            <argument name="run_no_area" type="boolean">False</argument>
            <argument name="ignore_agents_distribution" type="boolean">True</argument>
          </run>
        </structure>
      </model>
      <model name="public_sector_tract_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim_parcel.models.subarea_scaling_agents_model</class_module>
            <class_name>SubareaScalingAgentsModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaScalingAgentsModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">census_tract_id</argument>
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">urbansim_parcel.building.is_governmental * (building.building_type_id &lt;&gt; 18)</argument>
            <argument model_dependency_type="variable" name="weights" parser_action="quote_string" type="string">building.non_residential_sqft / 1000.0 + 1 </argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <!--<argument name="agents_filter" type="string" parser_action="quote_string" model_dependency_type="variable">job.sector_id==18</argument>-->
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">numpy.in1d(job.sector_id, [12, 13])</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <output hidden="True" name="output" type="string">filtered_erm_index</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument name="agents_index" type="string">filtered_erm_index</argument>
            <argument name="run_no_area" type="boolean">False</argument>
            <argument name="ignore_agents_distribution" type="boolean">True</argument>
          </run>
        </structure>
      </model>
      <model name="compute_job_tract_model" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.simple_model</class_module>
            <class_name type="string">SimpleModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">SimpleModel</name>
            <argument name="model_name" parser_action="quote_string" type="string">Compute jobs census tract</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="dataset" type="string">job</argument>
            <argument model_dependency_type="variable" name="expression" parser_action="quote_string" type="string">job.disaggregate(census_block_group.census_tract_id, intermediates=[census_block_group])</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">census_tract_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
      <model name="distribute_unplaced_jobs_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim_parcel.models.distribute_unplaced_jobs_model</class_module>
            <class_name>DistributeUnplacedJobsModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">DistributeUnplacedJobsModel</name>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">urbansim_parcel.building.is_governmental</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">numpy.in1d(job.sector_id, [12, 13])</argument>
          </run>
        </structure>
      </model>
      <model copyable="True" hidden="False" name="work_at_home_choice_model_by_subarea" type="model">
        <structure type="dictionary">
          <init type="dictionary">
            <!--<argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">job.home_based_status==1</argument>-->
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_not(numpy.in1d(job.sector_id, [12, 13]))</argument>
          </init>
          <prepare_for_run type="dictionary">
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">urbansim_parcel.person.is_worker</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="residence_id" parser_action="quote_string" type="string">census_tract_id</argument>
            <argument name="modify_home_based_status" type="boolean">True</argument>
          </run>
        </structure>
      </model>
      <model name="compute_job_capacity" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.simple_model</class_module>
            <class_name type="string">SimpleModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">SimpleModel</name>
            <argument name="model_name" parser_action="quote_string" type="string">Compute Job Capacity</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="dataset" type="string">building</argument>
            <argument model_dependency_type="variable" name="expression" parser_action="quote_string" type="string">(urbansim_parcel.building.number_of_non_home_based_jobs*1.05).round().astype(int32)</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">job_capacity</argument>
            <argument name="dataset_filter" parser_action="quote_string" type="string">numpy.logical_not(urbansim_parcel.building.is_residential)</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
    </models>
  </model_manager>
  <scenario_manager>
    <scenario executable="True" name="parcelize_jobs" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2018</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2019</firstyear>
        <lastyear type="integer">2021</lastyear>
      </years_to_run>
      <seed convert_blank_to_none="True" type="integer">1</seed>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfigurationNoDB</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <!--        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/beta_lodes_parcelization/output</argument>
<argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/BY2018prep/JobParcel/runs</argument>-->
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2018_job_parcelization/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <!--          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/beta_lodes_parcelization/input</argument>
<argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/BY2018prep/JobParcel/base_year_data</argument>-->
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2018_job_parcelization/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="assign_work_at_home_to_workers" type="selectable">True</selectable>
        <selectable name="compute_job_tract_model" type="selectable">True</selectable>
        <selectable name="work_at_home_choice_model_by_subarea" type="selectable">True</selectable>
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <selectable name="edu_sector_model" type="model_choice">True</selectable>
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <selectable name="public_sector_model" type="model_choice">True</selectable>
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="work_at_home_choice_model" type="model_choice">False</selectable>
        <selectable name="workplace_choice_model_for_resident" type="model_choice">False</selectable>
      </models_to_run>
      <models_in_year type="dictionary">
        <models_in_year_category key_name="year" key_value="models_list" type="category_with_special_keys">
          <yearset type="dictionary">
            <year type="integer">2020</year>
            <models_list type="list">["compute_job_tract_model", "employment_relocation_model", "edu_sector_tract_model",  "employment_relocation_model", "public_sector_tract_model", "employment_relocation_model", {"non_home_based_employment_tract_location_choice_model": {"group_members":"non_home_based"}}, "distribute_unplaced_jobs_model"]</models_list>
          </yearset>
          <yearset type="dictionary">
            <year type="integer">2021</year>
            <models_list type="list">["compute_job_capacity"]</models_list>
          </yearset>
        </models_in_year_category>
      </models_in_year>
      <advanced type="category">
        <!--        <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/beta_lodes_parcelization/output</cache_directory>
<cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/BY2018prep/JobParcel</cache_directory>-->
        <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2018_job_parcelization</cache_directory>
        <flush_variables type="boolean">False</flush_variables>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['psrc_parcel', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <datasets_to_cache_after_each_model type="list">[]</datasets_to_cache_after_each_model>
        <datasets_to_preload inherit_parent_values="False" parser_action="list_to_dictionary" type="selectable_list">
          <selectable copyable="True" name="job" type="selectable">False</selectable>
          <selectable copyable="True" name="zone" type="selectable">False</selectable>
          <selectable copyable="True" name="building" type="selectable">False</selectable>
          <selectable copyable="True" name="person" type="selectable">False</selectable>
          <selectable copyable="True" name="home_based_status" type="selectable">False</selectable>
        </datasets_to_preload>
      </advanced>
    </scenario>
  </scenario_manager>
  <results_manager>
    </results_manager>
</opus_project>
