<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <parent type="file">zurich_parcel/configs/kt_cache.xml</parent>
    <parent type="file">zurich_parcel/configs/zurich_kt_parcel.xml</parent>
    <expression_library type="dictionary">
      <variable name="development_event_history_x_parcel.sc_land_price_dynamic" source="expression" type="variable_definition" use="both">development_event_history.year_built * parcel.disaggregate(city.slopes) + parcel.disaggregate(city.intercepts)</variable>
      <variable name="parcel.sc_municipal_taxindex_parc" source="primary attribute" type="variable_definition" use="both">parcel.municipal_taxindex</variable>
      <variable name="parcel.sc_profit_proxi" source="expression" type="variable_definition" use="both">(parcel.disaggregate(zone.aggregate(exp(living_unit.ln_rent_price) / living_unit.area, function=mean, intermediates=[building])))/(parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft)</variable>
      <variable name="parcel.sc_generic_plan_type_9_parc" source="expression" type="variable_definition" use="both">(numpy.int_(parcel.plan_type_id/1000)==9) * 1</variable>
      <variable name="parcel.sc_generic_plan_type_5_parc" source="expression" type="variable_definition" use="both">(numpy.int_(parcel.plan_type_id/1000)==5) * 1</variable>
      <variable name="parcel.sc_generic_plan_type_7_parc" source="expression" type="variable_definition" use="both">(numpy.int_(parcel.plan_type_id/1000)==7) * 1</variable>
      <variable name="parcel.sc_generic_plan_type_3_parc" source="expression" type="variable_definition" use="both">(numpy.int_(parcel.plan_type_id/1000)==3) * 1</variable>
      <variable name="parcel.sc_generic_plan_type_2_parc" source="expression" type="variable_definition" use="both">(numpy.int_(parcel.plan_type_id/1000)==2) * 1</variable>
      <variable name="parcel.sc_generic_plan_type_1_parc" source="expression" type="variable_definition" use="both">(numpy.int_(parcel.plan_type_id/1000)==1) * 1</variable>
      <variable name="parcel.sc_generic_plan_type_parc" source="primary attribute" type="variable_definition" use="both">parcel.plan_type_id%1000</variable>
      <variable name="parcel.sc_dist_to_station_parc" source="primary attribute" type="variable_definition" use="both">parcel.dist_to_station</variable>
      <variable name="parcel.sc_lake_view_parc" source="primary attribute" type="variable_definition" use="both">parcel.gr_lake_view</variable>
      <variable name="parcel.sc_sun_evening_parc" source="primary attribute" type="variable_definition" use="both">parcel.gr_sun_eve</variable>
      <variable name="parcel.sc_land_price_comparis2014" source="primary attribute" type="variable_definition" use="both">parcel.purchasepricepersqmchf</variable>
      <variable name="parcel.sc_slope_parc" source="primary attribute" type="variable_definition" use="both">parcel.gr_slope_deg</variable>
      <variable name="parcel.sc_dist_to_zh_cbd_parc" source="primary attribute" type="variable_definition" use="both">parcel.dist_to_zh_cbd</variable>
      <variable name="parcel.sc_acc_pt_parc" source="expression" type="variable_definition" use="both">ln(parcel.pt_accessibility)</variable>
      <variable name="city.sc_year" source="primary attribute" type="variable_definition" use="indicator">city.year</variable>
      <variable name="parcel.sc_avrg_price_per_sqm_lu_zone" source="expression" type="variable_definition" use="both">parcel.disaggregate(zone.aggregate(exp(living_unit.ln_rent_price) / living_unit.area, function=mean, intermediates=[building]))</variable>
      <variable name="parcel.sc_job_density_parcel" source="expression" type="variable_definition" use="both">urbansim_parcel.parcel.number_of_jobs / parcel.parcel_sqft</variable>
      <variable name="development_event_history_x_parcel.sc_developer_id" source="primary attribute" type="variable_definition" use="both">development_event_history.bhnr * (parcel.parcel_id&gt;0)</variable>
      <variable name="city.sc_building_footprints_to_area" source="expression" type="variable_definition" use="both">city.aggregate(building.land_area, function=sum, intermediates=[parcel]) / city.aggregate(parcel.parcel_sqft, function=sum)</variable>
      <variable name="city.sc_resi_floor_space_per_capita" source="expression" type="variable_definition" use="both">city.aggregate(living_unit.area, function=sum, intermediates=[building, parcel]) / city.aggregate(household.number_of_agents(persons), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_jobs_to_inhabitants_ratio" source="expression" type="variable_definition" use="both">city.aggregate(building.number_of_agents(jobs), intermediates=[parcel]) / city.aggregate(household.number_of_agents(persons), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_accessibility_sum_city" source="expression" type="variable_definition" use="indicator">city.aggregate(ln(parcel.car_accessibility), function=sum)</variable>
      <variable name="county.sc_floor_space_transport_newly_built_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector6), function=sum, intermediates=[parcel])</variable>
      <variable name="county.sc_floor_space_trade_newly_built_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector3), function=sum, intermediates=[parcel])</variable>
      <variable name="county.sc_floor_space_service_newly_built_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector7), function=sum, intermediates=[parcel])</variable>
      <variable name="county.sc_floor_space_retail_newly_built_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector4), function=sum, intermediates=[parcel])</variable>
      <variable name="county.sc_floor_space_manufacturing_newly_built_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector1), function=sum, intermediates=[parcel])</variable>
      <variable name="county.sc_floor_space_hotel_newly_built_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector5), function=sum, intermediates=[parcel])</variable>
      <variable name="county.sc_floor_space_health_newly_built_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector8), function=sum, intermediates=[parcel])</variable>
      <variable name="county.sc_floor_space_construction_newly_built_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector2), function=sum, intermediates=[parcel])</variable>
      <variable name="county.sc_floor_space_newly_built_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.land_area * building.stories), function=sum, intermediates=[parcel])</variable>
      <variable name="county.sc_persons_county" source="expression" type="variable_definition" use="both">county.aggregate(person.person_id&gt;=0, function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_share_persons_pt_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / city.aggregate(numpy.ma.masked_where(numpy.logical_not(numpy.logical_or(person.mode=='car', person.mode=='pt')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_share_persons_car_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'car', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / city.aggregate(numpy.ma.masked_where(numpy.logical_not(numpy.logical_or(person.mode=='car', person.mode=='pt')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_share_persons_travelling_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(numpy.logical_not(numpy.logical_or(person.mode=='pt', person.mode=='car')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / city.aggregate(numpy.ma.masked_where(person.mode=='', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_share_persons_travelling_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(numpy.logical_not(person.mode=='pt', person.mode=='car'), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(numpy.ma.masked_where(person.mode=='', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_mode_share_check_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(numpy.logical_not(person.mode=='car'), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / city.aggregate(numpy.ma.masked_where(numpy.logical_not(numpy.logical_or(person.mode=='car', person.mode=='pt')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) + city.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / city.aggregate(numpy.ma.masked_where(numpy.logical_not(numpy.logical_or(person.mode=='car', person.mode=='pt')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_mode_share_check_debug_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'car', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(person.person_id&gt;=0, function=sum, intermediates=[household, living_unit, building, parcel]) + county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(person.person_id&gt;=0, function=sum, intermediates=[household, living_unit, building, parcel]) + county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(person.person_id&gt;=0, function=sum, intermediates=[household, living_unit, building, parcel]) + county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'none', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(person.person_id&gt;=0, function=sum, intermediates=[household, living_unit, building, parcel]) + county.aggregate(numpy.ma.masked_where(numpy.logical_or(numpy.logical_or(person.mode=='car', person.mode=='pt'), numpy.logical_or(person.mode=='', person.mode=='none')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(person.person_id&gt;=0, function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_share_persons_cryptic_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(numpy.logical_or(numpy.logical_or(person.mode=='car', person.mode=='pt'), numpy.logical_or(person.mode=='', person.mode=='none')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(person.person_id&gt;=0, function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_share_persons_NULL_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(person.person_id&gt;=0, function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_persons_pt_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_persons_car_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'car', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_persons_car_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'car', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_person_minutes_traveled_pt_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', work2home_travel_time_min + home2work_travel_time_min), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_person_minutes_traveled_car_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'car', work2home_travel_time_min + home2work_travel_time_min), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_person_meter_traveled_pt_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', person.work2home_distance_meter + person.home2work_distance_meter), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="city.sc_person_meter_traveled_car_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'car', person.work2home_distance_meter + person.home2work_distance_meter), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_mode_share_check_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(numpy.logical_not(person.mode=='car'), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(numpy.ma.masked_where(numpy.logical_not(numpy.logical_or(person.mode=='car', person.mode=='pt')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) + county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(numpy.ma.masked_where(numpy.logical_not(numpy.logical_or(person.mode=='car', person.mode=='pt')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_share_persons_none_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'none', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(person.person_id&gt;=0, function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_share_persons_car_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(numpy.logical_not(person.mode=='car'), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(numpy.ma.masked_where(numpy.logical_not(numpy.logical_or(person.mode=='car', person.mode=='pt')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_share_persons_pt_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel]) / county.aggregate(numpy.ma.masked_where(numpy.logical_not(numpy.logical_or(person.mode=='car', person.mode=='pt')), person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_persons_pt_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', person.person_id&gt;=0), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_person_meter_traveled_pt_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', person.work2home_distance_meter + person.home2work_distance_meter), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_person_minutes_traveled_pt_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'pt', work2home_travel_time_min + home2work_travel_time_min), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_person_minutes_traveled_car_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'car', work2home_travel_time_min + home2work_travel_time_min), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_person_meter_traveled_car_county" source="expression" type="variable_definition" use="both">county.aggregate(numpy.ma.masked_where(person.mode&lt;&gt;'car', person.work2home_distance_meter + person.home2work_distance_meter), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_resi_units_county" source="expression" type="variable_definition" use="indicator">county.aggregate(zurich_parcel.building.sc_total_spaces_0, intermediates=[parcel])</variable>
      <variable name="county.sc_occupied_resi_spaces" source="expression" type="variable_definition" use="indicator">county.aggregate(zurich_parcel.building.sc_occupied_spaces_0, intermediates=[parcel])</variable>
      <variable name="city.sc_rent_price_sd_city" source="expression" type="variable_definition" use="both">city.aggregate(exp(living_unit.ln_rent_price), function=standard_deviation, intermediates=[building, parcel])</variable>
      <variable name="city.INWORK_sc_variance" source="expression" type="variable_definition" use="both">city.aggregate(living_unit.rent_price, function=variance, intermediates=[building, parcel])</variable>
      <variable name="city.INWORK_sc_min" source="expression" type="variable_definition" use="both">city.aggregate(living_unit.rent_price, function=minimum, intermediates=[building, parcel])</variable>
      <variable name="city.INWORK_sc_max" source="expression" type="variable_definition" use="both">city.aggregate(living_unit.rent_price, function=maximum, intermediates=[building, parcel])</variable>
      <variable name="county.sc_mean_county" source="expression" type="variable_definition" use="both">county.aggregate(living_unit.rent_price, function=mean, intermediates=[building, parcel])</variable>
      <variable name="city.INWORK_sc_sum" source="expression" type="variable_definition" use="both">city.aggregate(living_unit.rent_price, function=sum, intermediates=[building, parcel])</variable>
      <variable name="city.INWORK_sc_mean" source="expression" type="variable_definition" use="both">city.aggregate(living_unit.rent_price, function=mean, intermediates=[building, parcel])</variable>
      <variable name="city.sc_floor_capacity_non_residential_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.maximum(0, (numpy.ma.masked_where(numpy.logical_or(numpy.logical_and(parcel.plan_type_id&lt;3000, parcel.plan_type_id&gt;=7000), parcel.is_street==1), parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft)) - numpy.ma.masked_where(numpy.logical_or(numpy.logical_and(parcel.plan_type_id&lt;3000, parcel.plan_type_id&gt;=7000), parcel.is_street==1), parcel.aggregate(building.land_area * building.stories))))</variable>
      <variable name="city.sc_floor_capacity_residential_city" source="expression" type="variable_definition" use="both">city.aggregate(numpy.maximum(0, (numpy.ma.masked_where(numpy.logical_or(parcel.plan_type_id&gt;=4000, parcel.is_street==1), parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft)) - numpy.ma.masked_where(numpy.logical_or(parcel.plan_type_id&gt;=4000, parcel.is_street==1), parcel.aggregate(building.land_area * building.stories))))</variable>
      <variable name="city.sc_floor_space_health_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector8), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_floor_space_service_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector7), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_floor_space_transport_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector6), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_floor_space_hotel_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector5), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_floor_space_retail_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector4), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_floor_space_trade_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector3), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_floor_space_construction_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector2), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_floor_space_manufacturing_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.sqm_sector1), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_buildings_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.year_built&gt;2000), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_nb_persons_city" source="expression" type="variable_definition" use="indicator">city.aggregate(household.number_of_agents(persons), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_nb_jobs_county" source="expression" type="variable_definition" use="indicator">county.aggregate(building.number_of_agents(jobs), intermediates=[parcel])</variable>
      <variable name="county.sc_nb_persons_county" source="expression" type="variable_definition" use="both">county.aggregate(household.number_of_agents(persons), function=sum, intermediates=[household, living_unit, building, parcel])</variable>
      <variable name="county.sc_nb_buildings_county" source="expression" type="variable_definition" use="both">county.aggregate(parcel.number_of_agents(building))</variable>
      <variable name="county.sc_nb_living_units_county" source="expression" type="variable_definition" use="indicator">county.aggregate(building.number_of_agents(living_units), intermediates=[parcel])</variable>
      <variable name="county.sc_nb_hh_county" source="expression" type="variable_definition" use="indicator">county.aggregate(living_unit.number_of_agents(households), intermediates=[building, parcel])</variable>
      <variable name="city.sc_floor_space_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(building.year_built&lt;2001, building.land_area * building.stories), function=sum, intermediates=[parcel])</variable>
      <variable name="city.sc_resi_units_newly_built" source="expression" type="variable_definition" use="both">city.aggregate(numpy.ma.masked_where(living_unit.year_built&lt;2001, living_unit.year_built&gt;2000), function=sum, intermediates=[building, parcel])</variable>
      <variable name="parcel.sc_resi_units_newly_built" source="expression" type="variable_definition" use="both">parcel.aggregate(numpy.ma.masked_where(living_unit.year_built&gt;2000, living_unit.year_built&gt;2000), function=sum, intermediates=[building])</variable>
      <variable name="city.sc_occupied_resi_spaces_city" source="expression" type="variable_definition" use="indicator">city.aggregate(zurich_parcel.building.sc_occupied_spaces_0, intermediates=[parcel])</variable>
      <variable name="city.sc_resi_vacancy_city" source="expression" type="variable_definition" use="indicator">(1 - ((city.aggregate(zurich_parcel.building.sc_occupied_spaces_0, intermediates=[parcel]))) / (city.aggregate(zurich_parcel.building.sc_total_spaces_0, intermediates=[parcel])))</variable>
      <variable name="city.sc_nb_hh_city" source="expression" type="variable_definition" use="indicator">city.aggregate(living_unit.number_of_agents(households), intermediates=[building, parcel])</variable>
      <variable name="city.sc_resi_units" source="expression" type="variable_definition" use="indicator">city.aggregate(zurich_parcel.building.sc_total_spaces_0, intermediates=[parcel])</variable>
      <variable name="parcel.sc_newcomers_within_300_of_parcel" source="Python class" type="variable_definition" use="both">zurich_parcel.parcel.newcomers_within_300_of_parcel</variable>
      <variable name="parcel.sc_dist_to_highwayaccess_parc" source="primary attribute" type="variable_definition" use="both">parcel.dist_to_highwayaccess</variable>
      <variable name="city.sc_rent_price_mean_city" source="expression" type="variable_definition" use="both">city.aggregate(exp(living_unit.ln_rent_price), function=sum, intermediates=[building, parcel]) / city.aggregate(living_unit.living_unit_id&gt;=0, function=sum, intermediates=[building, parcel])</variable>
      <variable name="county.sc_vacancy_sector99_county" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_99, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_99, intermediates=[parcel])))</variable>
      <variable name="county.sc_vacancy_sector8_county" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_8, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_8, intermediates=[parcel])))</variable>
      <variable name="county.sc_vacancy_sector7_county" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_7, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_7, intermediates=[parcel])))</variable>
      <variable name="county.sc_vacancy_sector6_county" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_6, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_6, intermediates=[parcel])))</variable>
      <variable name="county.sc_vacancy_sector5_county" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_5, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_5, intermediates=[parcel])))</variable>
      <variable name="county.sc_vacancy_sector4_county" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_4, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_4, intermediates=[parcel])))</variable>
      <variable name="county.sc_vacancy_sector3_county" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_3, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_3, intermediates=[parcel])))</variable>
      <variable name="county.sc_vacancy_sector2_county" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_2, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_2, intermediates=[parcel])))</variable>
      <variable name="county.sc_vacancy_sector1_county" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_1, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_1, intermediates=[parcel])))</variable>
      <variable name="county.sc_resi_vacancy" source="expression" type="variable_definition" use="indicator">(1 - ((county.aggregate(zurich_parcel.building.sc_occupied_spaces_0, intermediates=[parcel]))) / (county.aggregate(zurich_parcel.building.sc_total_spaces_0, intermediates=[parcel])))</variable>
      <variable name="county.sc_floor_capacity_county" source="expression" type="variable_definition" use="both">county.aggregate(zurich_parcel.parcel.sc_floor_capacity)</variable>
      <variable name="zone.sc_floor_capacity_zone" source="expression" type="variable_definition" use="both">zone.aggregate(zurich_parcel.parcel.sc_floor_capacity)</variable>
      <variable name="city.sc_floor_capacity_city" source="expression" type="variable_definition" use="both">city.aggregate(zurich_parcel.parcel.sc_floor_capacity)</variable>
      <variable name="parcel.sc_floor_capacity_expr" source="Python class" type="variable_definition" use="indicator">zurich_parcel.parcel.sc_floor_capacity</variable>
      <variable name="city.sc_avg_car_accessibility_city" source="expression" type="variable_definition" use="both">city.aggregate(parcel.car_accessibility, function=mean)</variable>
      <variable name="parcel.sc_euclidean_job_acc_300_beta_0_2" source="Python class" type="variable_definition" use="both">ln(zurich_parcel.parcel.jobs_within_300_of_parcel_exp_weighted_with_beta)</variable>
      <variable name="development_event_history_x_parcel.sc_dummy_purpose_3" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 3) * (parcel.parcel_id &gt; 0)</variable>
      <variable name="development_event_history_x_parcel.sc_dummy_purpose_2" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 2) * (parcel.parcel_id &gt; 0)</variable>
      <variable name="development_event_history_x_parcel.sc_dummy_purpose_1" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 1) * (parcel.parcel_id &gt; 0)</variable>
      <variable name="development_event_history_x_parcel.sc_dev_freq" source="expression" type="variable_definition" use="both">development_event_history.freq * (parcel.parcel_id &gt; 0)</variable>
      <variable name="development_event_history_x_parcel.sc_dummy_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 3) * (parcel.parcel_id &gt; 0)</variable>
      <variable name="development_event_history_x_parcel.sc_dummy_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 2) * (parcel.parcel_id &gt; 0)</variable>
      <variable name="development_event_history_x_parcel.sc_dummy_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 1) * (parcel.parcel_id &gt; 0)</variable>
      <variable name="parcel.sc_euclidean_job_acc_beta_0_2" source="Python class" type="variable_definition" use="both">ln(zurich_parcel.parcel.jobs_within_500_of_parcel_exp_weighted_with_beta)</variable>
      <variable name="parcel.sc_euclidean_job_acc" source="Python class" type="variable_definition" use="both">zurich_parcel.parcel.jobs_within_300_of_parcel_weighted</variable>
      <variable name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 3) * parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area)</variable>
      <variable name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 2) * parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area)</variable>
      <variable name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 1) * parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area)</variable>
      <variable name="development_event_history_x_parcel.sc_acc_pt_for_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 3) * (ln(parcel.pt_accessibility))</variable>
      <variable name="development_event_history_x_parcel.sc_acc_pt_for_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 2) * (ln(parcel.pt_accessibility))</variable>
      <variable name="development_event_history_x_parcel.sc_acc_pt_for_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 1) * (ln(parcel.pt_accessibility))</variable>
      <variable name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_purpose_3" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck ==3) * ((parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft) / (parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft))</variable>
      <variable name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_purpose_2" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck ==2) * ((parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft) / (parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft))</variable>
      <variable name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_purpose_1" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck ==1) * ((parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft) / (parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft))</variable>
      <variable name="development_event_history_x_parcel.sc_newcomers_for_purpose_3" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 3) * (zurich_parcel.parcel.young_newcomers_within_300_of_parcel)</variable>
      <variable name="development_event_history_x_parcel.sc_newcomers_for_purpose_2" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 2) * (zurich_parcel.parcel.young_newcomers_within_300_of_parcel)</variable>
      <variable name="development_event_history_x_parcel.sc_newcomers_for_purpose_1" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 1) * (zurich_parcel.parcel.young_newcomers_within_300_of_parcel)</variable>
      <variable name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_purpose_3" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 3) * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &lt; 0) * 4 * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)) + ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &gt; 0) * ln(((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)))</variable>
      <variable name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_purpose_2" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 2) * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &lt; 0) * 4 * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)) + ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &gt; 0) * ln(((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)))</variable>
      <variable name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_purpose_1" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 1) * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &lt; 0) * 4 * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)) + ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &gt; 0) * ln(((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)))</variable>
      <variable name="development_event_history_x_parcel.sc_acc_car_for_purpose_3" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 3) * (ln(parcel.car_accessibility))</variable>
      <variable name="development_event_history_x_parcel.sc_acc_car_for_purpose_2" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 2) * (ln(parcel.car_accessibility))</variable>
      <variable name="development_event_history_x_parcel.sc_acc_car_for_purpose_1" source="expression" type="variable_definition" use="both">(development_event_history.verwendungszweck == 1) * (ln(parcel.car_accessibility))</variable>
      <variable name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type ==3) * ((parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft) / (parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft))</variable>
      <variable name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type ==2) * ((parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft) / (parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft))</variable>
      <variable name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type ==1) * ((parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft) / (parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft))</variable>
      <variable name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Smc" source="expression" type="variable_definition" use="model variable">(development_event_history.developer_type == 3) * zurich_parcel.parcel.new_bldgs_within_150_of_parcel</variable>
      <variable name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Om" source="expression" type="variable_definition" use="model variable">(development_event_history.developer_type == 2) * zurich_parcel.parcel.new_bldgs_within_150_of_parcel</variable>
      <variable name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_O1" source="expression" type="variable_definition" use="model variable">(development_event_history.developer_type == 1) * zurich_parcel.parcel.new_bldgs_within_150_of_parcel</variable>
      <variable name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 3) * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &lt; 0) * 4 * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)) + ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &gt; 0) * ln(((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)))</variable>
      <variable name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 2) * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &lt; 0) * 4 * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)) + ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &gt; 0) * ln(((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)))</variable>
      <variable name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 1) * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &lt; 0) * 4 * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)) + ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &gt; 0) * ln(((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)))</variable>
      <variable name="development_event_history_x_parcel.sc_acc_car_for_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 3) * (ln(parcel.car_accessibility))</variable>
      <variable name="development_event_history_x_parcel.sc_acc_car_for_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 2) * (ln(parcel.car_accessibility))</variable>
      <variable name="development_event_history_x_parcel.sc_acc_car_for_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 1) * (ln(parcel.car_accessibility))</variable>
      <variable name="parcel.sc_acc_car_parc" source="primary attribute" type="variable_definition" use="both">ln(parcel.car_accessibility)</variable>
      <variable name="city.sc_nb_living_units_city" source="expression" type="variable_definition" use="indicator">city.aggregate(building.number_of_agents(living_units), intermediates=[parcel])</variable>
      <variable name="city.sc_jobs_city" source="expression" type="variable_definition" use="both">city.aggregate(building.number_of_agents(jobs), intermediates=[parcel])</variable>
      <variable name="parcel.sc_new_bldgs_within_150_of_parcel" source="Python class" type="variable_definition" use="model variable">zurich_parcel.parcel.new_bldgs_within_150_of_parcel</variable>
      <variable name="development_event_history_x_parcel.sc_newcomers_for_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 2) * (zurich_parcel.parcel.young_newcomers_within_300_of_parcel)</variable>
      <variable name="development_event_history_x_parcel.sc_newcomers_for_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 1) * (zurich_parcel.parcel.young_newcomers_within_300_of_parcel)</variable>
      <variable name="development_event_history_x_parcel.sc_slope_for_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 1) * (parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area))</variable>
      <variable name="development_event_history_x_parcel.sc_slope_for_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 2) * (parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area))</variable>
      <variable name="development_event_history_x_parcel.sc_slope_for_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 3) * (parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area))</variable>
      <variable name="development_event_history_x_parcel.sc_distance_to_school_for_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 3) * (parcel.dist_to_school)</variable>
      <variable name="development_event_history_x_parcel.sc_distance_to_school_for_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 2) * (parcel.dist_to_school)</variable>
      <variable name="development_event_history_x_parcel.sc_recreation_for_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 3) * (parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area))</variable>
      <variable name="development_event_history_x_parcel.sc_recreation_for_Om" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 2) * (parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area))</variable>
      <variable name="development_event_history_x_parcel.sc_newcomers_for_Smc" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 3) * (zurich_parcel.parcel.young_newcomers_within_300_of_parcel)</variable>
      <variable name="development_event_history_x_parcel.sc_distance_to_school_for_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 1) * (parcel.dist_to_school)</variable>
      <variable name="development_event_history_x_parcel.sc_recreation_for_O1" source="expression" type="variable_definition" use="both">(development_event_history.developer_type == 1) * (parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area))</variable>
      <variable name="development_event_history_x_parcel.sc_multi_use_to_newcomers" source="expression" type="variable_definition" use="both">(development_event_history.building_quality_id &gt;= 1025) * (zurich_parcel.parcel.young_newcomers_within_300_of_parcel)</variable>
      <variable name="development_event_history_x_parcel.sc_SFH_to_recreation" source="expression" type="variable_definition" use="both">(development_event_history.building_quality_id == 1021) * (parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area))</variable>
      <variable name="parcel.sc_young_newcomers_within_300_of_parcel" source="Python class" type="variable_definition" use="both">zurich_parcel.parcel.young_newcomers_within_300_of_parcel</variable>
      <variable name="parcel.sc_recreation_area_share_zone" source="expression" type="variable_definition" use="both">parcel.disaggregate(zone.aggregate(numpy.ma.masked_where(parcel.plan_type_id==7000, parcel.parcel_sqft))) / parcel.disaggregate(zone.zone_area)</variable>
      <variable name="building.sc_is_residential_building_Smc" source="expression" type="variable_definition" use="both">numpy.logical_and(building.building_type_id == 1, building.developer_type == 3)</variable>
      <variable name="building.sc_is_residential_building_Om" source="expression" type="variable_definition" use="both">numpy.logical_and(building.building_type_id == 1, building.developer_type == 2)</variable>
      <variable name="building.sc_is_residential_building_O1" source="expression" type="variable_definition" use="both">numpy.logical_and(building.building_type_id == 1, building.developer_type == 1)</variable>
    </expression_library>
  </general>
  <data_manager>
    <tool_library setexpanded="True">
      <tool_group name="opus_data_import_export_tools" setexpanded="True">
        <tool name="sql_data_to_opus_tool">
          <params>
            <param name="database_name" param_type="string" required="True">cz_scenarios</param>
            <param name="table_name" param_type="string" required="True">development_event_history_20_20_60</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">data/zurich_kt_parcel/base_year_data</param>
          </params>
        </tool>
        <tool name="opus_data_to_sql_tool">
          <params>
            <param name="database_name" param_type="string" required="True">cz_scenarios</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">data/zurich_kt_parcel/base_year_data</param>
            <param name="opus_data_year" param_type="string" required="True">2000</param>
            <param name="opus_table_name" param_type="string" required="True">development_event_history_plcm_plausible_us</param>
          </params>
        </tool>
        <tool name="opus_data_to_csv_tool">
          <params>
            <param name="csv_data_path" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_li_parcel/cz_exports</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_li_parcel/base_year_data</param>
            <param name="opus_data_year" param_type="string" required="True">2000</param>
            <param name="opus_table_name" param_type="string" required="True">target_vacancies</param>
          </params>
        </tool>
        <tool name="csv_data_to_opus_tool">
          <params>
            <param name="csv_data_path" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_li_parcel/cz_imports</param>
            <param name="csv_table_name" param_type="string" required="True">SC_workplace_location_choice_specification</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_li_parcel/base_year_data</param>
          </params>
        </tool>
      </tool_group>
    </tool_library>
  </data_manager>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="sc_land_price_parcel_segmented" type="model">INWORK. Submodel id probably has to be a primary attribute.<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" type="string">sc_generic_plan_type_parc</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"></argument>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"></argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">parcel.is_street&lt;&gt;1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_land_price_parcel_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument config_name="outcome_attribute" model_dependency_type="variable" name="dependent_variable" parser_action="quote_string" type="string">purchasepricepersqmchf</argument>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">numpy.logical_and(parcel.is_street&lt;&gt;1, numpy.logical_and(parcel.purchasepricepersqmchf&lt;&gt;-1, parcel.purchasepricepersqmchf&lt;4531))</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="Centre" submodel_id="3" type="submodel">
            <description type="string">Land price in centre zones</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="parcel.sc_acc_car_parc"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_highwayaccess_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_station_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_zh_cbd_parc"></variable_spec>
              <variable_spec name="parcel.sc_fed_tax_revenue_pers"></variable_spec>
              <variable_spec name="parcel.sc_lake_view_parc"></variable_spec>
              <variable_spec name="parcel.sc_slope_parc"></variable_spec>
              <variable_spec name="parcel.sc_sun_evening_parc"></variable_spec>
              <variable_spec name="parcel.sc_taxlevel_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_and_commercial" submodel_id="2" type="submodel">
            <description type="string">Land price in residential and commercial zones</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="parcel.sc_acc_car_parc"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_highwayaccess_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_station_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_zh_cbd_parc"></variable_spec>
              <variable_spec name="parcel.sc_fed_tax_revenue_pers"></variable_spec>
              <variable_spec name="parcel.sc_lake_view_parc"></variable_spec>
              <variable_spec name="parcel.sc_slope_parc"></variable_spec>
              <variable_spec name="parcel.sc_sun_evening_parc"></variable_spec>
              <variable_spec name="parcel.sc_taxlevel_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="Residential" submodel_id="1" type="submodel">
            <description type="string">Land price in residential zones</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="parcel.sc_acc_car_parc"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_highwayaccess_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_station_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_zh_cbd_parc"></variable_spec>
              <variable_spec name="parcel.sc_fed_tax_revenue_pers"></variable_spec>
              <variable_spec name="parcel.sc_lake_view_parc"></variable_spec>
              <variable_spec name="parcel.sc_slope_parc"></variable_spec>
              <variable_spec name="parcel.sc_sun_evening_parc"></variable_spec>
              <variable_spec name="parcel.sc_taxlevel_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_land_price_parcel_extensive" type="model">INWORK. correct table names for storing values <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" type="string"></argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"></argument>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"></argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">parcel.is_street&lt;&gt;1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_land_price_parcel_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument config_name="outcome_attribute" model_dependency_type="variable" name="dependent_variable" parser_action="quote_string" type="string">purchasepricepersqmchf</argument>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">numpy.logical_and(parcel.is_street&lt;&gt;1, numpy.logical_and(parcel.purchasepricepersqmchf&lt;&gt;-1, parcel.purchasepricepersqmchf&lt;4531))</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="Submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="parcel.sc_acc_car_parc"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_highwayaccess_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_station_parc"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_zh_cbd_parc"></variable_spec>
              <variable_spec name="parcel.sc_fed_tax_revenue_pers"></variable_spec>
              <variable_spec name="parcel.sc_lake_view_parc"></variable_spec>
              <variable_spec name="parcel.sc_slope_parc"></variable_spec>
              <variable_spec name="parcel.sc_sun_evening_parc"></variable_spec>
              <variable_spec name="parcel.sc_taxlevel_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_land_price_parcel_2" type="model">Including dummies for generic plan types<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" type="string"></argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"></argument>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"></argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">parcel.is_street&lt;&gt;1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_2_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_land_price_parcel_2_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument config_name="outcome_attribute" model_dependency_type="variable" name="dependent_variable" parser_action="quote_string" type="string">purchasepricepersqmchf</argument>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">numpy.logical_and(parcel.is_street&lt;&gt;1, numpy.logical_and(parcel.purchasepricepersqmchf&lt;&gt;-1, parcel.purchasepricepersqmchf&lt;4531))</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_2_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="Submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="parcel.sc_fed_tax_revenue_pers"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_2_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_3_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_5_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_7_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_9_parc"></variable_spec>
              <variable_spec name="parcel.sc_lake_view_parc"></variable_spec>
              <variable_spec name="parcel.sc_slope_parc"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_land_price_parcel_6" type="model">Duplicate 4, removing municipal_taxindex because of wrong sign<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" type="string"></argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"></argument>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"></argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">parcel.is_street&lt;&gt;1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_6_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_land_price_parcel_6_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument config_name="outcome_attribute" model_dependency_type="variable" name="dependent_variable" parser_action="quote_string" type="string">purchasepricepersqmchf</argument>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">numpy.logical_and(parcel.is_street&lt;&gt;1, numpy.logical_and(parcel.purchasepricepersqmchf&lt;&gt;-1, parcel.purchasepricepersqmchf&lt;4531))</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_6_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="Submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_zh_cbd_parc"></variable_spec>
              <variable_spec name="parcel.sc_fed_tax_revenue_pers"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_2_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_3_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_5_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_7_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_9_parc"></variable_spec>
              <variable_spec name="parcel.sc_lake_view_parc"></variable_spec>
              <variable_spec name="parcel.sc_sun_evening_parc"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_land_price_parcel_4" type="model">Duplicate 2, replicate model 4 estimated in R<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" type="string"></argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"></argument>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"></argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">parcel.is_street&lt;&gt;1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_4_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_land_price_parcel_4_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument config_name="outcome_attribute" model_dependency_type="variable" name="dependent_variable" parser_action="quote_string" type="string">purchasepricepersqmchf</argument>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">numpy.logical_and(parcel.is_street&lt;&gt;1, numpy.logical_and(parcel.purchasepricepersqmchf&lt;&gt;-1, parcel.purchasepricepersqmchf&lt;4531))</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_4_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="Submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_zh_cbd_parc"></variable_spec>
              <variable_spec name="parcel.sc_fed_tax_revenue_pers"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_2_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_3_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_5_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_7_parc"></variable_spec>
              <variable_spec name="parcel.sc_generic_plan_type_9_parc"></variable_spec>
              <variable_spec name="parcel.sc_lake_view_parc"></variable_spec>
              <variable_spec name="parcel.sc_municipal_taxindex_parc"></variable_spec>
              <variable_spec name="parcel.sc_sun_evening_parc"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_land_price_parcel" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" type="string"></argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"></argument>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"></argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">parcel.is_street&lt;&gt;1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_land_price_parcel_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument config_name="outcome_attribute" model_dependency_type="variable" name="dependent_variable" parser_action="quote_string" type="string">purchasepricepersqmchf</argument>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string">parcel</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">numpy.logical_and(parcel.is_street&lt;&gt;1, numpy.logical_and(parcel.purchasepricepersqmchf&lt;&gt;-1, parcel.purchasepricepersqmchf&lt;4531))</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_land_price_parcel_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="Submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_zh_cbd_parc"></variable_spec>
              <variable_spec name="parcel.sc_fed_tax_revenue_pers"></variable_spec>
              <variable_spec name="parcel.sc_lake_view_parc"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="median_land_price_city_temp" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" type="string"></argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"></argument>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"></argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">city</argument>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output hidden="False" name="output" type="string">median_landprice_sim</output>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string"></argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">median_land_price_city_temp_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">median_land_price_city_temp_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument model_dependency_type="dataset" name="dataset" type="string">city</argument>
            <argument config_name="outcome_attribute" model_dependency_type="variable" name="dependent_variable" parser_action="quote_string" type="string">city.median_landprice</argument>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" model_dependency_type="dataset" name="dataset" type="string">city</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="dataset_filter" parser_action="quote_string" type="string">numpy.logical_or(city_id == 1, city_id==2)</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">median_land_price_city_temp_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="City2" submodel_id="2" type="submodel">
            <description type="string">Time series model for municipality 2</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="city.sc_year"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="City1" submodel_id="1" type="submodel">
            <description type="string">Time series model for municipality 1</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"></variable_spec>
              <variable_spec name="city.sc_year"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model hidden="False" name="SC_BLCM" type="model">Use single buildings in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_7000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">BuildingLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">BLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_BLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_BLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_BLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_DNRPLCM" type="model">Use projects (aggregate buildings per project) and developer type in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_between_2999_and_7000, numpy.logical_and(parcel.is_street==0, sc_has_floor_capacity))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">developer_type</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">DeveloperNonResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">DNRPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area * stories</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">sc_existing_floor_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_DNRPLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_DNRPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_DNRPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" name="O1" submodel_id="1" type="submodel">
            <description type="string">Submodel self owning/letting developers with one project locating non-residential buildings.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Om" submodel_id="2" type="submodel">
            <description type="string">Submodel for self owning/letting developers locating non-residential projects.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Smc" submodel_id="3" type="submodel">
            <description type="string">Submodel for selling developers locating non-residential projects.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_NRPLCM_D" type="model">Use aggregate buildings per project in development_event_history use dummies to estimate parameters per developer_type<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_between_2999_and_7000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">NonResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">NRPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_D_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_NRPLCM_D_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_D_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_newcomers_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_newcomers_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_newcomers_for_Smc"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_NRPLCM_5" type="model">Use aggregate buildings per project in development_event_history, remove correlated variables; removing price variable because of bad quality<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_between_2999_and_7000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">NonResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">NRPLCM_5</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_5_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_NRPLCM_5_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_5_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_NRPLCM_4" type="model">Use aggregate buildings per project in development_event_history, remove correlated variables; removing price variable because of bad quality<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_between_2999_and_7000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">NonResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">NRPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_4_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_NRPLCM_4_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_4_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_NRPLCM_3" type="model">Use aggregate buildings per project in development_event_history, remove correlated variables; removing price variable because of bad quality<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_between_2999_and_7000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">NonResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">NRPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_3_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_NRPLCM_3_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_3_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_NRPLCM_2" type="model">Use aggregate buildings per project in development_event_history, remove correlated variables<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_between_2999_and_7000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">NonResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">NRPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_2_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_NRPLCM_2_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_2_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_NRPLCM" type="model">Use aggregate buildings per project in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_between_2999_and_7000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">NonResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">NRPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_NRPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_NRPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_DRPLCM_gwr" type="model">Use GWR projects (aggregate buildings per project) and ptypag as developer type in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_4000, numpy.logical_and(parcel.is_street==0, sc_has_floor_capacity))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">developer_type</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">DeveloperResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">DRPLCM_gwr</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.sc_floor_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area * stories</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">sc_existing_floor_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_DRPLCM_gwr_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_DRPLCM_gwr_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_DRPLCM_gwr_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="Private" submodel_id="1" type="submodel">
            <description type="string">Submodel for private persons.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Public" submodel_id="3" type="submodel">
            <description type="string">Submodel for institutional developers.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="Institutional" submodel_id="2" type="submodel">
            <description type="string">Submodel for institutional developers.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_DRPLCM_project_type" type="model">Use projects (aggregate buildings per project), submodels per developer type in development_event_history and use dummies to estimate parameters per building_quality_type<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_4000, numpy.logical_and(parcel.is_street==0, sc_has_floor_capacity))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">developer_type</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">DeveloperResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">DRPLCM_project_type</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.sc_floor_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area * stories</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">sc_existing_floor_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_DRPLCM_project_type_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_DRPLCM_project_type_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_DRPLCM_project_type_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="O1" submodel_id="1" type="submodel">
            <description type="string">Submodel O1 developer.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_SFH_to_recreation"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_multi_use_to_newcomers"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="Om" submodel_id="2" type="submodel">
            <description type="string">Submodel Om developer.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Smc" submodel_id="3" type="submodel">
            <description type="string">Submodel Smc developer</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_DRPLCM" type="model">Use projects (aggregate buildings per project) and developer type in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_4000, numpy.logical_and(parcel.is_street==0, sc_has_floor_capacity))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">developer_type</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">DeveloperResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">DRPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.sc_floor_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area * stories</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">sc_existing_floor_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_DRPLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_DRPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_DRPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="O1" submodel_id="1" type="submodel">
            <description type="string">Submodel O1 developer.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="Om" submodel_id="2" type="submodel">
            <description type="string">Submodel Om developer.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Smc" submodel_id="3" type="submodel">
            <description type="string">Submodel Smc developer</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_D" type="model">Use aggregate buildings per project in development_event_history use dummies to estimate parameters per developer_type<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_4000, numpy.logical_and(parcel.is_street==0, sc_has_floor_capacity))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_D</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_D_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_D_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_D_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_newcomers_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_newcomers_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_newcomers_for_Smc"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_Smc"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_price_permitted_floor_m2_for_Smc"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_9_D5_1000a" type="model">Use aggregate buildings per project in development_event_history, use sample of 1000 alternatives<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel9D5</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_9_D5_1000a</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">1000</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D5_1000a_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_9_D5_1000a_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D5_1000a_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Smc"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Smc"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_9_D5_panel" type="model">add bhnr to investigate panel effect<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel9D5Panel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_9_D5_panel</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D5_panel_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_9_D5_panel_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D5_panel_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history.sc_developer_id"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Smc"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history.sc_developer_id"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Smc"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history.sc_developer_id"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_9_D5" type="model">Use aggregate buildings per project in development_event_history, allow variability where difference significant<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel9D5</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_9_D5</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D5_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_9_D5_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D5_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Smc"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Smc"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_9_D4" type="model">Use aggregate buildings per project in development_event_history, variability slope and recreation_area<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel9D4</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_9_D4</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D4_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_9_D4_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D4_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_slope_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_slope_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_slope_for_Smc"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_recreation_area_share_zone_for_Smc"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_9_D3" type="model">Use aggregate buildings per project in development_event_history, variability new_buildings<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel9D3</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_9_D3</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D3_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_9_D3_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D3_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Smc"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_new_bldgs_within_150_of_parcel_for_Smc"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_9_D2" type="model">Use aggregate buildings per project in development_event_history, variablility dev_fit<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel9D2</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_9_D2</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D2_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_9_D2_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D2_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Smc"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Smc"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln_for_Smc"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_9_D" type="model">Use aggregate buildings per project in development_event_history, variability acc (car or pt)<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel9D</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_9_D</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_9_D_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_D_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_car_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_acc_pt_for_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_10" type="model">Use aggregate buildings per project in development_event_history, use variables from RPLCM_5, remove acc due to correlation with newcomers<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel10</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_10</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_10_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_10_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_10_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_9" type="model">Use aggregate buildings per project in development_event_history, remove distance to school<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel9</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_9</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_9_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_9_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_8" type="model">Use aggregate buildings per project in development_event_history, remove newcomers variable due to correlation with acc<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel8</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_8</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_8_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_8_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_8_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_7" type="model">Use aggregate buildings per project in development_event_history, use most significant variables<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel7</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_7</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_7_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_7_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_7_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_6" type="model">Use aggregate buildings per project in development_event_history, trying pt acc for SFH<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel6</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_6</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_6_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_6_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_6_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_5" type="model">Use aggregate buildings per project in development_event_history, right acc mode<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel5</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_5</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_5_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_5_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_5_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_4" type="model">Use aggregate buildings per project in development_event_history, remove price variable<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel4</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_4</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_4_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_4_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_4_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_3" type="model">Use aggregate buildings per project in development_event_history, replacing acc_car by price variable<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel3</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_3</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_3_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_3_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_3_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_2" type="model">Use aggregate buildings per project in development_event_history, search base model, dismiss price variable and acc_pt<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel2</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM_2</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_2_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">sc_RPLCM_2_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">sc_RPLCM_2_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_recreation_area_share_zone"></variable_spec>
              <variable_spec name="parcel.sc_young_newcomers_within_300_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_14" type="model">to investigate accessiblity variables, without euclidean<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_freq"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_2"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_3"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_freq"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_2"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_3"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_freq"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_2"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_3"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_13" type="model">to investigate accessiblity variables, with euclidean 300 beta 0.2<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_freq"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_2"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_3"></variable_spec>
              <variable_spec name="parcel.sc_euclidean_job_acc_300_beta_0_2"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_freq"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_2"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_3"></variable_spec>
              <variable_spec name="parcel.sc_euclidean_job_acc_300_beta_0_2"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_freq"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_O1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Om"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_Smc"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_1"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_2"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dummy_purpose_3"></variable_spec>
              <variable_spec name="parcel.sc_euclidean_job_acc_300_beta_0_2"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_12" type="model">to investigate accessiblity variables, with euclidean 300<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_euclidean_job_acc"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_euclidean_job_acc"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_euclidean_job_acc"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_11" type="model">to investigate accessiblity variables<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_18" type="model">duplicate RPLCM_17, try coefficient of real estate price and land price as proxi for profitability<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel18</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM18</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_18_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_18_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_18_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_profit_proxi"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_profit_proxi"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_profit_proxi"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_19" type="model">duplicate RPLCM_17, replace land price variable by dynamic one<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel19</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM19</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_19_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_19_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_19_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_avrg_price_per_sqm_lu_zone"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_land_price_dynamic"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_avrg_price_per_sqm_lu_zone"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_land_price_dynamic"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_avrg_price_per_sqm_lu_zone"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_land_price_dynamic"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_17" type="model">duplicate RPLCM_16, remove accessibility variables due to high correlation with rent price variable<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel17</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM17</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_17_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_17_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_17_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_avrg_price_per_sqm_lu_zone"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_land_price"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_avrg_price_per_sqm_lu_zone"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_land_price"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_avrg_price_per_sqm_lu_zone"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_land_price"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_16" type="model">duplicate RPLCM_15, add rent price per sqm<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel15</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM16</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_16_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_16_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_16_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="parcel.sc_avrg_price_per_sqm_lu_zone"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_land_price"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="parcel.sc_avrg_price_per_sqm_lu_zone"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_land_price"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="parcel.sc_avrg_price_per_sqm_lu_zone"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_land_price"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="sc_RPLCM_15" type="model">duplicate RPLCM, replace permitted floor price by land price<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel15</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM15</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_15_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_15_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_15_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_land_price"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_land_price"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_land_price"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="SC_RPLCM" type="model">Use aggregate buildings per project in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">building_quality_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_RPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_RPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">sc_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" inherit_parent_values="False" name="SFH" submodel_id="1021" type="submodel">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_school"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
            </variable_list>
          </submodel>
          <submodel hidden="Children" inherit_parent_values="False" name="Residential_with_side_use" submodel_id="1030" type="submodel">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2_step_ln"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model hidden="False" name="SC_PLCM" type="model">Use aggregate buildings per project in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument model_dependency_type="dataset" name="location_set" type="string">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">numpy.logical_and(sc_plan_type_id_smaller_7000, numpy.logical_and(parcel.is_street==0, sc_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_string" parser_action="quote_string" type="string">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">PLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="capacity_string" type="string">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">land_area</key>
              <key convert_blank_to_none="True" model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="weights_for_estimation_string" parser_action="quote_string" type="string"></key>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"></key>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_PLCM_specification</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="agents_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"></argument>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="location_id_variable" parser_action="quote_string" type="string">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument model_dependency_type="dataset" name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">SC_PLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">SC_PLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string"></argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification inherit_parent_values="False" type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">Models uses pseudo projects in which building information are aggregated per project.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.sc_acc_car"></variable_spec>
              <variable_spec name="parcel.sc_acc_pt"></variable_spec>
              <variable_spec name="development_event_history_x_parcel.sc_dev_fit_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_dist_to_station_inv_U_form"></variable_spec>
              <variable_spec name="parcel.sc_new_bldgs_within_150_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_newcomers_within_300_of_parcel"></variable_spec>
              <variable_spec name="parcel.sc_noise"></variable_spec>
              <variable_spec name="parcel.sc_price_permitted_floor_m2"></variable_spec>
              <variable_spec name="parcel.sc_slope"></variable_spec>
              <variable_spec name="parcel.sc_taxlevel_parcel"></variable_spec>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
    </models>
    <estimation_config config_name="estimation_config" name="Estimation Configuration" type="dictionary">
      <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
        <selectable name="building" type="selectable">True</selectable>
        <selectable name="household" type="selectable">True</selectable>
        <selectable name="job" type="selectable">True</selectable>
        <selectable name="parcel" type="selectable">True</selectable>
        <selectable name="buildings_for_estimation" type="selectable">False</selectable>
        <selectable name="city" type="selectable">True</selectable>
      </datasets_to_preload>
      <save_estimation_results type="boolean">True</save_estimation_results>
    </estimation_config>
    <travel_model_configuration type="dictionary">
      <matsim4urbansim type="dictionary">
        <population_sampling_rate type="float">0.01</population_sampling_rate>
        <controler_parameter type="dictionary">
          <bounding_box_bottom type="float">223900</bounding_box_bottom>
          <bounding_box_top type="float">283400</bounding_box_top>
          <bounding_box_left type="float">669200</bounding_box_left>
          <bounding_box_right type="float">710000</bounding_box_right>
        </controler_parameter>
        <accessibility_parameter type="dictionary">
          <use_MATSim_parameter type="selectable_list">
            <selectable name="use_car_parameter_from_MATSim" type="selectable">True</selectable>
            <selectable name="use_walk_parameter_from_MATSim" type="selectable">True</selectable>
          </use_MATSim_parameter>
        </accessibility_parameter>
        <matsim_data_to_compute type="selectable_list">
          <selectable name="zone2zone_impedance" type="selectable">True</selectable>
          <selectable name="agent_performance" type="selectable">True</selectable>
          <selectable name="zone_based_accessibility" type="selectable">True</selectable>
          <selectable name="parcel_based_accessibility" type="selectable">True</selectable>
        </matsim_data_to_compute>
        <custom_parameter type="string"></custom_parameter>
        <backup type="selectable_list">
          <selectable name="backup_run_data" type="selectable">True</selectable>
        </backup>
      </matsim4urbansim>
      <matsim_config type="dictionary">
        <common type="dictionary">
          <external_matsim_config type="dictionary">
            <matsim_config name="2005" type="file">project_configs/zurich_parcel/external_matsim_config_pt_v3.xml</matsim_config>
            <matsim_config name="2010" type="file">project_configs/zurich_parcel/external_matsim_config_pt_v3.xml</matsim_config>
            <matsim_config name="2015" type="file">project_configs/zurich_parcel/external_matsim_config_pt_v3.xml</matsim_config>
            <matsim_config name="2020" type="file">project_configs/zurich_parcel/external_matsim_config_pt_v3.xml</matsim_config>
            <matsim_config name="2025" type="file">project_configs/zurich_parcel/external_matsim_config_pt_v3.xml</matsim_config>
          </external_matsim_config>
          <network followers="input_plans_file,hotstart_plans_file,test_parameter,backup" type="file">data/zurich_kt_parcel/base_year_data/2000/matsim/network/network.multimodal-wu.xml.gz</network>
          <last_iteration type="integer">100</last_iteration>
          <warm_start_plans_file type="file"></warm_start_plans_file>
          <hot_start type="selectable_list">
            <selectable name="use_hot_start" type="selectable">True</selectable>
          </hot_start>
        </common>
        <accessibility type="dictionary">
          <cell_size type="integer">100</cell_size>
          <accessibility_computation_area type="selectable_list">
            <selectable name="from_shapefile" type="selectable">False</selectable>
            <selectable name="from_bounding_box" type="selectable">True</selectable>
            <selectable name="from_network" type="selectable">False</selectable>
          </accessibility_computation_area>
          <study_area_boundary_shape_file type="file"></study_area_boundary_shape_file>
          <bounding_box_top type="float">283400</bounding_box_top>
          <bounding_box_left type="float">669200</bounding_box_left>
          <bounding_box_right type="float">710000</bounding_box_right>
          <bounding_box_bottom type="float">223900</bounding_box_bottom>
        </accessibility>
        <urbansim_zone_random_location_distribution type="dictionary">
          <by_radius type="float">500.</by_radius>
          <by_zone_shape_file type="file"></by_zone_shape_file>
        </urbansim_zone_random_location_distribution>
      </matsim_config>
    </travel_model_configuration>
  </model_manager>
  <scenario_manager>
    <scenario executable="True" name="Test_Dev_run_baseline" type="scenario">
      <advanced type="category">
        <model_system type="string">zurich_parcel.model_coordinators.model_system</model_system>
        <debuglevel type="integer">4</debuglevel>
        <flush_variables type="boolean">False</flush_variables>
        <seed convert_blank_to_none="True" type="integer">None</seed>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['zurich_parcel','urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">True</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="household" type="selectable">False</selectable>
          <selectable name="living_unit" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="buildings_for_estimation" type="selectable">False</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">False<package_name type="string">zurich_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True<package_name type="string">zurich_parcel</package_name>
          </selectable>
          <selectable name="travel_data" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">True</selectable>
          <selectable name="living_units_history" type="selectable">True</selectable>
          <selectable name="city" type="selectable">True</selectable>
        </datasets_to_preload>
        <run_in_same_process type="boolean">False</run_in_same_process>
        <skip_travel_model type="boolean">False</skip_travel_model>
        <skip_non_travel_models_first_year type="boolean">False</skip_non_travel_models_first_year>
      </advanced>
      <cache_directory field_description="Parent Directory for simulation runs, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data" field_identifier="Cache Directory" name="" parser_action="prefix_with_opus_data_path" type="directory">zurich_mini_parcel/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/runs" field_identifier="Scenario Runs Directory" name="cache_directory_root" parser_action="prefix_with_opus_data_path" type="directory">zurich_mini_parcel/runs</argument>
        <argument name="cache_from_database" type="boolean">False</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument field_description="Parent Directory for simulation runs, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data" field_identifier="Cache Directory" name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">zurich_mini_parcel/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <base_year field_identifier="Base Year" name="" type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear field_identifier="First Year of Simulation" name="" type="integer">2001</firstyear>
        <lastyear field_identifier="Last Year of Simulation" name="" type="integer">2002</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="sc_external_demographic_model" type="selectable">False</selectable>
        <selectable name="sc_income_regression_model" type="selectable">False</selectable>
        <selectable name="sc_postprocess_income_regression_model" type="selectable">False</selectable>
        <selectable name="sc_car_availability_model" type="selectable">False</selectable>
        <selectable name="sc_postprocess_car_availabilty_model" type="selectable">False</selectable>
        <selectable name="sc_unset_job_id" type="selectable">False</selectable>
        <selectable name="sc_building_transition_model" type="selectable">False</selectable>
        <selectable name="sc_RBLCM" type="selectable">False</selectable>
        <selectable name="sc_NRBLCM" type="selectable">False</selectable>
        <selectable name="sc_RPLCM_9_D5_1" return_value="sc_RPLCM_9_D5" type="selectable">False</selectable>
        <selectable name="sc_NRPLCM_5_1" return_value="sc_NRPLCM_5" type="selectable">False</selectable>
        <selectable name="sc_real_estate_price_model" type="selectable">False</selectable>
        <selectable name="sc_postprocess_real_estate_price_model" type="selectable">False</selectable>
        <selectable name="sc_employment_transition_model" type="selectable">False</selectable>
        <selectable name="sc_employment_relocation_model" type="selectable">False</selectable>
        <selectable name="sc_employment_location_choice_model" type="selectable">False<group_members type="string">_all_</group_members>
        </selectable>
        <selectable name="sc_workplace_location_choice" type="selectable">False</selectable>
        <selectable name="sc_household_transition_model" type="selectable">False</selectable>
        <selectable name="sc_household_relocation_model" type="selectable">False</selectable>
        <selectable name="sc_household_location_choice_model" type="selectable">False</selectable>
      </models_to_run>
    </scenario>
    <scenario executable="True" name="Apply_REPM" type="scenario">
      <advanced type="category">
        <model_system type="string">zurich_parcel.model_coordinators.model_system</model_system>
        <debuglevel type="integer">4</debuglevel>
        <flush_variables type="boolean">False</flush_variables>
        <seed convert_blank_to_none="True" type="integer">None</seed>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['zurich_parcel','urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">True</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="household" type="selectable">False</selectable>
          <selectable name="living_unit" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="buildings_for_estimation" type="selectable">False</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">False<package_name type="string">zurich_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True<package_name type="string">zurich_parcel</package_name>
          </selectable>
          <selectable name="travel_data" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">True</selectable>
          <selectable name="living_units_history" type="selectable">True</selectable>
          <selectable name="city" type="selectable">True</selectable>
        </datasets_to_preload>
        <run_in_same_process type="boolean">False</run_in_same_process>
        <skip_travel_model type="boolean">False</skip_travel_model>
        <skip_non_travel_models_first_year type="boolean">False</skip_non_travel_models_first_year>
      </advanced>
      <cache_directory field_description="Parent Directory for simulation runs, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data" field_identifier="Cache Directory" name="" parser_action="prefix_with_opus_data_path" type="directory">zurich_kt_parcel/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/runs" field_identifier="Scenario Runs Directory" name="cache_directory_root" parser_action="prefix_with_opus_data_path" type="directory">zurich_kt_parcel/runs</argument>
        <argument name="cache_from_database" type="boolean">False</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument field_description="Parent Directory for simulation runs, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data" field_identifier="Cache Directory" name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">zurich_kt_parcel/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <base_year field_identifier="Base Year" name="" type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear field_identifier="First Year of Simulation" name="" type="integer">2000</firstyear>
        <lastyear field_identifier="Last Year of Simulation" name="" type="integer">2000</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="sc_real_estate_price_model" type="selectable">True</selectable>
        <selectable name="sc_postprocess_real_estate_price_model" type="selectable">True</selectable>
      </models_to_run>
    </scenario>
    <scenario executable="True" name="Dev_run_baseline" type="scenario">
      <advanced type="category">
        <model_system type="string">zurich_parcel.model_coordinators.model_system</model_system>
        <debuglevel type="integer">4</debuglevel>
        <flush_variables type="boolean">False</flush_variables>
        <seed convert_blank_to_none="True" type="integer">None</seed>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['zurich_parcel','urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">True</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="household" type="selectable">False</selectable>
          <selectable name="living_unit" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="buildings_for_estimation" type="selectable">False</selectable>
          <selectable name="parcel" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">False<package_name type="string">zurich_parcel</package_name>
          </selectable>
          <selectable name="development_template" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="development_template_component" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True<package_name type="string">zurich_parcel</package_name>
          </selectable>
          <selectable name="travel_data" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">True</selectable>
          <selectable name="living_units_history" type="selectable">True</selectable>
          <selectable name="city" type="selectable">True</selectable>
        </datasets_to_preload>
        <run_in_same_process type="boolean">False</run_in_same_process>
        <skip_travel_model type="boolean">False</skip_travel_model>
        <skip_non_travel_models_first_year type="boolean">False</skip_non_travel_models_first_year>
      </advanced>
      <cache_directory field_description="Parent Directory for simulation runs, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data" field_identifier="Cache Directory" name="" parser_action="prefix_with_opus_data_path" type="directory">zurich_kt_parcel/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/runs" field_identifier="Scenario Runs Directory" name="cache_directory_root" parser_action="prefix_with_opus_data_path" type="directory">zurich_kt_parcel/runs</argument>
        <argument name="cache_from_database" type="boolean">False</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument field_description="Parent Directory for simulation runs, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data" field_identifier="Cache Directory" name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">zurich_kt_parcel/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <base_year field_identifier="Base Year" name="" type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear field_identifier="First Year of Simulation" name="" type="integer">2001</firstyear>
        <lastyear field_identifier="Last Year of Simulation" name="" type="integer">2030</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="sc_external_demographic_model" type="selectable">True</selectable>
        <selectable name="sc_income_regression_model" type="selectable">True</selectable>
        <selectable name="sc_postprocess_income_regression_model" type="selectable">True</selectable>
        <selectable name="sc_car_availability_model" type="selectable">True</selectable>
        <selectable name="sc_postprocess_car_availabilty_model" type="selectable">True</selectable>
        <selectable name="sc_unset_job_id" type="selectable">True</selectable>
        <selectable name="sc_building_transition_model" type="selectable">True</selectable>
        <selectable name="sc_RBLCM" type="selectable">False</selectable>
        <selectable name="sc_NRBLCM" type="selectable">False</selectable>
        <selectable name="sc_RPLCM_9_D5_1" return_value="sc_RPLCM_9_D5" type="selectable">True</selectable>
        <selectable name="sc_NRPLCM_5_1" return_value="sc_NRPLCM_5" type="selectable">True</selectable>
        <selectable name="sc_real_estate_price_model" type="selectable">True</selectable>
        <selectable name="sc_postprocess_real_estate_price_model" type="selectable">True</selectable>
        <selectable name="sc_employment_transition_model" type="selectable">True</selectable>
        <selectable name="sc_employment_relocation_model" type="selectable">True</selectable>
        <selectable name="sc_employment_location_choice_model" type="selectable">True<group_members type="string">_all_</group_members>
        </selectable>
        <selectable name="sc_workplace_location_choice" type="selectable">True</selectable>
        <selectable name="sc_household_transition_model" type="selectable">False</selectable>
        <selectable name="sc_household_relocation_model" type="selectable">True</selectable>
        <selectable name="sc_household_location_choice_model" type="selectable">True</selectable>
      </models_to_run>
    </scenario>
    <scenario executable="True" name="test_run" type="scenario">
      <years_to_run config_name="years" type="tuple">
        <lastyear field_identifier="Last Year of Simulation" name="" type="integer">2006</lastyear>
      </years_to_run>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="sc_RBLCM" type="selectable">False</selectable>
        <selectable name="sc_NRBLCM" type="selectable">False</selectable>
        <selectable name="sc_RPLCM_9_D5_1" return_value="sc_RPLCM_9_D5" type="selectable">False</selectable>
        <selectable name="sc_NRPLCM_5_1" return_value="sc_NRPLCM_5" type="selectable">False</selectable>
        <selectable name="sc_real_estate_price_model" type="selectable">True</selectable>
        <selectable name="sc_postprocess_real_estate_price_model" type="selectable">True</selectable>
        <selectable name="sc_employment_transition_model" type="selectable">True</selectable>
        <selectable name="sc_employment_relocation_model" type="selectable">True</selectable>
        <selectable name="sc_employment_location_choice_model" type="selectable">True<group_members type="string">_all_</group_members>
        </selectable>
        <selectable name="sc_workplace_location_choice" type="selectable">True</selectable>
        <selectable name="sc_household_transition_model" type="selectable">False</selectable>
        <selectable name="sc_household_relocation_model" type="selectable">True</selectable>
        <selectable name="sc_household_location_choice_model" type="selectable">True</selectable>
      </models_to_run>
    </scenario>
  </scenario_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group">
      <indicator_batch name="collection_developers">
        <batch_visualization hidden="Children" name="city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_building_footprints_to_area', 'sc_resi_floor_space_per_capita', 'sc_jobs_to_inhabitants_ratio']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="nb_main_entities_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_nb_persons_city', 'sc_nb_living_units_city', 'sc_nb_buildings_city', 'sc_jobs_city', 'sc_nb_hh_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="nb_main_entities_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_nb_jobs_county', 'sc_nb_persons_county', 'sc_nb_buildings_county', 'sc_nb_living_units_county', 'sc_nb_hh_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_segments_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_non_residential_city', 'sc_floor_capacity_residential_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_zone" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_zone']</indicators>
          <output_type>tab</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_floor_space_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_space_newly_built_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_floor_space_sectors_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_space_transport_newly_built_county', 'sc_floor_space_trade_newly_built_county', 'sc_floor_space_service_newly_built_county', 'sc_floor_space_retail_newly_built_county', 'sc_floor_space_manufacturing_newly_built_county', 'sc_floor_space_hotel_newly_built_county', 'sc_floor_space_health_newly_built_county', 'sc_floor_space_construction_newly_built_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_floor_space_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_space_newly_built']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_floor_space_sectors_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_space_manufacturing_newly_built', 'sc_floor_space_construction_newly_built', 'sc_floor_space_trade_newly_built', 'sc_floor_space_retail_newly_built', 'sc_floor_space_hotel_newly_built', 'sc_floor_space_transport_newly_built', 'sc_floor_space_service_newly_built', 'sc_floor_space_health_newly_built']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_residential_units_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_resi_units_newly_built']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_buildings_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_buildings_newly_built']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="residential_units_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_occupied_resi_spaces', 'sc_resi_vacancy', 'sc_resi_units_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="residential_units_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_occupied_resi_spaces_city', 'sc_resi_vacancy_city', 'sc_resi_units']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="vacancy_per_sector_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_vacancy_sector99_county', 'sc_vacancy_sector8_county', 'sc_vacancy_sector7_county', 'sc_vacancy_sector6_county', 'sc_vacancy_sector5_county', 'sc_vacancy_sector4_county', 'sc_vacancy_sector3_county', 'sc_vacancy_sector2_county', 'sc_vacancy_sector1_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="travel_indicators_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_share_persons_pt_city', 'sc_share_persons_car_city', 'sc_share_persons_travelling_city', 'sc_mode_share_check_city', 'sc_person_minutes_traveled_pt_city', 'sc_person_minutes_traveled_car_city', 'sc_person_meter_traveled_pt_city', 'sc_person_meter_traveled_car_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="travel_indicators_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_share_persons_travelling_county', 'sc_mode_share_check_county', 'sc_share_persons_car_county', 'sc_share_persons_pt_county', 'sc_person_meter_traveled_pt_county', 'sc_person_minutes_traveled_pt_county', 'sc_person_minutes_traveled_car_county', 'sc_person_meter_traveled_car_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="travel_indicators">
        <batch_visualization hidden="Children" name="travel_indicators_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_share_persons_pt_city', 'sc_share_persons_car_city', 'sc_share_persons_travelling_city', 'sc_mode_share_check_city', 'sc_person_minutes_traveled_pt_city', 'sc_person_minutes_traveled_car_city', 'sc_person_meter_traveled_pt_city', 'sc_person_meter_traveled_car_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="travel_indicators_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_share_persons_travelling_county', 'sc_mode_share_check_county', 'sc_share_persons_car_county', 'sc_share_persons_pt_county', 'sc_person_meter_traveled_pt_county', 'sc_person_minutes_traveled_pt_county', 'sc_person_minutes_traveled_car_county', 'sc_person_meter_traveled_car_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="travel_indicators_debug">
        <batch_visualization hidden="Children" name="modes_and_shares" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">1</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_mode_share_check_debug_county', 'sc_share_persons_cryptic_county', 'sc_share_persons_NULL_county', 'sc_share_persons_none_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="testing">
        <batch_visualization hidden="Children" name="acc_car_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_accessibility_sum_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="collection_for_postgres_parcel">
        <batch_visualization hidden="Children" name="floor_capacity_parcel" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_expr']</indicators>
          <output_type>tab</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="nb_buildings_parcel" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_nb_buildings_parcel']</indicators>
          <output_type>tab</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="overall_numbers">
        <batch_visualization hidden="Children" name="non_resi_sqft" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">1</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_non_resi_units_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="living_units" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">1</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_nb_living_units_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="job_maps_300">
        <batch_visualization hidden="Children" name="job_density_parcel" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">300</setting>
            <setting name="mapnik_bucket_ranges">MIN,0.0000001,0.000001,0.000005,0.00001,0.00005,0.0001,0.0005,0.0001,0.0005,MAX</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_job_density_parcel']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="jobs_per_city" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">300</setting>
            <setting name="mapnik_bucket_ranges">equal_percentage_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_jobs_city']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="jobs_per_parcel" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">300</setting>
            <setting name="mapnik_bucket_ranges">MIN,1,10,20,30,40,50,60,70,80,MAX</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_jobs_per_parcel']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="job_maps_96">
        <batch_visualization hidden="Children" name="job_density_parcel" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">MIN,0.0000001,0.000001,0.000005,0.00001,0.00005,0.0001,0.0005,0.0001,0.0005,MAX</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_job_density_parcel']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="jobs_per_city" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">equal_percentage_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_jobs_city']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="jobs_per_parcel" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">17,11</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">MIN,1,10,20,30,40,50,60,70,80,MAX</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_jobs_per_parcel']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="collection_for_postgres">
        <batch_visualization hidden="Children" name="nb_main_entities_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_nb_persons_city', 'sc_nb_living_units_city', 'sc_nb_buildings_city', 'sc_jobs_city', 'sc_nb_hh_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="nb_main_entities_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_nb_jobs_county', 'sc_nb_persons_county', 'sc_nb_buildings_county', 'sc_nb_living_units_county', 'sc_nb_hh_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_segments_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_non_residential_city', 'sc_floor_capacity_residential_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_zone" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_zone']</indicators>
          <output_type>tab</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_floor_space_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_space_newly_built_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_floor_space_sectors_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_space_transport_newly_built_county', 'sc_floor_space_trade_newly_built_county', 'sc_floor_space_service_newly_built_county', 'sc_floor_space_retail_newly_built_county', 'sc_floor_space_manufacturing_newly_built_county', 'sc_floor_space_hotel_newly_built_county', 'sc_floor_space_health_newly_built_county', 'sc_floor_space_construction_newly_built_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_floor_space_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_space_newly_built']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_floor_space_sectors_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_space_manufacturing_newly_built', 'sc_floor_space_construction_newly_built', 'sc_floor_space_trade_newly_built', 'sc_floor_space_retail_newly_built', 'sc_floor_space_hotel_newly_built', 'sc_floor_space_transport_newly_built', 'sc_floor_space_service_newly_built', 'sc_floor_space_health_newly_built']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_residential_units_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_resi_units_newly_built']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="new_buildings_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_buildings_newly_built']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="residential_units_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_occupied_resi_spaces', 'sc_resi_vacancy', 'sc_resi_units_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="residential_units_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_occupied_resi_spaces_city', 'sc_resi_vacancy_city', 'sc_resi_units']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="vacancy_per_sector_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_vacancy_sector99_county', 'sc_vacancy_sector8_county', 'sc_vacancy_sector7_county', 'sc_vacancy_sector6_county', 'sc_vacancy_sector5_county', 'sc_vacancy_sector4_county', 'sc_vacancy_sector3_county', 'sc_vacancy_sector2_county', 'sc_vacancy_sector1_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="travel_indicators_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_share_persons_pt_city', 'sc_share_persons_car_city', 'sc_share_persons_travelling_city', 'sc_mode_share_check_city', 'sc_person_minutes_traveled_pt_city', 'sc_person_minutes_traveled_car_city', 'sc_person_meter_traveled_pt_city', 'sc_person_meter_traveled_car_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="travel_indicators_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_share_persons_travelling_county', 'sc_mode_share_check_county', 'sc_share_persons_car_county', 'sc_share_persons_pt_county', 'sc_person_meter_traveled_pt_county', 'sc_person_minutes_traveled_pt_county', 'sc_person_minutes_traveled_car_county', 'sc_person_meter_traveled_car_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="price_statistics">
        <batch_visualization hidden="Children" name="price_statistics_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
            <setting name="database_name">cz_temp</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_rent_price_sd_city', 'sc_rent_price_mean_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="vacancies_per_sector">
        <batch_visualization hidden="Children" name="county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_vacancy_sector99_county', 'sc_vacancy_sector8_county', 'sc_vacancy_sector7_county', 'sc_vacancy_sector6_county', 'sc_vacancy_sector5_county', 'sc_vacancy_sector4_county', 'sc_vacancy_sector3_county', 'sc_vacancy_sector2_county', 'sc_vacancy_sector1_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="development_capacity">
        <batch_visualization hidden="Children" name="floor_capacity_county" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_county']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_ani_zone" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">1</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['sc_floor_capacity_zone']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_zone" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_zone']</indicators>
          <output_type>tab</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_city" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_floor_capacity_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_map_zone" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_floor_capacity_zone']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="floor_capacity_map_city" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_floor_capacity_city']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="parcel_map_96">
        <batch_visualization hidden="Children" name="accessibilities" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.5,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_acc_pt', 'sc_acc_car']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="area_capacity" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_floor_capacity_expr', 'sc_area_capacity']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="parcel_map_300">
        <batch_visualization hidden="Children" name="accessibilities" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.5,5.0</setting>
            <setting name="mapnik_resolution">300</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_acc_pt', 'sc_acc_car']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" name="area_capacity" type="batch_visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">300</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['sc_floor_capacity_expr', 'sc_area_capacity']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="vacancy">
        <batch_visualization hidden="Children" name="Residential" type="batch_visualization">
          <indicators>['sc_occupied_resi_spaces_city', 'sc_resi_vacancy_city', 'sc_resi_units', 'sc_target_resi_units']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
        <batch_visualization hidden="Children" name="Non_resi" type="batch_visualization">
          <indicators>['sc_target_non_resi_units', 'sc_non_resi_vacancy_city', 'sc_non_resi_units_city', 'sc_occupied_non_resi_spaces_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
          <visualization_type>tab</visualization_type>
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">1</setting>
          </settings>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="accessibility">
        <batch_visualization hidden="Children" name="per_city" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">1</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_avg_car_accessibility_city']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="persons">
        <batch_visualization hidden="Children" name="employment_check" type="batch_visualization">
          <settings>
            <setting name="append_col_type">False</setting>
            <setting name="output_style">1</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['sc_workstat_1_without_job_id', 'sc_workstat_0_with_job_id']</indicators>
          <output_type>tab</output_type>
          <dataset_name>county</dataset_name>
        </batch_visualization>
      </indicator_batch>
    </indicator_batches>
  </results_manager>
</opus_project>
