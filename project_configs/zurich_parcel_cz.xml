<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <!--<parent type="file">zurich_parcel/configs/zurich_li_parcel.xml</parent>-->
    <!--<parent type="file">zurich_parcel/configs/zurich_li_parcel.xml</parent>-->
    <!--<parent type="file">zurich_parcel/configs/zurich_li_parcel.xml</parent>-->
    <!--<parent type="file">zurich_parcel/configs/zurich_li_parcel.xml</parent>-->
    <!--<parent type="file">zurich_parcel/configs/zurich_li_parcel.xml</parent>-->
    <parent type="file">zurich_parcel/configs/li_cache.xml</parent>
    <parent type="file">zurich_parcel/configs/zurich_kt_parcel.xml</parent>
    <expression_library type="dictionary">
      <variable use="both" source="expression" name="city.SC_target_non_resi_units" type="variable_definition">numpy.round(city.aggregate(zurich_parcel.building.SC_occupied_spaces_0, intermediates=[parcel]) / (1 - 0.04))</variable>
      <variable use="both" source="expression" name="city.SC_target_resi_units" type="variable_definition">numpy.round(city.aggregate(zurich_parcel.building.SC_occupied_spaces_1, intermediates=[parcel]) / (1 - 0.0066))</variable>
      <variable use="indicator" source="Python class" name="parcel.SC_jobs_per_parcel" type="variable_definition">urbansim_parcel.parcel.number_of_jobs</variable>
      <variable use="indicator" source="Python class" name="parcel.SC_area_capacity" type="variable_definition">zurich_parcel.parcel.area_capacity</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect99_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_99, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect49_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_49, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect8_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_8, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect7_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_7, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect6_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_6, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect5_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_5, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect4_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_4, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect3_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_3, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect2_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_2, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_sect1_city" type="variable_definition">city.aggregate(urbansim_parcel.building.number_of_jobs_of_sector_1, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="city.SC_jobs_city" type="variable_definition">city.aggregate(building.number_of_agents(jobs), intermediates=[parcel])</variable>
      <variable use="indicator" source="Python class" name="building.SC_occupied_buildings_sqft_by_jobs" type="variable_definition">urbansim_parcel.building.occupied_building_sqft_by_jobs</variable>
      <variable use="indicator" source="expression" name="city.SC_non_resi_vacancy_city" type="variable_definition">(1 - ((city.aggregate(zurich_parcel.building.SC_occupied_spaces_0, intermediates=[parcel]))) / (city.aggregate(zurich_parcel.building.SC_total_spaces_0, intermediates=[parcel])))</variable>
      <variable use="indicator" source="expression" name="city.SC_non_resi_units_city" type="variable_definition">city.aggregate(zurich_parcel.building.SC_total_spaces_0, intermediates=[parcel])</variable>
      <variable use="indicator" source="expression" name="city.SC_occupied_non_resi_spaces_city" type="variable_definition">city.aggregate(zurich_parcel.building.SC_occupied_spaces_0, intermediates=[parcel])</variable>
      <variable use="indicator" source="expression" name="city.SC_occupied_resi_spaces_city" type="variable_definition">city.aggregate(zurich_parcel.building.SC_occupied_spaces_1, intermediates=[parcel])</variable>
      <variable use="indicator" source="expression" name="city.SC_resi_vacancy_city" type="variable_definition">(1 - ((city.aggregate(building.number_of_agents(households), intermediates=[parcel]))) / (city.aggregate(zurich_parcel.building.SC_occupied_spaces_1, intermediates=[parcel])))</variable>
      <variable use="indicator" source="expression" name="city.SC_nb_hh_city" type="variable_definition">city.aggregate(building.number_of_agents(households), intermediates=[parcel])</variable>
      <variable use="indicator" source="expression" name="city.SC_resi_units" type="variable_definition">city.aggregate(zurich_parcel.building.SC_total_spaces_1, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln" type="variable_definition">((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &lt; 0) * 4 * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)) + ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &gt; 0) * ln(((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)))</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_taxindex_jur" type="variable_definition">parcel.jurst</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_taxindex" type="variable_definition">parcel.stfuss</variable>
      <variable use="both" source="Python class" name="parcel.SC_jobs_within_300" type="variable_definition">urbansim_parcel.parcel.jobs_within_300_of_parcel</variable>
      <variable use="both" source="Python class" name="parcel.SC_newcomers_within_300_of_parcel" type="variable_definition">zurich_parcel.parcel.newcomers_within_300_of_parcel</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2" type="variable_definition">(parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)</variable>
      <variable use="both" source="expression" name="parcel.SC_jobs_and_pop_within_300" type="variable_definition">zurich_parcel.parcel.persons_within_300_of_parcel + urbansim_parcel.parcel.jobs_within_300_of_parcel</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_plan_type_id" type="variable_definition">parcel.plan_type_id</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_parcel_sqft" type="variable_definition">parcel.parcel_sqft</variable>
      <variable use="both" source="expression" name="parcel.SC_permitted_floor_m2" type="variable_definition">parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft</variable>
      <variable use="both" source="expression" name="parcel.SC_price_permitted_floor_m2" type="variable_definition">(parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft) / (parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft)</variable>
      <variable use="both" source="expression" name="parcel.SC_land_price" type="variable_definition">parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft</variable>
      <variable use="both" source="expression" name="building.SC_quality_is_residential" type="variable_definition">numpy.logical_or(numpy.logical_or(building.building_quality_id == 1021, building.building_quality_id == 1025),building.building_quality_id == 1030) </variable>
      <variable use="both" source="expression" name="building.SC_quality_is_non_residential" type="variable_definition">building.building_quality_id &gt;=1040</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_parcel_cut_off" type="variable_definition">(parcel.parcel_sqft &gt; development_event_history.land_area) * parcel.parcel_sqft - development_event_history.land_area</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_parcel_and_far" type="variable_definition">(parcel.parcel_sqft &gt; development_event_history.land_area) * parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) - (parcel.aggregate(development_event_history.land_area * development_event_history.stories) / development_event_history.land_area)</variable>
      <variable use="both" source="expression" name="parcel.SC_acc_car_and_pt" type="variable_definition">parcel.acc_car + parcel.acc_pt</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_fed_tax_revenue_pers" type="variable_definition">parcel.fed_tax_revenue_pers</variable>
      <variable use="model variable" source="Python class" name="parcel.SC_workers_within_1000" type="variable_definition">zurich_parcel.parcel.workers_within_1000_of_parcel</variable>
      <variable use="both" source="expression" name="parcel.SC_ln_jobs_and_pop_within_300" type="variable_definition">ln(zurich_parcel.parcel.persons_within_300_of_parcel + urbansim_parcel.parcel.jobs_within_300_of_parcel)</variable>
      <variable use="both" source="expression" name="parcel.SC_ln_pop_within_300" type="variable_definition">ln(zurich_parcel.parcel.persons_within_300_of_parcel)</variable>
      <variable use="both" source="expression" name="parcel.SC_ln_jobs_within_300" type="variable_definition">ln(urbansim_parcel.parcel.jobs_within_300_of_parcel)</variable>
      <variable use="both" source="expression" name="parcel.SC_dist_to_highwayaccess_inv_U_form_300" type="variable_definition">-(parcel.dist_to_highwayaccess - 300)**2</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_dist_to_highwayaccess" type="variable_definition">parcel.dist_to_highwayaccess</variable>
      <variable use="both" source="expression" name="parcel.SC_dist_to_station_inv_U_form" type="variable_definition">-(parcel.dist_to_station - 150)**2</variable>
      <variable use="model variable" source="Python class" name="parcel.SC_new_bldgs_within_150_of_parcel" type="variable_definition">zurich_parcel.parcel.new_bldgs_within_150_of_parcel</variable>
      <variable use="both" source="expression" name="parcel.SC_max_parcel_far" type="variable_definition">parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum))</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_parcel_far" type="variable_definition">parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) - (parcel.aggregate(development_event_history.land_area * development_event_history.stories) / development_event_history.land_area)</variable>
      <variable use="model variable" source="expression" name="parcel.SC_logit_foreigners_within_56_of_parcel" type="variable_definition">ln(zurich_parcel.parcel.households_foreign_within_56_of_parcel) - ln(1 - zurich_parcel.parcel.households_foreign_within_56_of_parcel)</variable>
      <variable use="both" source="Python class" name="parcel.SC_households_within_500_of_parcel" type="variable_definition">urbansim_parcel.parcel.households_within_500_of_parcel</variable>
      <variable use="both" source="expression" name="parcel.SC_noise" type="variable_definition">numpy.logical_and(parcel.dist_to_highwaynet&lt;100, parcel.dist_to_railnet&lt;100)</variable>
      <variable use="model variable" source="Python class" name="parcel.SC_new_bldgs_within_100_of_parcel" type="variable_definition">zurich_parcel.parcel.new_bldgs_within_100_of_parcel</variable>
      <variable use="both" source="Python class" name="parcel.SC_share_new_bldg_within_100_of_parcel" type="variable_definition">zurich_parcel.parcel.new_bldg_within_100_of_parcel</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_parcel" type="variable_definition">parcel.parcel_sqft - development_event_history.land_area</variable>
      <variable use="both" source="expression" name="building_x_parcel.SC_building_fit_parcel" type="variable_definition">parcel.parcel_sqft - building.land_area</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect1" type="variable_definition">(job.sector_id == 1 ) * ln(building.sqm_sector1)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect8" type="variable_definition">(job.sector_id == 8 ) * ln(building.sqm_sector8)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect7" type="variable_definition">(job.sector_id == 7 ) * ln(building.sqm_sector7)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect6" type="variable_definition">(job.sector_id == 6 ) * ln(building.sqm_sector6)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect5" type="variable_definition">(job.sector_id == 5 ) * ln(building.sqm_sector5)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect4" type="variable_definition">(job.sector_id == 4 ) * ln(building.sqm_sector4)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect3" type="variable_definition">(job.sector_id == 3 ) * ln(building.sqm_sector3)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect2" type="variable_definition">(job.sector_id == 2 ) * ln(building.sqm_sector2)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type1" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_1)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type2" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_2)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type3" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_3)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type4" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_4)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type5" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_5)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type6" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_6)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type7" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_7)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type8" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_8)</variable>
    </expression_library>
    <available_datasets type="list">['city', 'development_event_history_x_parcel', 'building_x_parcel','building','parcel','household','business','household_x_building','zone','tract','district14','district24','alldata','pdist','buildings_for_estimation', 'development_event_history', 'job_x_building']</available_datasets>
  </general>
  <data_manager>
    <tool_library setexpanded="True">
      <tool_group name="opus_data_import_export_tools" setexpanded="True">
        <tool name="sql_data_to_opus_tool">
          <params>
            <param name="database_name" param_type="string" required="True">cz_by_test</param>
            <param name="table_name" param_type="string" required="True">development_event_history_PLCM</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">data/zurich_kt_parcel/base_year_data</param>
          </params>
        </tool>
        <tool name="opus_data_to_sql_tool">
          <params>
            <param name="database_name" param_type="string" required="True">cz_us_run2</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_mini_parcel/runs/run_103.run_2012_06_20_13_19</param>
            <param name="opus_data_year" param_type="string" required="True">ALL</param>
            <param name="opus_table_name" param_type="string" required="True">ALL</param>
          </params>
        </tool>
        <tool name="opus_data_to_csv_tool">
          <params>
            <param name="csv_data_path" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_li_parcel/cz_exports</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_li_parcel/base_year_data</param>
            <param name="opus_data_year" param_type="string" required="True">2000</param>
            <param name="opus_table_name" param_type="string" required="True">target_vacancies</param>
          </params>
        </tool>
        <tool name="csv_data_to_opus_tool">
          <params>
            <param name="csv_data_path" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_kt_parcel/cz_exports</param>
            <param name="csv_table_name" param_type="string" required="True">development_event_history_small</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_kt_parcel/base_year_data</param>
          </params>
        </tool>
      </tool_group>
    </tool_library>
  </data_manager>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="SC_building_transition_model" type="model">
        <structure type="dictionary">
          <import hidden="False" name="import" type="dictionary">
            <class_module type="string">zurich_parcel.models.real_estate_transition_model</class_module>
            <class_name>RealEstateTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="False" name="name" type="string">RealEstateTransitionModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">_DISCARD</output>
            <argument name="storage" type="string">base_cache_storage</argument>
            <argument name="dataset_name" parser_action="quote_string" type="string">target_vacancy</argument>
            <argument name="table_name" parser_action="quote_string" type="string">target_vacancies</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">building, new_building_index</output>
            <argument name="realestate_dataset" type="string">building</argument>
            <argument name="year" type="string">year</argument>
            <argument name="occupied_spaces_variable" parser_action="quote_string" type="string">SC_occupied_spaces</argument>
            <argument name="total_spaces_variable" parser_action="quote_string" type="string">SC_total_spaces</argument>
            <argument name="sample_from_dataset" type="string">development_event_history</argument>
            <argument name="reset_attribute_value" type="string">{'parcel_id':-1}</argument>.
            <argument name="append_to_realestate_dataset" type="string">True</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="sample_filter" type="string">None</argument>
            <argument name="resources" type="string">model_resources</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">target_vacancy_rate</argument>
          </run>
        </structure>
      </model>
      <model name="SC_NRBLCM_from_template" type="model">Use single buildings in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(SC_plan_type_id_between_2999_and_7000, numpy.logical_and(parcel.is_street==0, SC_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">NonResidentialBuildingLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">NRBLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" name="number_of_units_string" parser_action="quote_string" type="string" model_dependency_type="variable">land_area</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" parser_action="quote_string" type="string" model_dependency_type="variable">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_NRBLCM_from_template_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">SC_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_NRBLCM_from_template_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_NRBLCM_from_template_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">SC_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">Model using single non-residential buildings.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.SC_acc_car"/>
              <variable_spec name="parcel.SC_acc_pt"/>
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln"/>
              <variable_spec name="parcel.SC_new_bldgs_within_150_of_parcel"/>
              <variable_spec name="parcel.SC_newcomers_within_300_of_parcel"/>
              <variable_spec name="parcel.SC_price_permitted_floor_m2"/>
              <variable_spec name="parcel.SC_slope"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="SC_RBLCM_from_template" type="model">Use single buildings in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(SC_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, SC_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">building_quality_id</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialBuildingLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RBLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" name="number_of_units_string" parser_action="quote_string" type="string" model_dependency_type="variable">land_area</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" parser_action="quote_string" type="string" model_dependency_type="variable">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_RBLCM_from_template_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">SC_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_RBLCM_from_template_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_RBLCM_from_template_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">SC_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="SFH" submodel_id="1021" type="submodel" inherit_parent_values="False">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.SC_acc_car"/>
              <variable_spec name="parcel.SC_acc_pt"/>
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln"/>
              <variable_spec name="parcel.SC_dist_to_school"/>
              <variable_spec name="parcel.SC_new_bldgs_within_150_of_parcel"/>
              <variable_spec name="parcel.SC_newcomers_within_300_of_parcel"/>
              <variable_spec name="parcel.SC_price_permitted_floor_m2"/>
              <variable_spec name="parcel.SC_slope"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.SC_acc_car"/>
              <variable_spec name="parcel.SC_acc_pt"/>
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln"/>
              <variable_spec name="parcel.SC_new_bldgs_within_150_of_parcel"/>
              <variable_spec name="parcel.SC_newcomers_within_300_of_parcel"/>
              <variable_spec name="parcel.SC_price_permitted_floor_m2"/>
              <variable_spec name="parcel.SC_slope"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="Residential with side use" submodel_id="1030" type="submodel" inherit_parent_values="False">
            <description type="string">Submodel for residential buildings with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.SC_acc_car"/>
              <variable_spec name="parcel.SC_acc_pt"/>
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln"/>
              <variable_spec name="parcel.SC_new_bldgs_within_150_of_parcel"/>
              <variable_spec name="parcel.SC_price_permitted_floor_m2"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="employment_location_choice_model" type="model">
        <dependencies type="list">['employment_relocation_model']</dependencies>
        <structure type="dictionary">
          <group_by_attribute type="list">('home_based_status', 'name')</group_by_attribute>
          <estimate type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument hidden="True" name="agents_index" type="string">index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">specification</argument>
            <output hidden="True" name="output" type="string">(coefficients, _)</output>
          </estimate>
          <init type="dictionary">
            <argument name="sample_size_locations" type="integer">50</argument>
            <argument name="estimation_size_agents" type="float">2</argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">jobs</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">employment_location_choice_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">(job.building_id&gt;0)</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel_group name="home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.SC_ln_dist_to_station"/>
              </variable_list>
            </submodel>
          </submodel_group>
          <submodel_group name="non_home_based" type="submodel_group">
            <submodel hidden="Children" name="manufacturing" submodel_id="1" type="submodel">
              <description type="string">manufacturing</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_building.RH_ln_surf_sect1"/>
                <variable_spec name="zone.RH_zone_jobs_type2"/>
                <variable_spec name="zone.RH_zone_jobs_type3"/>
                <variable_spec name="building.SC_dist_to_highway"/>
                <variable_spec name="building.SC_dist_to_station"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="construction" submodel_id="2" type="submodel">
              <description type="string">construction</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_building.RH_ln_surf_sect2"/>
                <variable_spec name="job_x_building.RH_zone_jobs_same"/>
                <variable_spec name="zone.RH_zone_jobs_type4"/>
                <variable_spec name="zone.RH_zone_jobs_type5"/>
                <variable_spec name="building.SC_dist_to_highway"/>
                <variable_spec name="building.SC_dist_to_station"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="trade" submodel_id="3" type="submodel">
              <description type="string">trade</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_building.RH_ln_surf_sect3"/>
                <variable_spec name="job_x_building.RH_zonal_income_trade"/>
                <variable_spec name="job_x_building.RH_zone_jobs_same"/>
                <variable_spec name="zone.RH_zone_jobs_type1"/>
                <variable_spec name="zone.RH_zone_jobs_type4"/>
                <variable_spec name="building.SC_dist_to_highway"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="retail" submodel_id="4" type="submodel">
              <description type="string">retail</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_building.RH_ln_surf_sect4"/>
                <variable_spec name="job_x_building.RH_pop_dens_trade"/>
                <variable_spec name="job_x_building.RH_zone_jobs_same"/>
                <variable_spec name="zone.RH_zone_jobs_type7"/>
                <variable_spec name="building.SC_dist_to_highway"/>
                <variable_spec name="building.SC_dist_to_station"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="hotels_restaurants" submodel_id="5" type="submodel">
              <description type="string">hotels_restaurants</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_building.RH_ln_surf_sect5"/>
                <variable_spec name="job_x_building.RH_zone_jobs_same"/>
                <variable_spec name="zone.RH_zone_jobs_type1"/>
                <variable_spec name="zone.RH_zone_jobs_type2"/>
                <variable_spec name="zone.RH_zone_jobs_type4"/>
                <variable_spec name="zone.RH_zone_jobs_type6"/>
                <variable_spec name="zone.RH_zone_jobs_type7"/>
                <variable_spec name="zone.RH_zone_jobs_type8"/>
                <variable_spec name="building.SC_dist_to_highway"/>
                <variable_spec name="building.SC_dist_to_station"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="transport" submodel_id="6" type="submodel">
              <description type="string">transport</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_building.RH_ln_surf_sect6"/>
                <variable_spec name="building.RH_zonal_income"/>
                <variable_spec name="job_x_building.RH_zone_jobs_same"/>
                <variable_spec name="zone.RH_zone_jobs_type3"/>
                <variable_spec name="zone.RH_zone_jobs_type5"/>
                <variable_spec name="zone.RH_zone_jobs_type7"/>
                <variable_spec name="zone.RH_zone_jobs_type8"/>
                <variable_spec name="building.SC_dist_to_highway"/>
                <variable_spec name="building.SC_dist_to_station"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="services" submodel_id="7" type="submodel">
              <description type="string">services</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_building.RH_ln_surf_sect7"/>
                <variable_spec name="job_x_building.RH_zone_jobs_same"/>
                <variable_spec name="zone.RH_zone_jobs_type1"/>
                <variable_spec name="zone.RH_zone_jobs_type4"/>
                <variable_spec name="zone.RH_zone_jobs_type5"/>
                <variable_spec name="zone.RH_zone_jobs_type8"/>
                <variable_spec name="building.SC_dist_to_highway"/>
                <variable_spec name="building.SC_dist_to_station"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="health" submodel_id="8" type="submodel">
              <description type="string">health</description>
              <variable_list type="variable_list">
                <variable_spec name="job_x_building.RH_ln_surf_sect8"/>
                <variable_spec name="zone.RH_zone_jobs_type4"/>
                <variable_spec name="zone.RH_zone_jobs_type5"/>
                <variable_spec name="zone.RH_zone_jobs_type7"/>
                <variable_spec name="building.SC_dist_to_highway"/>
                <variable_spec name="building.SC_dist_to_station"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
      <model name="SC_household_relocation_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim.models.household_relocation_model_creator</class_module>
            <class_name>HouseholdRelocationModelCreator</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">HouseholdRelocationModelCreator().get_model</name>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument name="location_id_name" parser_action="quote_string" type="string">building_id</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.upc.rate_based_probabilities</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument name="rate_storage" type="string">base_cache_storage</argument>
            <argument name="rate_table" parser_action="quote_string" type="string" model_dependency_type="table">annual_relocation_rates_for_households</argument>
            <argument name="what" parser_action="quote_string" type="string">households</argument>
            <output hidden="True" name="output" type="string">hrm_resources</output>
          </prepare_for_run>
          <run type="dictionary">
            <output hidden="True" name="output" type="string">hrm_index</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument hidden="True" name="resources" type="string">hrm_resources</argument>
          </run>
        </structure>
      </model>
      <model name="SC_BLCM" type="model" hidden="False">Use single buildings in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(SC_plan_type_id_smaller_7000, numpy.logical_and(parcel.is_street==0, SC_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">BuildingLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">BLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" name="number_of_units_string" parser_action="quote_string" type="string" model_dependency_type="variable">land_area</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" parser_action="quote_string" type="string" model_dependency_type="variable">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_BLCM_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_BLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_BLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="SC_NRPLCM" type="model">Use aggregate buildings per project in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(SC_plan_type_id_between_2999_and_7000, numpy.logical_and(parcel.is_street==0, SC_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">NonResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">NRPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" name="number_of_units_string" parser_action="quote_string" type="string" model_dependency_type="variable">land_area</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" parser_action="quote_string" type="string" model_dependency_type="variable">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_NRPLCM_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">SC_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_NRPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_NRPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">SC_quality_is_non_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.SC_acc_car"/>
              <variable_spec name="parcel.SC_acc_pt"/>
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln"/>
              <variable_spec name="parcel.SC_new_bldgs_within_150_of_parcel"/>
              <variable_spec name="parcel.SC_newcomers_within_300_of_parcel"/>
              <variable_spec name="parcel.SC_price_permitted_floor_m2"/>
              <variable_spec name="parcel.SC_slope"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="SC_RPLCM" type="model">Use aggregate buildings per project in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(SC_plan_type_id_smaller_3000, numpy.logical_and(parcel.is_street==0, SC_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">building_quality_id</argument>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ResidentialProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">RPLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" name="number_of_units_string" parser_action="quote_string" type="string" model_dependency_type="variable">land_area</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" parser_action="quote_string" type="string" model_dependency_type="variable">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_RPLCM_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">SC_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_RPLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_RPLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">SC_quality_is_residential</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="SFH" submodel_id="1021" type="submodel" inherit_parent_values="False">
            <description type="string">Submodel for single family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.SC_acc_car"/>
              <variable_spec name="parcel.SC_acc_pt"/>
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln"/>
              <variable_spec name="parcel.SC_dist_to_school"/>
              <variable_spec name="parcel.SC_new_bldgs_within_150_of_parcel"/>
              <variable_spec name="parcel.SC_newcomers_within_300_of_parcel"/>
              <variable_spec name="parcel.SC_price_permitted_floor_m2"/>
              <variable_spec name="parcel.SC_slope"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="MFH" submodel_id="1025" type="submodel">
            <description type="string">Submodel for multi family houses.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.SC_acc_car"/>
              <variable_spec name="parcel.SC_acc_pt"/>
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln"/>
              <variable_spec name="parcel.SC_new_bldgs_within_150_of_parcel"/>
              <variable_spec name="parcel.SC_newcomers_within_300_of_parcel"/>
              <variable_spec name="parcel.SC_price_permitted_floor_m2"/>
              <variable_spec name="parcel.SC_slope"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="Residential_with_side_use" submodel_id="1030" type="submodel" inherit_parent_values="False">
            <description type="string">Submodel for projects with side use.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.SC_acc_car"/>
              <variable_spec name="parcel.SC_acc_pt"/>
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln"/>
              <variable_spec name="parcel.SC_new_bldgs_within_150_of_parcel"/>
              <variable_spec name="parcel.SC_price_permitted_floor_m2"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="SC_PLCM" type="model" hidden="False">Use aggregate buildings per project in development_event_history<structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">urbansim.models.agent_location_choice_model</class_module>
            <class_name type="string">AgentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AgentLocationChoiceModel</name>
            <argument name="location_set" type="string" model_dependency_type="dataset">parcel</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices_from_index</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(SC_plan_type_id_smaller_7000, numpy.logical_and(parcel.is_street==0, SC_is_unbuilt))</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument convert_blank_to_none="True" name="location_id_string" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="model_name" parser_action="quote_string" type="string">ProjectLocationChoiceModel</argument>
            <argument name="short_name" parser_action="quote_string" type="string">PLCM</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="compute_capacity_flag" type="boolean">True</key>
              <key convert_blank_to_none="True" name="capacity_string" type="string" model_dependency_type="variable">zurich_parcel.parcel.area_capacity</key>
              <key convert_blank_to_none="True" name="number_of_units_string" parser_action="quote_string" type="string" model_dependency_type="variable">land_area</key>
              <key convert_blank_to_none="True" name="number_of_agents_string" parser_action="quote_string" type="string" model_dependency_type="variable">built_area</key>
              <key name="lottery_max_iterations" type="integer">3</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key convert_blank_to_none="True" name="weights_for_estimation_string" parser_action="quote_string" type="string" model_dependency_type="variable"/>
              <key name="sample_size_locations" type="integer">30</key>
              <key convert_blank_to_none="True" name="sample_proportion_locations" type="integer"/>
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(alcm_specification, alcm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_PLCM_specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="agents_for_estimation_table" parser_action="quote_string" type="string" model_dependency_type="table">development_event_history</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="index_to_unplace" type="string"/>
            <argument name="join_datasets" type="boolean">True</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument convert_blank_to_none="True" name="location_id_variable" parser_action="quote_string" type="string" model_dependency_type="variable">parcel_id</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(alcm_coefficients, dummy)</output>
            <argument name="agent_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="agents_index" type="string">alcm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(alcm_specification, alcm_coefficients)</output>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_PLCM_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">SC_PLCM_specification</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset"/>
            <argument convert_blank_to_none="True" name="agents_index" type="string">new_building_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="coefficients" type="string">alcm_coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="specification" type="string">alcm_specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
          </run>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">Models uses pseudo projects in which building information are aggregated per project.</description>
            <variable_list type="variable_list">
              <variable_spec name="parcel.SC_acc_car"/>
              <variable_spec name="parcel.SC_acc_pt"/>
              <variable_spec name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2"/>
              <variable_spec name="parcel.SC_dist_to_station_inv_U_form"/>
              <variable_spec name="parcel.SC_new_bldgs_within_150_of_parcel"/>
              <variable_spec name="parcel.SC_newcomers_within_300_of_parcel"/>
              <variable_spec name="parcel.SC_noise"/>
              <variable_spec name="parcel.SC_price_permitted_floor_m2"/>
              <variable_spec name="parcel.SC_slope"/>
              <variable_spec name="parcel.SC_taxlevel_parcel"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
    </models>
  </model_manager>
  <scenario_manager>
    </scenario_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group">
      <indicator_batch name="persons_map">
        <batch_visualization hidden="Children" type="batch_visualization" name="persons_city">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['SC_nb_hh_city']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="job_maps">
        <batch_visualization hidden="Children" type="batch_visualization" name="jobs_per_city">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['SC_jobs_city']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="jobs_per_parcel">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['SC_jobs_per_parcel']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="parcel_map">
        <batch_visualization hidden="Children" type="batch_visualization" name="area_capacity">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['SC_area_capacity']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="job_map">
        <batch_visualization hidden="Children" type="batch_visualization" name="nb_per_city">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['SC_jobs_city']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>city</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="vacancy">
        <batch_visualization hidden="Children" type="batch_visualization" name="Residential">
          <indicators>['SC_occupied_resi_spaces_city', 'SC_resi_vacancy_city', 'SC_resi_units', 'SC_target_resi_units']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="Non_resi">
          <indicators>['SC_non_resi_vacancy_city', 'SC_non_resi_units_city', 'SC_occupied_non_resi_spaces_city', 'SC_target_non_resi_units']</indicators>
          <output_type>tab</output_type>
          <dataset_name>city</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
      </indicator_batch>
    </indicator_batches>
  </results_manager>
</opus_project>

