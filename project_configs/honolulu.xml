<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the Honolulu project</description>
    <project_name hidden="True" type="string">honolulu</project_name>
    <parent type="file">urbansim_zone/configs/urbansim_zone.xml</parent>
    <dataset_pool_configuration type="class">
      <argument name="package_order" type="list">['urbansim_zone', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
    </dataset_pool_configuration>
    <available_datasets type="list">['job','building','household_x_building','zone','faz','large_area','gridcell','city','county','alldata']</available_datasets>
    <expression_library type="dictionary">
      <variable use="both" source="expression" name="building.jobs1_agriculture" type="variable_definition">building.aggregate(job.sector_id==1)</variable>
      <variable use="both" source="expression" name="building.jobs2_miningconstruct" type="variable_definition">building.aggregate(job.sector_id==2)</variable>
      <variable use="both" source="expression" name="building.jobs3_foodprocess" type="variable_definition">building.aggregate(job.sector_id==3)</variable>
      <variable use="both" source="expression" name="building.jobs4_manufacture" type="variable_definition">building.aggregate(job.sector_id==4)</variable>
      <variable use="both" source="expression" name="building.jobs5_transport" type="variable_definition">building.aggregate(job.sector_id==5)</variable>
      <variable use="both" source="expression" name="building.jobs6_information" type="variable_definition">building.aggregate(job.sector_id==6)</variable>
      <variable use="both" source="expression" name="building.jobs7_utilities" type="variable_definition">building.aggregate(job.sector_id==7)</variable>
      <variable use="both" source="expression" name="building.jobs8_wholesale" type="variable_definition">building.aggregate(job.sector_id==8)</variable>
      <variable use="both" source="expression" name="building.jobs9_retail" type="variable_definition">building.aggregate(job.sector_id==9)</variable>
      <variable use="both" source="expression" name="building.jobs10_finance" type="variable_definition">building.aggregate(job.sector_id==10)</variable>
      <variable use="both" source="expression" name="building.jobs11_realestate" type="variable_definition">building.aggregate(job.sector_id==11)</variable>
      <variable use="both" source="expression" name="building.jobs12_professional" type="variable_definition">building.aggregate(job.sector_id==12)</variable>
      <variable use="both" source="expression" name="building.jobs13_business" type="variable_definition">building.aggregate(job.sector_id==13)</variable>
      <variable use="both" source="expression" name="building.jobs14_education" type="variable_definition">building.aggregate(job.sector_id==14)</variable>
      <variable use="both" source="expression" name="building.jobs15_health" type="variable_definition">building.aggregate(job.sector_id==15)</variable>
      <variable use="both" source="expression" name="building.jobs16_entertain" type="variable_definition">building.aggregate(job.sector_id==16)</variable>
      <variable use="both" source="expression" name="building.jobs17_hotel" type="variable_definition">building.aggregate(job.sector_id==17)</variable>
      <variable use="both" source="expression" name="building.jobs18_eatdrink" type="variable_definition">building.aggregate(job.sector_id==18)</variable>
      <variable use="both" source="expression" name="building.jobs19_otherservices" type="variable_definition">building.aggregate(job.sector_id==19)</variable>
      <variable use="both" source="expression" name="building.jobs20_gov" type="variable_definition">building.aggregate(job.sector_id==20)</variable>
      <variable use="both" source="expression" name="building.industrial_repair_sqft" type="variable_definition">(building.building_type_id==8)*(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="building.gov_jobs" type="variable_definition">building.aggregate(job.sector_id==20)</variable>
      <variable use="both" source="expression" name="household.head_is_asian" type="variable_definition">household.aggregate((person.relation==1)*(person.race==4))</variable>
      <variable use="both" source="expression" name="household.head_is_white" type="variable_definition">household.aggregate((person.relation==1)*(person.race==1))</variable>
      <variable use="both" source="expression" name="household.wealthy_hh" type="variable_definition">household.income_group&gt;6</variable>
      <variable use="both" source="expression" name="household.workers_per_person" type="variable_definition">safe_array_divide(household.workers * 1.0,household.persons)</variable>
      <variable use="both" source="expression" name="household.avg_edu_hh" type="variable_definition">household.aggregate(person.education, function=mean)</variable>
      <variable use="both" source="expression" name="building.is_central" type="variable_definition">(building.disaggregate((zone.area_type_id&gt;3)*(zone.area_type_id&lt;7)))</variable>
      <variable use="both" source="expression" name="building.area_type1" type="variable_definition">(building.disaggregate(zone.area_type_id==1))</variable>
      <variable use="both" source="expression" name="building.area_type2" type="variable_definition">(building.disaggregate(zone.area_type_id==2))</variable>
      <variable use="both" source="expression" name="building.area_type3" type="variable_definition">(building.disaggregate(zone.area_type_id==3))</variable>
      <variable use="both" source="expression" name="building.area_type4" type="variable_definition">(building.disaggregate(zone.area_type_id==4))</variable>
      <variable use="both" source="expression" name="building.area_type5" type="variable_definition">(building.disaggregate(zone.area_type_id==5))</variable>
      <variable use="both" source="expression" name="building.area_type6" type="variable_definition">(building.disaggregate(zone.area_type_id==6))</variable>
      <variable use="both" source="expression" name="building.area_type7" type="variable_definition">(building.disaggregate(zone.area_type_id==7))</variable>
      <variable use="both" source="expression" name="building.area_type8" type="variable_definition">(building.disaggregate(zone.area_type_id==8))</variable>
      <variable use="both" source="expression" name="building.area_type9" type="variable_definition">(building.disaggregate(zone.area_type_id==9))</variable>
      <variable use="both" source="expression" name="household.area_type_id" type="variable_definition"> household.area_type + 1</variable>
      <variable use="both" source="expression" name="household.typetenurearea_id" type="variable_definition">1*((household.building_type_id==1)*(household.tenure==1)*(household.area_type==1))+2*((household.building_type_id==35)*(household.tenure==2)*(household.area_type==1))+ 3*((household.building_type_id==2)*(household.tenure==1)*(household.area_type==1))+4*((household.building_type_id==36)*(household.tenure==2)*(household.area_type==1))+ 5*((household.building_type_id==3)*(household.tenure==1)*(household.area_type==1))+6*((household.building_type_id==37)*(household.tenure==2)*(household.area_type==1))+ 7*((household.building_type_id==4)*(household.tenure==1)*(household.area_type==1))+8*((household.building_type_id==38)*(household.tenure==2)*(household.area_type==1))+ 9*((household.building_type_id==1)*(household.tenure==1)*(household.area_type==0))+10*((household.building_type_id==35)*(household.tenure==2)*(household.area_type==0))+ 11*((household.building_type_id==2)*(household.tenure==1)*(household.area_type==0))+12*((household.building_type_id==36)*(household.tenure==2)*(household.area_type==0))+ 13*((household.building_type_id==3)*(household.tenure==1)*(household.area_type==0))+14*((household.building_type_id==37)*(household.tenure==2)*(household.area_type==0))+ 15*((household.building_type_id==4)*(household.tenure==1)*(household.area_type==0))+16*((household.building_type_id==38)*(household.tenure==2)*(household.area_type==0))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_hh_in_apartment" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.building_type_id==3) + building.aggregate(household.building_type_id==37)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_largehh" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.persons&gt;3)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_oldhead" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.age_of_head&gt;64)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="zone.zone_proportion_wealthy" type="variable_definition">safe_array_divide(zone.aggregate(building.aggregate(household.income_group&gt;6)),zone.aggregate(building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="building.ln_households_within_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.households_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.ln_households_within_10_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.households_within_10_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="building.ln_pop_10_min" type="variable_definition">ln_bounded(building.disaggregate(urbansim_zone.zone.population_within_10_am_single_vehicle_to_work_travel_time_threshold))</variable>
      <variable use="both" source="expression" name="zone.zonal_households" type="variable_definition">zone.aggregate(building.number_of_agents(household))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_pop_1" type="variable_definition">ln(zone.aggregate(household.persons))</variable>
      <variable use="both" source="expression" name="building.hotel_sqft" type="variable_definition">(building.building_type_id==7)*(building.non_residential_sqft)</variable>
      <variable use="both" source="expression" name="building.land_per_nonres_sqft" type="variable_definition">(building.land_area*1.0)/building.non_residential_sqft</variable>
      <variable use="both" source="expression" name="building.average_value_per_sqft" type="variable_definition">building.average_value_per_unit * building.disaggregate(building_type.is_residential==0)</variable>
      <variable use="both" source="primary attribute" name="household.year_moved" type="variable_definition">household.year_moved</variable>
      <variable use="both" source="expression" name="building.emp_retail_200" type="variable_definition">where(building.disaggregate(zone.aggregate(job.sector_id==9))&lt;200,building.disaggregate(zone.aggregate(job.sector_id==9)),200)/200</variable>
      <variable use="both" source="expression" name="building.land_per_unit_1k" type="variable_definition">(building.land_area/building.residential_units)/1000</variable>
      <variable use="both" source="expression" name="household_x_building.children_and_lot_size" type="variable_definition">ln_bounded(household.children*((building.land_area/building.residential_units)/1000))</variable>
      <variable use="both" source="expression" name="building.ln_bldg_landarea" type="variable_definition">ln_bounded(building.land_area)</variable>
      <variable use="both" source="expression" name="building.res_sqft_per_unit_1k" type="variable_definition">building.sqft_per_unit*(building.building_type_id&lt;3)/1000</variable>
      <variable use="both" source="expression" name="building.ln_price" type="variable_definition">ln_bounded(building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="household.young_adults" type="variable_definition">(household.children==0)*(household.age_of_head&lt;35)*(household.aggregate(person.age&gt;34) ==0)*(household.aggregate(person.age&lt;25) ==0)</variable>
      <variable use="both" source="expression" name="household.renter_hh" type="variable_definition">household.tenure==2</variable>
      <variable use="both" source="expression" name="building.year_built_building" type="variable_definition">(building.year_built) * (building.year_built &gt; 0)</variable>
      <variable use="both" source="expression" name="building.apartment_unit_price" type="variable_definition">(building.building_type_id==3) * (building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="building.apartment_units" type="variable_definition">(building.building_type_id==3) * (building.residential_units)</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_val_res_sqft" type="variable_definition">safe_array_divide(building.improvement_value,building.residential_sqft)</variable>
      <variable use="both" source="expression" name="building.ln_sqft_per_unit" type="variable_definition">ln(building.sqft_per_unit)</variable>
      <variable use="both" source="primary attribute" name="building.sqft_per_unit" type="variable_definition">building.sqft_per_unit</variable>
      <variable use="both" source="expression" name="building.proportion_apartment_zone" type="variable_definition">building.disaggregate(safe_array_divide(zone.aggregate((building.residential_units)*(building.building_type_id==3)), zone.aggregate(building.residential_units)))</variable>
      <variable use="both" source="expression" name="building.ln_apartment_unit_price" type="variable_definition">ln((building.building_type_id==3) * (building.average_value_per_unit))</variable>
      <variable use="both" source="expression" name="building.ln_apartment_units" type="variable_definition">ln((building.building_type_id==3) * (building.residential_units))</variable>
      <variable use="model variable" source="expression" name="household_x_building.wkrs_hhs_ln_jobs_30_min" type="variable_definition">safe_array_divide(household.workers,household.persons)*ln_bounded(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.proportion_sf_zone" type="variable_definition">building.disaggregate(safe_array_divide(zone.aggregate((building.residential_units)*(building.building_type_id==1)), zone.aggregate(building.residential_units)))</variable>
      <variable use="both" source="expression" name="household_x_building.inc_avginc_ratio_close" type="variable_definition">(safe_array_divide(household.income,(building.aggregate(household.income, function=mean)))&gt;.8)*(safe_array_divide(household.income,(building.aggregate(household.income, function=mean)))&lt;1.2)</variable>
      <variable use="both" source="expression" name="household_x_building.children_x_apartment" type="variable_definition">(household.children&gt;1) * (building.building_type_id==3)</variable>
      <variable use="both" source="expression" name="household_x_building.highinc_yearbuilt" type="variable_definition">(household.income_group&gt;6) * (building.year_built &gt; 1990)</variable>
      <variable use="both" source="expression" name="household_x_building.younghh_apartment" type="variable_definition">(household.age_of_head &lt; 35)*(building.building_type_id == 3)</variable>
      <variable use="both" source="expression" name="building.travel_time_to_waikiki" type="variable_definition">building.disaggregate(zone.travel_time_to_waikiki)</variable>
      <variable use="both" source="expression" name="development_project_x_zone.ln_res_units_x_emp_30_min" type="variable_definition">development_project.residential_units*ln(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="both" source="expression" name="zone.zone_ln_sf_unit_price" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==9,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_mf_unit_price" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==3,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_value_per_sqft_whse" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==10,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_value_per_sqft_retail" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==7,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_avg_value_per_sqft_office" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==5,building.average_value_per_unit,0), function=mean))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_emp_10_min" type="variable_definition">ln(urbansim_parcel.zone.employment_within_10_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="model variable" source="expression" name="zone.zone_pop_density" type="variable_definition">zone.aggregate(household.persons)/zone.totacres</variable>
      <variable use="model variable" source="expression" name="zone.zone_job_density" type="variable_definition">zone.number_of_agents(job)/zone.totacres</variable>
      <variable use="both" source="expression" name="zone.zone_ln_time_cbd" type="variable_definition">ln(zone.travel_time_to_cbd)</variable>
      <variable use="both" source="expression" name="zone.zone_ln_res_units" type="variable_definition">ln(zone.aggregate(building.residential_units))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_emp_15_min" type="variable_definition">ln(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="both" source="expression" name="development_project_x_building.ln_res_units_x_zone_dev_acre" type="variable_definition">development_project.residential_units*ln(building.disaggregate(zone.dev_acre))</variable>
      <variable use="both" source="primary attribute" name="zone.zone_time_cbd" type="variable_definition">zone.travel_time_to_cbd</variable>
      <variable use="both" source="expression" name="zone.zone_mf_unit_price" type="variable_definition">zone.aggregate(where(building.building_type_id==3,building.average_value_per_unit,0), function=mean)</variable>
      <variable use="both" source="expression" name="zone.zone_sf_unit_price" type="variable_definition">zone.aggregate(where(building.building_type_id==9,building.average_value_per_unit,0), function=mean)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_mf_units" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==3,building.residential_units,0)))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_avg_income" type="variable_definition">ln(zone.aggregate(household.income, function=mean))</variable>
      <variable use="both" source="expression" name="zone.zone_ln_emp_30_min" type="variable_definition">ln(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_pop" type="variable_definition">ln(zone.aggregate(household.persons))</variable>
      <variable use="both" source="expression" name="zone.zone_tot_income" type="variable_definition">zone.aggregate(household.income)</variable>
      <variable use="both" source="expression" name="zone.zone_tot_pop" type="variable_definition">zone.aggregate(household.persons)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_retail_emp_30_min" type="variable_definition">ln(urbansim_parcel.zone.sector_5_employment_within_30_minutes_travel_time_hbw_am_drive_alone)</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_sf_units" type="variable_definition">ln(zone.aggregate(where(building.building_type_id==9,building.residential_units,0)))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_average_value_per_res_unit" type="variable_definition">ln(zone.aggregate(building.average_value_per_unit*building.disaggregate(building_type.is_residential==1), function=mean))</variable>
      <variable use="indicator" source="primary attribute" name="zone.zone_schl_district" type="variable_definition">zone.schl_district</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_average_value_per_sqft" type="variable_definition">ln(zone.aggregate(building.average_value_per_unit*building.disaggregate(building_type.is_residential==0), function=mean))</variable>
      <variable use="model variable" source="expression" name="zone.zone_ln_jobs" type="variable_definition">ln(zone.number_of_agents(job))</variable>
      <variable use="both" source="expression" name="building.ln_inv_far" type="variable_definition">ln(safe_array_divide(building.land_area, building.non_residential_sqft))</variable>
      <variable use="both" source="expression" name="building.ln_pop_zone" type="variable_definition">ln(building.disaggregate(zone.aggregate(household.persons)))</variable>
      <variable use="both" source="expression" name="building.ln_non_residential_sqft" type="variable_definition">ln(building.non_residential_sqft)</variable>
      <variable use="model variable" source="primary attribute" name="building.unit_price" type="variable_definition">building.average_value_per_unit</variable>
      <variable use="both" source="expression" name="building.is_transport" type="variable_definition">building.building_type_id==18</variable>
      <variable use="both" source="expression" name="building.is_manufacturing" type="variable_definition">building.building_type_id==9</variable>
      <variable use="both" source="expression" name="building.is_office" type="variable_definition">building.building_type_id==22</variable>
      <variable use="both" source="expression" name="building.is_parking" type="variable_definition">building.building_type_id==33</variable>
      <variable use="both" source="expression" name="building.is_warehouse" type="variable_definition">building.building_type_id==15</variable>
      <variable use="both" source="expression" name="building.is_service_shops_supplies" type="variable_definition">building.building_type_id==24</variable>
      <variable use="both" source="expression" name="building.is_neighborhood_retail" type="variable_definition">building.building_type_id==19</variable>
      <variable use="both" source="expression" name="building.is_utility" type="variable_definition">building.building_type_id==13</variable>
      <variable use="both" source="expression" name="building.is_regional_retail" type="variable_definition">building.building_type_id==20</variable>
      <variable use="both" source="expression" name="building.is_classroom" type="variable_definition">building.building_type_id==29</variable>
      <variable use="both" source="expression" name="building.is_hospital" type="variable_definition">building.building_type_id==30</variable>
      <variable use="both" source="expression" name="building.is_community" type="variable_definition">building.building_type_id==28</variable>
      <variable use="both" source="expression" name="building.is_hotel" type="variable_definition">building.building_type_id==7</variable>
      <variable use="both" source="expression" name="building.is_singlefam" type="variable_definition">building.building_type_id==1</variable>
      <variable use="both" source="expression" name="building.is_duplex" type="variable_definition">building.building_type_id==2</variable>
      <variable use="both" source="expression" name="building.is_apartment" type="variable_definition">building.building_type_id==3</variable>
      <variable use="both" source="expression" name="building.is_townhome" type="variable_definition">building.building_type_id==4</variable>
      <variable use="both" source="expression" name="building.ln_land_per_unit" type="variable_definition">ln_bounded(safe_array_divide(building.land_area, building.residential_units))</variable>
      <variable use="both" source="expression" name="household_x_building.price_income_ratio_l1" type="variable_definition">safe_array_divide(building.average_value_per_unit,household.income)&lt;1</variable>
      <variable use="both" source="expression" name="household_x_building.price_income_ratio_g5" type="variable_definition">safe_array_divide(building.average_value_per_unit,household.income)&gt;5</variable>
      <variable use="both" source="expression" name="household_x_building.ln_persons_land_per_unit" type="variable_definition">ln(household.persons*building.land_area/building.residential_units)</variable>
      <variable use="both" source="expression" name="household_x_building.ln_persons_sqft_per_unit" type="variable_definition">ln(household.persons*building.sqft_per_unit)</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_hh_income" type="variable_definition">ln(building.aggregate(household.income, function=mean))</variable>
      <variable use="both" source="expression" name="household_x_building.ln_inc_avg_inc" type="variable_definition">ln(household.income*building.aggregate(household.income, function=mean))</variable>
      <variable use="both" source="expression" name="building.land_per_unit" type="variable_definition">building.land_area/building.residential_units</variable>
      <variable use="both" source="expression" name="household_x_building.persons_land_per_unit" type="variable_definition">household.persons*building.land_area/building.residential_units</variable>
      <variable use="both" source="expression" name="household_x_building.ln_income_sqft_per_unit" type="variable_definition">ln(household.income*building.sqft_per_unit)</variable>
      <variable use="model variable" source="expression" name="household_x_building.wkrs_ln_jobs_30_min" type="variable_definition">(household.workers)*ln_bounded(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_within_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="household_x_building.income_schl_dist1" type="variable_definition">household.income/10000*building.disaggregate(zone.schl_district==1)</variable>
      <variable use="both" source="expression" name="household_x_building.persons_sqft_per_unit" type="variable_definition">household.persons*building.sqft_per_unit</variable>
      <variable use="both" source="expression" name="household_x_building.income_sqft_per_unit" type="variable_definition">household.income/10000*building.sqft_per_unit</variable>
      <variable use="both" source="expression" name="household_x_building.price_income_ratio" type="variable_definition">safe_array_divide(building.average_value_per_unit,household.income)</variable>
      <variable use="both" source="expression" name="household_x_building.income_single_family" type="variable_definition">household.income/10000*building.building_type_id==1</variable>
      <variable use="both" source="expression" name="household_x_building.persons_x_single_family" type="variable_definition">household.persons*building.building_type_id==1</variable>
      <variable use="both" source="expression" name="building.ln_number_jobs_retail" type="variable_definition">ln(building.disaggregate(urbansim.zone.number_of_jobs_of_sector_5))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_within_15_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_15_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="both" source="expression" name="building.ln_pop_density_zone" type="variable_definition">ln(43560*safe_array_divide(building.aggregate(household.persons), building.disaggregate(zone.aggregate(building.land_area))))</variable>
      <variable use="model variable" source="expression" name="building.cbd_time_sq" type="variable_definition">building.disaggregate(zone.travel_time_to_cbd)**2</variable>
      <variable use="model variable" source="expression" name="building.ln_cbd_time" type="variable_definition">ln(building.disaggregate(zone.travel_time_to_cbd))</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_hh_income_zonal" type="variable_definition">ln(building.disaggregate(zone.aggregate(household.income, function=mean)))</variable>
      <variable use="model variable" source="primary attribute" name="building.ln_avg_val_per_unit" type="variable_definition">ln(building.average_value_per_unit)</variable>
      <variable use="both" source="expression" name="building.ln_residential_units" type="variable_definition">ln(building.residential_units)</variable>
      <variable use="both" source="expression" name="building.is_single_family" type="variable_definition">building.building_type_id == 1</variable>
      <variable use="both" source="expression" name="building.ln_job_density_zone" type="variable_definition">ln(building.disaggregate(43560*safe_array_divide(zone.number_of_agents(job), zone.aggregate(building.land_area))))</variable>
      <variable use="model variable" source="primary attribute" name="building.avg_value_per_unit" type="variable_definition">building.average_value_per_unit</variable>
      <variable use="model variable" source="expression" name="building.avg_hh_income" type="variable_definition">building.aggregate(household.income, function=mean)</variable>
      <variable use="model variable" source="expression" name="building.avg_hh_income_zonal" type="variable_definition">building.disaggregate(zone.aggregate(household.income, function=mean))</variable>
      <variable use="model variable" source="expression" name="building.inv_jobs" type="variable_definition">safe_array_divide(1,(building.number_of_agents(job)),0)</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs" type="variable_definition">ln(building.number_of_agents(job))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_in_zone" type="variable_definition">ln(building.disaggregate(zone.number_of_agents(job)))</variable>
      <variable use="model variable" source="expression" name="building.ln_dev_acre_in_zone" type="variable_definition">ln(building.disaggregate(zone.dev_acre))</variable>
      <variable use="both" source="expression" name="building.zone_ln_emp_30_min" type="variable_definition">ln(building.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone))</variable>
      <variable use="model variable" source="expression" name="building.cbd_time" type="variable_definition">building.disaggregate(zone.travel_time_to_cbd)</variable>
      <variable use="model variable" source="expression" name="building.schl_dist1" type="variable_definition">building.disaggregate(zone.schl_district==1)</variable>
      <variable use="both" source="expression" name="building.ln_sf_unit_price" type="variable_definition">ln((building.building_type_id==1) * (building.average_value_per_unit))</variable>
      <variable use="both" source="expression" name="building.ln_sf_units" type="variable_definition">ln((building.building_type_id==1) * (building.residential_units))</variable>
      <variable use="both" source="expression" name="building.ln_mf_unit_price" type="variable_definition">ln((building.building_type_id==3) * (building.average_value_per_unit))</variable>
      <variable use="both" source="expression" name="building.ln_mf_units" type="variable_definition">ln((building.building_type_id==3) * (building.residential_units))</variable>
      <variable use="both" source="expression" name="building.ln_average_value_per_sqft" type="variable_definition">ln(building.average_value_per_unit * building.disaggregate(building_type.is_residential==0))</variable>
      <variable use="both" source="expression" name="household.workers_id" type="variable_definition"> 1*(household.workers==0) +2*(household.workers==1) +3*(household.workers&gt;=2)</variable>
      <variable use="both" source="expression" name="household.typetenure_id" type="variable_definition"> 1*((household.building_type_id==1)*(household.tenure==1))+2*((household.building_type_id==35)*(household.tenure==2))+ 3*((household.building_type_id==2)*(household.tenure==1))+4*((household.building_type_id==36)*(household.tenure==2))+ 5*((household.building_type_id==3)*(household.tenure==1))+6*((household.building_type_id==37)*(household.tenure==2))+ 7*((household.building_type_id==4)*(household.tenure==1))+8*((household.building_type_id==38)*(household.tenure==2))</variable>
      <variable use="both" source="primary attribute" name="household.age_of_head" type="variable_definition">household.age_of_head</variable>
      <variable use="both" source="expression" name="household.oldhead" type="variable_definition">household.age_of_head &gt; 64</variable>
      <variable use="both" source="primary attribute" name="household.persons" type="variable_definition">household.persons</variable>
      <variable use="both" source="primary attribute" name="household.children" type="variable_definition">household.children</variable>
      <variable use="both" source="primary attribute" name="household.workers" type="variable_definition">household.workers</variable>
      <variable use="both" source="primary attribute" name="household.income" type="variable_definition">household.income</variable>
      <variable use="both" source="expression" name="household.ln_income" type="variable_definition">ln(household.income)</variable>
      <variable use="both" source="expression" name="household.nonfamily" type="variable_definition">household.family_type==2</variable>
      <variable use="both" source="primary attribute" name="household.vehicles" type="variable_definition">household.vehicles</variable>
      <variable use="both" source="expression" name="household.veh_per_person" type="variable_definition">safe_array_divide(household.vehicles * 1.0,household.persons)</variable>
      <variable use="both" source="expression" name="household.enrollment_of_head" type="variable_definition">household.aggregate((person.school_enrollment&gt;1)*(person.relation ==1)) </variable>
      <variable use="both" source="primary attribute" name="household.building_type_id" type="variable_definition">household.building_type_id</variable>
      <variable use="both" source="expression" name="household.buildingtype_id" type="variable_definition"> 1*(household.building_type_id==1) +2*(household.building_type_id==2) +3*(household.building_type_id==3) + 4*(household.building_type_id==4)</variable>
      <variable use="both" source="expression" name="building.proportion_renter_hh" type="variable_definition">(safe_array_divide(building.aggregate(household.tenure==2), building.number_of_agents(household)))</variable>
      <variable use="both" source="expression" name="building.households_in_zone" type="variable_definition">building.disaggregate(zone.aggregate(building.number_of_agents(household)))</variable>
    </expression_library>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="area_type_choice_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument name="choice_set" type="string" model_dependency_type="dataset">[0,1]</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" field_description="attribute/expression specifying submodel" name="submodel_string" type="string" model_dependency_type="variable"/>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string" model_dependency_type="variable">area_type</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">area_type_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">area_type_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable">household.year_moved==1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" dynamic="True">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <equation equation_id="0" type="submodel_equation" name="Choice 0">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="1" type="submodel_equation" name="Choice 1">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.avg_edu_hh"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.enrollment_of_head"/>
                <variable_spec name="household.head_is_asian"/>
                <variable_spec name="household.head_is_white"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.nonfamily"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.renter_hh"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.wealthy_hh"/>
                <variable_spec name="household.workers_per_person"/>
                <variable_spec name="household.young_adults"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="tenure_choice_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument name="choice_set" type="string" model_dependency_type="dataset">[1,2]</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">area_type</argument>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string" model_dependency_type="variable">tenure</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">tenure_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">tenure_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable">household.year_moved==1</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" dynamic="True">
          <submodel hidden="Children" name="outer_region" submodel_id="0" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.avg_edu_hh"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.enrollment_of_head"/>
                <variable_spec name="household.head_is_asian"/>
                <variable_spec name="household.head_is_white"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.nonfamily"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.wealthy_hh"/>
                <variable_spec name="household.workers_per_person"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="inner_region" submodel_id="1" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="own">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="rent">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head"/>
                <variable_spec name="household.avg_edu_hh"/>
                <variable_spec name="household.children"/>
                <variable_spec name="constant"/>
                <variable_spec name="household.enrollment_of_head"/>
                <variable_spec name="household.head_is_asian"/>
                <variable_spec name="household.income"/>
                <variable_spec name="household.nonfamily"/>
                <variable_spec name="household.oldhead"/>
                <variable_spec name="household.persons"/>
                <variable_spec name="household.vehicles"/>
                <variable_spec name="household.wealthy_hh"/>
                <variable_spec name="household.workers_per_person"/>
                <variable_spec name="household.young_adults"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="owner_housing_type_choice_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument name="choice_set" type="string" model_dependency_type="dataset">[1,2,3,4]</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">area_type</argument>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string" model_dependency_type="variable">building_type_id</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable">(household.tenure==1)</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">owner_housing_type_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">owner_housing_type_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable">((household.year_moved==1)*(household.tenure==1))</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" dynamic="True">
          <submodel hidden="Children" name="outer_region" submodel_id="0" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="duplex_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="duplex_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="duplex_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="duplex_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="duplex_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="duplex_vehicles"/>
                <variable_spec name="household.young_adults" coefficient_name="duplex_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="apartment_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="apartment_wealthy_hh"/>
                <variable_spec name="household.workers_per_person" coefficient_name="apartment_workers_per_person"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="townhome_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="townhome_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="townhome_wealthy_hh"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
                <variable_spec name="household.young_adults" coefficient_name="townhome_young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="inner_region" submodel_id="1" type="submodel">
            <equation equation_id="1" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="2" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="duplex_children"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="duplex_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="duplex_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="duplex_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="duplex_income"/>
                <variable_spec name="household.oldhead" coefficient_name="duplex_oldhead"/>
                <variable_spec name="household.vehicles" coefficient_name="duplex_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="duplex_wealthy_hh"/>
                <variable_spec name="household.young_adults" coefficient_name="duplex_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="3" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="apartment_children"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="apartment_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="apartment_wealthy_hh"/>
                <variable_spec name="household.young_adults" coefficient_name="apartment_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="4" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="townhome_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="renter_housing_type_choice_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument name="choice_set" type="string" model_dependency_type="dataset">[35,36,37,38]</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">area_type</argument>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string" model_dependency_type="variable">building_type_id</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable">(household.tenure==2)</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">renter_housing_type_choice_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">renter_housing_type_choice_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string" model_dependency_type="variable">((household.year_moved==1)*(household.tenure==2))</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary" dynamic="True">
          <submodel hidden="Children" name="outer_region" submodel_id="0" type="submodel">
            <equation equation_id="35" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="36" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="duplex_enrollment_of_head"/>
                <variable_spec name="household.head_is_white" coefficient_name="duplex_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="duplex_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="duplex_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="duplex_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="duplex_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="duplex_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="duplex_wealthy_hh"/>
              </variable_list>
            </equation>
            <equation equation_id="37" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="apartment_children"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="apartment_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="apartment_wealthy_hh"/>
                <variable_spec name="household.young_adults" coefficient_name="apartment_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="38" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="household.children" coefficient_name="townhomechildren"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="townhome_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="townhome_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="townhome_wealthy_hh"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
                <variable_spec name="household.young_adults" coefficient_name="townhome_young_adults"/>
              </variable_list>
            </equation>
          </submodel>
          <submodel hidden="Children" name="inner_region" submodel_id="1" type="submodel">
            <equation equation_id="35" type="submodel_equation" name="sf_detached">
              <variable_list type="variable_list"/>
            </equation>
            <equation equation_id="36" type="submodel_equation" name="duplex">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="duplex_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="duplex_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="duplex_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="duplex_head_is_asian"/>
                <variable_spec name="household.income" coefficient_name="duplex_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="duplex_nonfamily"/>
                <variable_spec name="household.vehicles" coefficient_name="duplex_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="duplex_wealthy_hh"/>
                <variable_spec name="household.young_adults" coefficient_name="duplex_young_adults"/>
              </variable_list>
            </equation>
            <equation equation_id="37" type="submodel_equation" name="apartment">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="apartment_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="apartment_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="apartment_constant"/>
                <variable_spec name="household.enrollment_of_head" coefficient_name="apartment_enrollment_of_head"/>
                <variable_spec name="household.head_is_asian" coefficient_name="apartment_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="apartment_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="apartment_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="apartment_nonfamily"/>
                <variable_spec name="household.persons" coefficient_name="apartment_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="apartment_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="apartment_wealthy_hh"/>
                <variable_spec name="household.workers_per_person" coefficient_name="apartment_workers_per_person"/>
              </variable_list>
            </equation>
            <equation equation_id="38" type="submodel_equation" name="townhome">
              <variable_list type="variable_list">
                <variable_spec name="household.age_of_head" coefficient_name="townhome_age_of_head"/>
                <variable_spec name="household.avg_edu_hh" coefficient_name="townhome_avg_edu_hh"/>
                <variable_spec name="constant" coefficient_name="townhome_constant"/>
                <variable_spec name="household.head_is_asian" coefficient_name="townhome_head_is_asian"/>
                <variable_spec name="household.head_is_white" coefficient_name="townhome_head_is_white"/>
                <variable_spec name="household.income" coefficient_name="townhome_income"/>
                <variable_spec name="household.nonfamily" coefficient_name="townhome_nonfamily"/>
                <variable_spec name="household.oldhead" coefficient_name="townhome_oldhead"/>
                <variable_spec name="household.persons" coefficient_name="townhome_persons"/>
                <variable_spec name="household.vehicles" coefficient_name="townhome_vehicles"/>
                <variable_spec name="household.wealthy_hh" coefficient_name="townhome_wealthy_hh"/>
                <variable_spec name="household.workers_per_person" coefficient_name="townhome_workers_per_person"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="household_location_choice_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':6}</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">10</argument>
            <argument name="agents_index" type="string">hrm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_zone</argument>
            <argument convert_blank_to_none="True" name="location_id_string" type="string"/>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string">building.residential_units&gt;0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">household.typetenurearea_id</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">clip_to_zero(building.residential_units-building.number_of_agents(household))</argument>
            <argument name="filter" parser_action="quote_string" type="string">(building.residential_units&gt;0)*(building.disaggregate((zone.area_type_id&gt;3)*(zone.area_type_id&lt;7)))*((building_type_id==1)*((SUBMODEL==1)) + (building_type_id==2)*((SUBMODEL==3)) + (building_type_id==3)*((SUBMODEL==5)) + (building_type_id==4)*((SUBMODEL==7)) + (building_type_id==35)*((SUBMODEL==2)) + (building_type_id==36)*((SUBMODEL==4)) + (building_type_id==37)*((SUBMODEL==6)) + (building_type_id==38)*((SUBMODEL==8))) + (building.residential_units&gt;0)*(building.disaggregate(((zone.area_type_id&gt;3)*(zone.area_type_id&lt;7))==0))*((building_type_id==1)*((SUBMODEL==9)) + (building_type_id==2)*((SUBMODEL==11)) + (building_type_id==3)*((SUBMODEL==13)) + (building_type_id==4)*((SUBMODEL==15)) + (building_type_id==35)*((SUBMODEL==10)) + (building_type_id==36)*((SUBMODEL==12)) + (building_type_id==37)*((SUBMODEL==14)) + (building_type_id==38)*((SUBMODEL==16)))</argument>
            <argument name="sample_size_locations" type="integer">100</argument>
            <argument name="run_config" type="string">Resources({'lottery_max_iterations': 10,"sample_alternatives_by_submodel":True})</argument>
            <argument name="location_set" type="string">building</argument>
            <argument convert_blank_to_none="True" name="estimation_size_agents" type="string">.25</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string">clip_to_zero(building.residential_units-building.number_of_agents(household))</argument>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="estimate_config" type="string">Resources({"sample_alternatives_by_submodel":True})</argument>
            <name name="name" type="string">HouseholdLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.household_location_choice_model</class_module>
            <class_name>HouseholdLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">household_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="float">0.333333333333</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">household</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">households</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel name="sf_own" submodel_id="1" type="submodel" hidden="Children">
            <description type="string">sf_own</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="household_x_building.price_income_ratio_g5"/>
            </variable_list>
          </submodel>
          <submodel name="sf_rent" submodel_id="2" type="submodel" hidden="Children">
            <description type="string">sf_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="building.cbd_time"/>
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="household_x_building.price_income_ratio_g5"/>
            </variable_list>
          </submodel>
          <submodel name="duplex_own" submodel_id="3" type="submodel" hidden="Children">
            <description type="string">duplex_own</description>
            <variable_list type="variable_list">
              <variable_spec name="building.cbd_time"/>
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.unit_price"/>
            </variable_list>
          </submodel>
          <submodel name="duplex_rent" submodel_id="4" type="submodel" hidden="Children">
            <description type="string">duplex_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="building.cbd_time"/>
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_residential_units"/>
            </variable_list>
          </submodel>
          <submodel name="apartment_own" submodel_id="5" type="submodel" hidden="Children">
            <description type="string">apartment_own</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_residential_units"/>
            </variable_list>
          </submodel>
          <submodel name="apartment_rent" submodel_id="6" type="submodel" hidden="Children">
            <description type="string">apartment_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="household_x_building.wkrs_hhs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
          <submodel name="townhome_own" submodel_id="7" type="submodel" hidden="Children">
            <description type="string">townhome_own</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.unit_price"/>
            </variable_list>
          </submodel>
          <submodel name="townhome_rent" submodel_id="8" type="submodel" hidden="Children">
            <description type="string">townhome_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.unit_price"/>
              <variable_spec name="household_x_building.wkrs_hhs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
          <submodel name="sf_own_outer" submodel_id="9" type="submodel" hidden="Children">
            <description type="string">sf_own</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="household_x_building.income_sqft_per_unit"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="household_x_building.price_income_ratio_g5"/>
              <variable_spec name="household_x_building.wkrs_hhs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
          <submodel name="sf_rent_outer" submodel_id="10" type="submodel" hidden="Children">
            <description type="string">sf_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="household_x_building.price_income_ratio_g5"/>
              <variable_spec name="household_x_building.wkrs_hhs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
          <submodel name="duplex_own_outer" submodel_id="11" type="submodel" hidden="Children">
            <description type="string">duplex_own</description>
            <variable_list type="variable_list">
              <variable_spec name="building.cbd_time"/>
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_residential_units"/>
            </variable_list>
          </submodel>
          <submodel name="duplex_rent_outer" submodel_id="12" type="submodel" hidden="Children">
            <description type="string">duplex_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="household_x_building.wkrs_hhs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
          <submodel name="apartment_own_outer" submodel_id="13" type="submodel" hidden="Children">
            <description type="string">apartment_own</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="household_x_building.wkrs_hhs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
          <submodel name="apartment_rent_outer" submodel_id="14" type="submodel" hidden="Children">
            <description type="string">apartment_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="household_x_building.wkrs_hhs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
          <submodel name="townhome_own_outer" submodel_id="15" type="submodel" hidden="Children">
            <description type="string">townhome_own</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.unit_price"/>
              <variable_spec name="household_x_building.wkrs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
          <submodel name="townhome_rent_outer" submodel_id="16" type="submodel" hidden="Children">
            <description type="string">townhome_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="household_x_building.inc_avginc_ratio_close"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.unit_price"/>
              <variable_spec name="household_x_building.wkrs_hhs_ln_jobs_30_min"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="employment_location_choice_model" type="model">
        <dependencies type="list">['employment_relocation_model']</dependencies>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="list">('home_based_status', 'name')</group_by_attribute>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.employment_location_choice_model</class_module>
            <class_name>EmploymentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
            <argument convert_blank_to_none="True" name="number_of_units_string" type="string"/>
            <argument name="compute_capacity_flag" type="boolean">True</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">urbansim_zone.building.vacant_SSS_job_spaces</argument>
            <argument convert_blank_to_none="True" name="estimation_weight_string" parser_action="quote_string" type="string">building.non_residential_sqft&gt;0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="filter" type="string"/>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_zone</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">5</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string"/>
            </argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="estimation_size_agents" type="float">.25</argument>
            <argument name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument convert_blank_to_none="True" parser_action="quote_string" name="simulation_weight_string" type="string"/>
            <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="sample_size_locations" type="integer">50</argument>
            <name name="name" type="string">EmploymentLocationChoiceModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">employment_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="maximum_runs" type="integer">5</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="portion_to_unplace" type="integer">0</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="filter" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">jobs_for_estimation</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
        </structure>
        <specification type="dictionary">
          <submodel_group name="home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.ln_residential_units"/>
              </variable_list>
            </submodel>
          </submodel_group>
          <submodel_group name="non_home_based" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list"/>
            </submodel>
            <submodel hidden="Children" name="Agriculture" submodel_id="1" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_transport"/>
                <variable_spec name="building.land_per_nonres_sqft"/>
                <variable_spec name="building.ln_average_value_per_sqft"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_10_min"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="MiningConstruction" submodel_id="2" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.cbd_time"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_parking"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.is_warehouse"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_10_min"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="FoodProcessing" submodel_id="3" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.average_value_per_sqft"/>
                <variable_spec name="building.is_manufacturing"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_warehouse"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_10_min"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="OtherManufacturing" submodel_id="4" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.average_value_per_sqft"/>
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_manufacturing"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.is_warehouse"/>
                <variable_spec name="building.ln_jobs_within_15_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_10_min"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Transport" submodel_id="5" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.average_value_per_sqft"/>
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_regional_retail"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.is_transport"/>
                <variable_spec name="building.is_utility"/>
                <variable_spec name="building.is_warehouse"/>
                <variable_spec name="building.ln_jobs_within_15_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Information" submodel_id="6" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.avg_value_per_unit"/>
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_utility"/>
                <variable_spec name="building.is_warehouse"/>
                <variable_spec name="building.ln_jobs_within_15_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Utilities" submodel_id="7" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.average_value_per_sqft"/>
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_manufacturing"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.is_utility"/>
                <variable_spec name="building.ln_jobs_within_15_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_10_min"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Wholesale" submodel_id="8" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.average_value_per_sqft"/>
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_transport"/>
                <variable_spec name="building.is_warehouse"/>
                <variable_spec name="building.land_per_nonres_sqft"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.ln_pop_10_min"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Retail" submodel_id="9" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.avg_hh_income_zonal"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_regional_retail"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.is_warehouse"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="FinanceInsurance" submodel_id="10" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_regional_retail"/>
                <variable_spec name="building.ln_job_density_zone"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="RealEstate" submodel_id="11" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.is_warehouse"/>
                <variable_spec name="building.ln_jobs_within_15_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="ProfessionalServices" submodel_id="12" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.average_value_per_sqft"/>
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_classroom"/>
                <variable_spec name="building.is_hospital"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.is_warehouse"/>
                <variable_spec name="building.ln_jobs_within_15_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="BusinessServices" submodel_id="13" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_community"/>
                <variable_spec name="building.is_hospital"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.ln_average_value_per_sqft"/>
                <variable_spec name="building.ln_jobs_within_15_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="EducationalServices" submodel_id="14" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.avg_hh_income_zonal"/>
                <variable_spec name="building.is_classroom"/>
                <variable_spec name="building.is_community"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="HealthServices" submodel_id="15" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.average_value_per_sqft"/>
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_community"/>
                <variable_spec name="building.is_hospital"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.ln_jobs_within_15_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="ArtsEntertainment" submodel_id="16" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.is_community"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.ln_average_value_per_sqft"/>
                <variable_spec name="building.ln_jobs_within_15_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Hotels" submodel_id="17" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.hotel_sqft"/>
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.travel_time_to_waikiki"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="EatingDrinking" submodel_id="18" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_regional_retail"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
                <variable_spec name="building.travel_time_to_waikiki"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="OtherServices" submodel_id="19" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.households_in_zone"/>
                <variable_spec name="building.is_classroom"/>
                <variable_spec name="building.is_community"/>
                <variable_spec name="building.is_neighborhood_retail"/>
                <variable_spec name="building.is_office"/>
                <variable_spec name="building.is_regional_retail"/>
                <variable_spec name="building.is_service_shops_supplies"/>
                <variable_spec name="building.ln_jobs_within_30_min"/>
                <variable_spec name="building.ln_non_residential_sqft"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="Government" submodel_id="20" type="submodel">
              <description type="string">No submodel</description>
              <variable_list type="variable_list">
                <variable_spec name="building.jobs20_gov"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
      <model name="residential_development_project_location_choice_model" type="model">
        <dependencies type="list">['development_project_transition_model']</dependencies>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">projects</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">urbansim_zone.development_project.is_residential</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">building_type_id</argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Residential Development Project Location Choice Model</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_zone</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="filter" parser_action="quote_string" type="string">(building.building_type_id==SUBMODEL)*(urbansim_zone.building.developable_residential_units_capacity&gt;0)</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">3</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string">residential_units</key>
              <key name="compute_capacity_flag" type="string">True</key>
              <key name="capacity_string" type="string">urbansim_zone.building.developable_residential_units_capacity</key>
              <key name="sample_alternatives_by_submodel" type="string">True</key>
              <key convert_blank_to_none="True" name="weights_for_simulation_string" type="string"/>
              <key name="sample_size_locations" type="integer">30</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation" type="string">opus_core.bhhh_mnl_estimation</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string">residential_units</key>
              <key name="capacity_string" type="string">urbansim_zone.building.residential_units_capacity</key>
              <key name="compute_capacity_flag" type="string">True</key>
              <key name="sample_alternatives_by_submodel" type="string">True</key>
              <key convert_blank_to_none="True" name="weights_for_estimation_string" type="string"/>
              <key name="sample_size_locations" type="integer">30</key>
            </argument>
            <name name="name" type="string">DevelopmentProjectLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim_zone.models.development_project_location_choice_model</class_module>
            <class_name>DevelopmentProjectLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">residential_development_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_development_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <argument name="specification_table" parser_action="quote_string" type="string">residential_development_location_choice_model_specification</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">development_project.disaggregate(building_type.is_residential)</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list"/>
          </submodel>
          <submodel hidden="Children" name="sf_detached_own" submodel_id="1" type="submodel">
            <description type="string">sf_detached_own</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.is_central"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_pop_10_min"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.unit_price"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="duplex_own" submodel_id="2" type="submodel">
            <description type="string">duplex_own</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.is_central"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.travel_time_to_waikiki"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="apartment_own" submodel_id="3" type="submodel">
            <description type="string">apartment_own</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.is_central"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="townhome_own" submodel_id="4" type="submodel">
            <description type="string">townhome_own</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_pop_10_min"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.unit_price"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="sf_detached_rent" submodel_id="35" type="submodel">
            <description type="string">sf_detached_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.is_central"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_pop_10_min"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.unit_price"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="duplex_rent" submodel_id="36" type="submodel">
            <description type="string">duplex_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.is_central"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
              <variable_spec name="building.ln_residential_units"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="apartment_rent" submodel_id="37" type="submodel">
            <description type="string">apartment_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.is_central"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="townhome_rent" submodel_id="38" type="submodel">
            <description type="string">townhome_rent</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.ln_avg_val_per_unit"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
              <variable_spec name="building.ln_pop_10_min"/>
              <variable_spec name="building.ln_residential_units"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="non_residential_development_project_location_choice_model" type="model">
        <dependencies type="list">['development_project_transition_model']</dependencies>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':3}</argument>
            <argument name="agent_set" type="string">projects</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">urbansim_zone.development_project.is_non_residential</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">building_type_id</argument>
            <argument name="location_set" type="string">building</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Non-Residential Development Project Location Choice Model</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_zone</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="filter" parser_action="quote_string" type="string">(building.building_type_id==SUBMODEL)*(urbansim_zone.building.developable_non_residential_sqft_capacity&gt;0)</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">3</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string">residential_units</key>
              <key name="capacity_string" type="string">urbansim_zone.building.developable_non_residential_sqft_capacity</key>
              <key convert_blank_to_none="True" name="weights_for_simulation_string" type="string"/>
              <key name="compute_capacity_flag" type="string">True</key>
              <key name="sample_alternatives_by_submodel" type="string">True</key>
              <key name="sample_size_locations" type="integer">30</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation" type="string">opus_core.bhhh_mnl_estimation</key>
              <key convert_blank_to_none="True" name="agent_units_string" type="string">non_residential_sqft</key>
              <key name="capacity_string" type="string">urbansim_zone.building.non_residential_sqft_capacity</key>
              <key convert_blank_to_none="True" name="weights_for_estimation_string" type="string"/>
              <key name="compute_capacity_flag" type="string">True</key>
              <key name="sample_alternatives_by_submodel" type="string">True</key>
              <key name="sample_size_locations" type="integer">30</key>
            </argument>
            <name name="name" type="string">DevelopmentProjectLocationChoiceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim_zone.models.development_project_location_choice_model</class_module>
            <class_name>DevelopmentProjectLocationChoiceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agent_set" type="string">projects</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">non_residential_development_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">non_residential_development_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, projects)</output>
            <argument name="specification_table" parser_action="quote_string" type="string">non_residential_development_location_choice_model_specification</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument name="events_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument name="agents_filter" parser_action="quote_string" type="string">development_project.disaggregate(building_type.is_residential==0)</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list"/>
          </submodel>
          <submodel hidden="Children" name="hotel" submodel_id="7" type="submodel">
            <description type="string">hotel</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_repair" submodel_id="8" type="submodel">
            <description type="string">industrial_repair</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_manufacturing" submodel_id="9" type="submodel">
            <description type="string">industrial_manufacturing</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_research" submodel_id="10" type="submodel">
            <description type="string">industrial_research</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_entertainment" submodel_id="11" type="submodel">
            <description type="string">industrial_entertainment</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_residential_mix" submodel_id="12" type="submodel">
            <description type="string">industrial_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="utility" submodel_id="13" type="submodel">
            <description type="string">utility</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="warehouse_shipping" submodel_id="15" type="submodel">
            <description type="string">warehouse_shipping</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="warehouse_residential_mix" submodel_id="16" type="submodel">
            <description type="string">warehouse_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="transportation" submodel_id="18" type="submodel">
            <description type="string">transportation</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="neighborhood_retail" submodel_id="19" type="submodel">
            <description type="string">neighborhood_retail</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="regional_retail" submodel_id="20" type="submodel">
            <description type="string">regional_retail</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="retail_residential_mix" submodel_id="21" type="submodel">
            <description type="string">retail_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="office" submodel_id="22" type="submodel">
            <description type="string">office</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="office_residential_mix" submodel_id="23" type="submodel">
            <description type="string">office_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="service_shop_supplies" submodel_id="24" type="submodel">
            <description type="string">service_shop_supplies</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="service_shop_residential_mix" submodel_id="25" type="submodel">
            <description type="string">service_shop_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="outdoor_leisure" submodel_id="27" type="submodel">
            <description type="string">outdoor_leisure</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="community_facility" submodel_id="28" type="submodel">
            <description type="string">community_facility</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="classroom" submodel_id="29" type="submodel">
            <description type="string">classroom</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="hospital_complex" submodel_id="30" type="submodel">
            <description type="string">hospital_complex</description>
            <variable_list type="variable_list">
              <variable_spec name="building.ln_jobs_in_zone"/>
              <variable_spec name="building.ln_pop_zone"/>
              <variable_spec name="building.ln_average_value_per_sqft"/>
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="building.zone_ln_emp_30_min"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="development_project_transition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.real_estate_transition_model</class_module>
            <class_name>RealEstateTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="target_vancy_dataset" type="string">target_vacancy</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Development Project Transition Model</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">DPTM</argument>
            <name name="name" type="string">RealEstateTransitionModel</name>
          </init>
          <run type="dictionary">
            <output name="output" type="string">projects, _index</output>
            <argument name="realestate_dataset" type="string">building</argument>
            <argument name="year" type="string">year</argument>
            <argument name="occupied_spaces_variable" parser_action="quote_string" type="string">occupied_spaces</argument>
            <argument name="total_spaces_variable" parser_action="quote_string" type="string">total_spaces</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">target_vacancy</argument>
            <argument name="sample_from_dataset" type="string">development_event_history</argument>
            <argument name="sample_filter" type="string">None</argument>
            <argument name="reset_attribute_value" type="string">{'building_id':-1}</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
      </model>
      <model name="real_estate_price_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="dataset" type="string">building</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <argument name="coefficients" type="string">coefficients</argument>
          </run>
          <init type="dictionary">
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_average_value_per_unit=ln(building.average_value_per_unit)</argument>
            <argument convert_blank_to_none="True" name="filter_attribute" type="string">"building.average_value_per_unit&gt;0"</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string">building_type_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">RealEstatePriceModel</name>
          </init>
          <import name="import" type="dictionary">
            <class_module>urbansim.models.real_estate_price_model</class_module>
            <class_name>RealEstatePriceModel</class_name>
          </import>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, _)</output>
            <argument name="index" type="string">repm_index</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">ln_average_value_per_unit=ln(building.average_value_per_unit)</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="dataset" type="string">building</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">real_estate_price_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">real_estate_price_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, repm_index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">real_estate_price_model_specification</argument>
            <argument convert_blank_to_none="True" name="filter_variable" type="string"/>
            <argument name="dataset" type="string">building</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="sf_detached_own" submodel_id="1" type="submodel">
            <description type="string">sf_detached_own</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="duplex_own" submodel_id="2" type="submodel">
            <description type="string">duplex_own</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="apartment_own" submodel_id="3" type="submodel">
            <description type="string">apartment_own</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="townhome_own" submodel_id="4" type="submodel">
            <description type="string">townhome_own</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="hotel" submodel_id="7" type="submodel">
            <description type="string">hotel</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.hotel_sqft"/>
              <variable_spec name="building.travel_time_to_waikiki"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_repair" submodel_id="8" type="submodel">
            <description type="string">industrial_repair</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs3_foodprocess"/>
              <variable_spec name="building.land_per_nonres_sqft"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_manufacture" submodel_id="9" type="submodel">
            <description type="string">industrial_manufacture</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_research" submodel_id="10" type="submodel">
            <description type="string">industrial_research"</description>
            <variable_list type="variable_list">
              <variable_spec name="building.cbd_time"/>
              <variable_spec name="constant"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_entertainment" submodel_id="11" type="submodel">
            <description type="string">industrial_entertainment</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="industrial_residential_mix" submodel_id="12" type="submodel">
            <description type="string">industrial_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_in_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="utility_with_jobs" submodel_id="13" type="submodel">
            <description type="string">utility_with_jobs</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="warehouse_shipping" submodel_id="15" type="submodel">
            <description type="string">warehouse_shipping</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="warehouse_residential_mix" submodel_id="16" type="submodel">
            <description type="string">warehouse_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="transportation" submodel_id="18" type="submodel">
            <description type="string">transportation</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="neighborhood_retail" submodel_id="19" type="submodel">
            <description type="string">neighborhood_retail</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs9_retail"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="regional_retail" submodel_id="20" type="submodel">
            <description type="string">regional_retail</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs9_retail"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="retail_residential_mix" submodel_id="21" type="submodel">
            <description type="string">retail_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_hh_income_zonal"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="office" submodel_id="22" type="submodel">
            <description type="string">office</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs10_finance"/>
              <variable_spec name="building.ln_job_density_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="office_residential_mix" submodel_id="23" type="submodel">
            <description type="string">office_residential_mix</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="service_shops_supplies" submodel_id="24" type="submodel">
            <description type="string">service_shops_supplies</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income_zonal"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="service_shops_residential" submodel_id="25" type="submodel">
            <description type="string">service_shops_residential</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="outdoor_leisure_jobs" submodel_id="27" type="submodel">
            <description type="string">outdoor_leisure_nojobs</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="community_facility" submodel_id="28" type="submodel">
            <description type="string">community_facility</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_inv_far"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="classroom" submodel_id="29" type="submodel">
            <description type="string">classroom</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.households_in_zone"/>
              <variable_spec name="building.ln_pop_10_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="hospital" submodel_id="30" type="submodel">
            <description type="string">hospital</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.jobs15_health"/>
              <variable_spec name="building.ln_jobs_within_15_min"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="sf_detached_rental" submodel_id="35" type="submodel">
            <description type="string">sf_detached_rental</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="duplex_rental" submodel_id="36" type="submodel">
            <description type="string">duplex_rental</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="apartment_rental" submodel_id="37" type="submodel">
            <description type="string">apartment_rental</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="townhome_rental" submodel_id="38" type="submodel">
            <description type="string">townhome_rental</description>
            <variable_list type="variable_list">
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_hh_income"/>
              <variable_spec name="building.ln_job_density_zone"/>
              <variable_spec name="building.ln_jobs_within_30_min"/>
              <variable_spec name="building.ln_land_per_unit"/>
              <variable_spec name="building.sqft_per_unit"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="add_projects_to_buildings" type="model">
        <dependencies type="list">['development_project_transition_model', "residential_development_project_location_choice_model", "non_residential_development_project_location_choice_model"]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim_zone.models.add_projects_to_buildings</class_module>
            <class_name>AddProjectsToBuildings</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">AddProjectsToBuildings</name>
          </init>
          <run type="dictionary">
            <argument name="developmentproject_dataset" type="string">projects</argument>
            <argument name="building_dataset" type="string">building</argument>
            <argument name="label_attribute_names" type="string">["building_id"]</argument>
          </run>
        </structure>
      </model>
    </models>
    <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
        <selectable name="household" type="selectable">True</selectable>
        <selectable name="zone" type="selectable">True</selectable>
        <selectable name="building" type="selectable">True</selectable>
        <selectable name="parcel" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
        </selectable>
        <selectable name="person" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
        </selectable>
        <selectable name="job" type="selectable">True</selectable>
      </datasets_to_preload>
      <save_estimation_results type="boolean">True</save_estimation_results>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory" field_identifier="Cache Directory" field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data">honolulu/base_year_data</cache_directory>
      <estimation_database_configuration type="class">
        <class_name hidden="True" type="string">EstimationDatabaseConfiguration</class_name>
        <class_module hidden="True" type="string">opus_core.database_management.configurations.estimation_database_configuration</class_module>
        <argument name="database_name" type="string"/>
      </estimation_database_configuration>
      <dataset_pool_configuration type="class">
        <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
        <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
        <argument name="package_order" type="list">['psrc_zone', 'urbansim_zone', 'urbansim', 'opus_core']</argument>
      </dataset_pool_configuration>
      <datasets_to_cache_after_each_model type="list">[]</datasets_to_cache_after_each_model>
      <low_memory_mode type="boolean">False</low_memory_mode>
      <base_year type="integer" field_identifier="Base Year">2000</base_year>
      <years type="tuple">
        <firstyear type="integer" field_identifier="Base Year">2000</firstyear>
        <lastyear type="integer" field_identifier="Base Year">2000</lastyear>
      </years>
    </estimation_config>
  </model_manager>
  <scenario_manager>
    <scenario type="scenario" executable="True" name="honolulu_baseline_test">
      <parent type="scenario_name">honolulu_baseline</parent>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2003</lastyear>
      </years_to_run>
    </scenario>
    <scenario copyable="True" executable="True" name="honolulu_baseline" type="scenario">
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="real_estate_price_model" type="model_choice">True</selectable>
        <selectable name="development_project_transition_model" type="model_choice">True</selectable>
        <selectable name="residential_development_project_location_choice_model" type="model_choice">True</selectable>
        <selectable name="non_residential_development_project_location_choice_model" type="model_choice">True</selectable>
        <selectable name="add_projects_to_buildings" type="model_choice">True</selectable>
        <selectable name="household_transition_model" type="model_choice">True</selectable>
        <selectable return_value="household_relocation_model" type="selectable" name="household_relocation_model_1">True</selectable>
        <selectable return_value="area_type_choice_model" type="selectable" name="area_type_choice_model_1">True</selectable>
        <selectable return_value="tenure_choice_model" type="selectable" name="tenure_choice_model_1">True</selectable>
        <selectable return_value="owner_housing_type_choice_model" type="selectable" name="owner_housing_type_choice_model_1">True</selectable>
        <selectable return_value="renter_housing_type_choice_model" type="selectable" name="renter_housing_type_choice_model_1">True</selectable>
        <selectable return_value="household_location_choice_model" type="selectable" name="household_location_choice_model_1">True</selectable>
        <selectable name="employment_transition_model" type="model_choice">True</selectable>
        <selectable name="employment_relocation_model" type="model_choice">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">_all_</group_members>
        </selectable>
      </models_to_run>
      <model_system type="string">urbansim.model_coordinators.model_system</model_system>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2010</lastyear>
      </years_to_run>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">honolulu/base_year_data</cache_directory>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfiguration</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">honolulu/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">honolulu/base_year_data</argument>
        </argument>
        <argument hidden="True" name="unroll_gridcells" type="boolean">False</argument>
        <argument name="advanced" type="category">
          <baseyear_database_configuration config_name="scenario_database_configuration" type="class">
            <class_name hidden="True" type="string">ScenarioDatabaseConfiguration</class_name>
            <class_module hidden="True" type="string">opus_core.database_management.configurations.scenario_database_configuration</class_module>
            <argument name="database_name" type="string">urbansim</argument>
          </baseyear_database_configuration>
          <cache_from_database type="boolean">False</cache_from_database>
          <cache_scenario_database type="string">urbansim.model_coordinators.cache_scenario_database</cache_scenario_database>
          <tables_to_cache type="selectable_list">
            <selectable name="annual_employment_control_totals" type="selectable">True</selectable>
            <selectable name="annual_household_control_totals" type="selectable">True</selectable>
            <selectable name="annual_relocation_rates_for_households" type="selectable">True</selectable>
            <selectable name="annual_relocation_rates_for_jobs" type="selectable">True</selectable>
            <selectable name="building_sqft_per_job" type="selectable">True</selectable>
            <selectable name="building_types" type="selectable">True</selectable>
            <selectable name="buildings" type="selectable">True</selectable>
            <selectable name="cities" type="selectable">True</selectable>
            <selectable name="counties" type="selectable">True</selectable>
            <selectable name="development_constraints" type="selectable">True</selectable>
            <selectable name="employment_adhoc_sector_group_definitions" type="selectable">True</selectable>
            <selectable name="employment_adhoc_sector_groups" type="selectable">True</selectable>
            <selectable name="employment_sectors" type="selectable">True</selectable>
            <selectable name="home_based_employment_location_choice_model_coefficients" type="selectable">True</selectable>
            <selectable name="home_based_employment_location_choice_model_specification" type="selectable">True</selectable>
            <selectable name="household_characteristics_for_ht" type="selectable">True</selectable>
            <selectable name="household_location_choice_model_coefficients" type="selectable">True</selectable>
            <selectable name="household_location_choice_model_specification" type="selectable">True</selectable>
            <selectable name="households" type="selectable">True</selectable>
            <selectable name="households_for_estimation" type="selectable">True</selectable>
            <selectable name="jobs" type="selectable">True</selectable>
            <selectable name="jobs_for_estimation" type="selectable">False</selectable>
            <selectable name="non_home_based_employment_location_choice_model_coefficients" type="selectable">True</selectable>
            <selectable name="non_home_based_employment_location_choice_model_specification" type="selectable">True</selectable>
            <selectable name="race_names" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_coefficients" type="selectable">True</selectable>
            <selectable name="real_estate_price_model_specification" type="selectable">True</selectable>
            <selectable name="target_vacancies" type="selectable">True</selectable>
            <selectable name="travel_data" type="selectable">True</selectable>
            <selectable name="urbansim_constants" type="selectable">True</selectable>
            <selectable name="zones" type="selectable">True</selectable>
          </tables_to_cache>
          <tables_to_cache_nchunks type="dictionary">
            <parcels type="integer">1</parcels>
          </tables_to_cache_nchunks>
        </argument>
      </creating_baseyear_cache_configuration>
      <advanced type="category">
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['urbansim_zone', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <flush_dataset_to_cache_after_each_model type="boolean">False</flush_dataset_to_cache_after_each_model>
        <flush_variables type="boolean">False</flush_variables>
        <low_memory_run type="boolean">False</low_memory_run>
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">True</selectable>
          <selectable name="household" type="selectable">True</selectable>
          <selectable name="building" type="selectable">True</selectable>
          <selectable name="parcel" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="person" type="selectable">False<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="job" type="selectable">True</selectable>
          <selectable name="building_type" type="selectable">True<package_name type="string">urbansim_parcel</package_name>
          </selectable>
          <selectable name="travel_data" type="selectable">True</selectable>
          <selectable name="target_vacancy" type="selectable">True</selectable>
          <selectable name="development_event_history" type="selectable">True</selectable>
          <selectable name="home_based_status" type="selectable">True</selectable>
        </datasets_to_preload>
      </advanced>
      <travel_model_configuration type="dictionary">
        <travel_model_base_directory type="string">baseline_travel_model_psrc_2008</travel_model_base_directory>
        <emme2_batch_file_name type="string">MODEL1-0.BAT</emme2_batch_file_name>
        <models type="selectable_list">
          <selectable name="opus_emme2.models.get_cache_data_into_emme2" type="selectable">False</selectable>
          <selectable name="opus_emme2.models.run_travel_model" type="selectable">False</selectable>
          <selectable name="opus_emme2.models.run_export_macros" type="selectable">False</selectable>
          <selectable name="opus_emme2.models.get_emme2_data_into_cache" type="selectable">False</selectable>
        </models>
      </travel_model_configuration>
    </scenario>
  </scenario_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group">
      <indicator_batch name="0person_household">
        <batch_visualization hidden="Children" type="batch_visualization" name="New visualization">
          <indicators>['0person_households']</indicators>
          <output_type>tab</output_type>
          <settings>
            <setting name="output_style">1</setting>
          </settings>
          <dataset_name>alldata</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="zone_indicator_batch" type="indicator_batch">
        <batch_visualization hidden="Children" type="batch_visualization" name="New visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['zone_ln_res_units', 'zone_ln_time_cbd']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="SF Unit Price">
          <indicators>['zone_sf_unit_price']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <settings>
            <setting name="output_style">1</setting>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <dataset_name>zone</dataset_name>
          <visualization_type>mapnik_animated_map</visualization_type>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="untitled_indicator_batch" type="indicator_batch">
        <batch_visualization hidden="Children" type="batch_visualization" name="New visualization">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['zone_time_cbd']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization name="New_visualization" type="batch_visualization">
          <settings>
            <setting name="bucket_labels">range_labels</setting>
            <setting name="bucket_ranges">linear_scale</setting>
            <setting name="bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['lnunits']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
      </indicator_batch>
    </indicator_batches>
  </results_manager>
</opus_project>