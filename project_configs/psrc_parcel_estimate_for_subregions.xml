<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the PSRC parcel project</description>
    <parent type="file">psrc_parcel_default.xml</parent>
    <expression_library type="dictionary">
      <variable name="parcel.lngcdacbd" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(psrc.zone.generalized_cost_hbw_am_drive_alone_to_cbd)))).astype(float32)</variable>
	  <variable name="parcel.lngcdaemp" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(psrc.zone.generalized_cost_weighted_access_to_employment_hbw_am_drive_alone)))).astype(float32)</variable>
      <variable name="parcel.lngcdapop" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(psrc.zone.generalized_cost_weighted_access_to_population_hbw_am_drive_alone)))).astype(float32)</variable>
      <variable name="parcel.hbwavgtmda" source="expression" type="variable_definition" use="model variable">subtract_mean(parcel.disaggregate(psrc.zone.trip_weighted_average_time_hbw_from_home_am_drive_alone))</variable>
      <variable name="parcel.lnemp10wa" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_10_minutes_travel_time_hbw_am_walk)))).astype(float32)</variable>
      <variable name="parcel.lnemp20wa" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_20_minutes_travel_time_hbw_am_walk)))).astype(float32)</variable>
      <variable name="parcel.lnemp30da" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_drive_alone)))).astype(float32)</variable>
      <variable name="parcel.lnemp20da" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_20_minutes_travel_time_hbw_am_drive_alone)))).astype(float32)</variable>
      <variable name="parcel.lnemp10da" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_10_minutes_travel_time_hbw_am_drive_alone)))).astype(float32)</variable>
      <variable name="parcel.lnemp30tw" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_30_minutes_travel_time_hbw_am_transit_walk)))).astype(float32)</variable>
      <variable name="parcel.lnemp20tw" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(urbansim_parcel.zone.employment_within_20_minutes_travel_time_hbw_am_transit_walk)))).astype(float32)</variable>
      <!--<variable name="parcel.lnempden" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(urbansim_parcel.zone.number_of_jobs_per_acre)))).astype(float32)</variable>
      <variable name="parcel.lnpopden" source="expression" type="variable_definition" use="model variable">(subtract_mean(ln(parcel.disaggregate(urbansim_parcel.zone.population_per_acre)))).astype(float32)</variable>-->
       <variable name="parcel.lns_bldgage" source="expression" type="variable_definition" use="model variable">(ln_shifted(parcel.aggregate(urbansim_parcel.building.age_masked, function=mean))).astype(float32)</variable>
       <variable name="parcel.bldgage" source="expression" type="variable_definition" use="model variable">parcel.aggregate(urbansim_parcel.building.age_masked, function=mean)</variable>
       <variable name="parcel.nvalid_bldgage" source="expression" type="variable_definition" use="model variable">parcel.aggregate(urbansim_parcel.building.has_valid_year_built)==0</variable>
       <variable name="parcel.lns_bldgagesf" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.aggregate(urbansim_parcel.building.age_masked*urbansim_parcel.building.building_sqft)/(parcel.parcel_sqft).astype(float32))</variable>
       <variable name="parcel.age_lt_10" source="expression" type="variable_definition" use="model variable">parcel.aggregate(urbansim_parcel.building.age_masked, function=mean) &lt; 10</variable>
       <variable name="parcel.age_gt_60" source="expression" type="variable_definition" use="model variable">parcel.aggregate(urbansim_parcel.building.age_masked, function=mean) &gt; 60</variable>
       <variable name="parcel.lnsunits_psf" source="expression" type="variable_definition" use="model variable">ln_shifted(urbansim_parcel.parcel.residential_units/ (parcel.parcel_sqft).astype(float32))</variable> 
       <variable name="parcel.lnsbsftounits" source="expression" type="variable_definition" use="model variable">ln_shifted(safe_array_divide(parcel.aggregate(urbansim_parcel.building.building_sqft * urbansim_parcel.building.is_residential), urbansim_parcel.parcel.residential_units))</variable> 
       <variable name="parcel.lnsbsftounits_1ru" source="expression" type="variable_definition" use="model variable">ln_shifted(safe_array_divide(parcel.aggregate(urbansim_parcel.building.building_sqft * urbansim_parcel.building.is_residential), urbansim_parcel.parcel.residential_units) * (urbansim_parcel.parcel.residential_units &lt;=1))</variable>
       <variable name="parcel.lnsbsftounits_gt1ru" source="expression" type="variable_definition" use="model variable">ln_shifted(safe_array_divide(parcel.aggregate(urbansim_parcel.building.building_sqft * urbansim_parcel.building.is_residential), urbansim_parcel.parcel.residential_units) * (urbansim_parcel.parcel.residential_units &gt; 1))</variable>
       <variable name="parcel.ru_gt_1" source="expression" type="variable_definition" use="model variable">urbansim_parcel.parcel.residential_units &gt; 1</variable>
       
       <variable name="parcel.lnsunits_pbsf" source="expression" type="variable_definition" use="model variable">ln_shifted(urbansim_parcel.parcel.residential_units * (parcel.aggregate(urbansim_parcel.building.building_sqft)/(parcel.parcel_sqft).astype(float32)))</variable> 
       <variable name="parcel.units_psf" source="expression" type="variable_definition" use="model variable">urbansim_parcel.parcel.residential_units/ (parcel.parcel_sqft).astype(float32)</variable>           
       <variable name="parcel.lnsunits" source="expression" type="variable_definition" use="model variable">(ln_shifted(urbansim_parcel.parcel.residential_units)).astype(float32)</variable>      
      <!--  <variable name="parcel.lnsbsqft_psf" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.aggregate(urbansim_parcel.building.building_sqft * urbansim_parcel.building.is_non_residential)/ (parcel.parcel_sqft).astype(float32))</variable> -->
       <variable name="parcel.lnsbsqft_psf" source="expression" type="variable_definition" use="model variable">ln_shifted((psrc_parcel.parcel.non_residential_building_sqft_per_parcel_sqft * (psrc_parcel.parcel.non_residential_building_sqft_per_parcel_sqft &gt;= 1)) + (psrc_parcel.parcel.non_residential_building_sqft_per_parcel_sqft &lt; 1))</variable>
       <variable name="parcel.bsqft_psf_gt_1" source="expression" type="variable_definition" use="model variable">psrc_parcel.parcel.non_residential_building_sqft_per_parcel_sqft &gt;= 1</variable>       
       <variable name="parcel.lnsbsqft" source="expression" type="variable_definition" use="model variable">(ln_shifted(parcel.aggregate(urbansim_parcel.building.building_sqft * urbansim_parcel.building.is_non_residential))).astype(float32)</variable>
       <variable name="parcel.lnsbsqft_all" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.aggregate(urbansim_parcel.building.building_sqft))</variable>
       <variable name="parcel.lnsbsqft_all_1ru" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.aggregate(urbansim_parcel.building.building_sqft) * (urbansim_parcel.parcel.residential_units &lt;=1))</variable>
       <variable name="parcel.lnsbsqft_all_psf" source="expression" type="variable_definition" use="model variable">ln_shifted(psrc_parcel.parcel.building_sqft_per_parcel_sqft * (psrc_parcel.parcel.building_sqft_per_parcel_sqft &gt;= 1) + (psrc_parcel.parcel.building_sqft_per_parcel_sqft &lt; 1))</variable>
       <variable name="parcel.lnsbsqft_all_psf_1ru" source="expression" type="variable_definition" use="model variable">ln_shifted((psrc_parcel.parcel.building_sqft_per_parcel_sqft * (psrc_parcel.parcel.building_sqft_per_parcel_sqft &gt;= 1) + (psrc_parcel.parcel.building_sqft_per_parcel_sqft &lt; 1))* (urbansim_parcel.parcel.residential_units &lt;=1))</variable>
       <variable name="parcel.bsqft_all_psf_gt_1" source="expression" type="variable_definition" use="model variable">psrc_parcel.parcel.building_sqft_per_parcel_sqft &gt;= 1</variable>       
       <variable name="parcel.lnslotsqft" source="expression" type="variable_definition" use="model variable">(ln_shifted(parcel.parcel_sqft)).astype(float32)</variable>
       <variable name="parcel.lnslotsqft_x_nugb" source="expression" type="variable_definition" use="model variable">(ln_shifted(parcel.parcel_sqft) * (parcel.is_inside_urban_growth_boundary==False)).astype(float32)</variable>
       <variable name="parcel.lnslotsqft_x_cbd" source="expression" type="variable_definition" use="model variable">(ln_shifted(parcel.parcel_sqft) * (parcel.disaggregate(numpy.logical_or(zone.seattle_cbd, zone.bellevue_cbd)))).astype(float32)</variable>
       <variable name="parcel.lnsavglotsqft" source="expression" type="variable_definition" use="model variable">(ln_shifted(psrc_parcel.parcel.avg_zonal_parcel_sqft)).astype(float32)</variable>
       <variable name="parcel.lnyardsqft" source="expression" type="variable_definition" use="model variable">(ln_shifted(psrc_parcel.parcel.yard_per_sqft)).astype(float32)</variable>
		<variable name="parcel.lnimprval" source="expression" type="variable_definition" use="model variable">ln_shifted(urbansim_parcel.parcel.improvement_value)</variable>
	   <variable name="parcel.imprvalle0" source="expression" type="variable_definition" use="model variable">urbansim_parcel.parcel.improvement_value &lt;= 0</variable>
	
	<variable name="parcel.lnimprval_psf" source="expression" type="variable_definition" use="model variable">ln_shifted(urbansim_parcel.parcel.improvement_value/ (parcel.parcel_sqft).astype(float32))</variable>
<variable name="parcel.lnconstrcost_mean" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.aggregate(urbansim_parcel.development_project_proposal.construction_cost, function=mean))</variable>
<variable name="parcel.lnconstrcost_max" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.aggregate(urbansim_parcel.development_project_proposal.construction_cost, function=maximum))</variable>
<variable name="parcel.lnconstrcost_max_bsf" source="expression" type="variable_definition" use="model variable">ln_shifted(safe_array_divide(parcel.aggregate(urbansim_parcel.development_project_proposal.construction_cost, function=maximum), psrc_parcel.parcel.max_developable_capacity))</variable>

       <variable use="model variable" source="expression" name="parcel.faz_school_totscore" type="variable_definition">parcel.disaggregate(psrc_parcel.faz.average_school_total_score, intermediates=[zone])</variable>
       <variable use="model variable" source="expression" name="parcel.ngoodpubl_schools" type="variable_definition">psrc_parcel.parcel.number_of_good_public_schools_within_3000_radius</variable>
       <variable use="model variable" source="expression" name="parcel.lnngoodpubl_schools_percap" type="variable_definition">ln(safe_array_divide(psrc_parcel.parcel.number_of_good_public_schools_within_3000_radius, psrc_parcel.parcel.population_within_3000_radius))</variable>
       <variable use="model variable" source="expression" name="parcel.ngoodpubl_schools_x_cbd" type="variable_definition">psrc_parcel.parcel.number_of_good_public_schools_within_3000_radius*parcel.disaggregate(zone.seattle_cbd)</variable>
       <variable use="model variable" source="expression" name="parcel.no_good_publ_schools" type="variable_definition">psrc_parcel.parcel.number_of_good_public_schools_within_3000_radius == 0</variable>
      <variable use="model variable" source="expression" name="parcel.has_publ_schools" type="variable_definition">psrc_parcel.parcel.number_of_public_schools &lt; 0</variable>
      <variable use="model variable" source="expression" name="parcel.has_private_schools" type="variable_definition">psrc_parcel.parcel.number_of_private_schools &lt; 0</variable>
      <variable use="model variable" source="expression" name="parcel.faz_school_hasscore" type="variable_definition">parcel.disaggregate(faz.aggregate(school.total_score &lt; 0, intermediates=[parcel, zone])>0, intermediates=[zone])</variable>
      <variable use="model variable" source="expression" name="parcel.is_in_cbd" type="variable_definition">parcel.disaggregate(numpy.logical_or(zone.seattle_cbd, zone.bellevue_cbd))</variable>
      <variable use="model variable" source="expression" name="parcel.is_in_scbd" type="variable_definition">parcel.disaggregate(zone.seattle_cbd)</variable>
     <!-- <variable source="expression" type="variable_definition" use="model variable" name="parcel.retail_food_empden">ln_bounded(building.disaggregate(urbansim.gridcell.sector_7_employment_within_walking_distance + urbansim.gridcell.sector_14_employment_within_walking_distance + urbansim.gridcell.sector_17_employment_within_walking_distance))</variable>-->
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.lnempden_wwd">subtract_mean(ln(psrc_parcel.parcel.employment_density_within_walking_distance))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.lnpopden_wwd">subtract_mean(ln(psrc_parcel.parcel.population_density_within_walking_distance))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.lnretailden_wwd">subtract_mean(ln(psrc_parcel.parcel.retail_density_within_walking_distance))</variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.lnretail_wwd">subtract_mean(ln(psrc_parcel.parcel.urbansim_parcel_package_employment_retail_wwd))</variable>
     <variable use="model variable" type="variable_definition" source="expression" name="building.lnempden_wwd_threshold">((building.disaggregate(psrc_parcel.parcel.employment_density_within_walking_distance))&gt;25)*(ln(building.disaggregate(psrc_parcel.parcel.employment_density_within_walking_distance)-25+1)).astype(float32) </variable>
      <variable source="expression" type="variable_definition" use="model variable" name="parcel.park_wwd">psrc_parcel.parcel.psrc_parcel_package_is_park_wwd</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="parcel.lnsbsqftden_wwd">subtract_mean(ln_shifted(psrc_parcel.parcel.building_density_wwd))</variable>      
    <variable source="expression" type="variable_definition" use="model variable" name="parcel.lnparkarea_wwd">ln_shifted(psrc_parcel.parcel.psrc_parcel_package_park_area_wwd)</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="parcel.lndevcapacity">subtract_mean(ln_shifted(psrc_parcel.parcel.developable_capacity)*(psrc_parcel.parcel.developable_capacity &gt; 0))</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="parcel.isdevcap_gt0">psrc_parcel.parcel.developable_capacity &gt; 0</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="parcel.isdevcap_le0">(psrc_parcel.parcel.developable_capacity &gt; 0) == 0</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="parcel.lndevcapacity_psf">ln_shifted(psrc_parcel.parcel.developable_capacity/ (parcel.parcel_sqft).astype(float32))</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="parcel.maxdevcapacity_gt1">psrc_parcel.parcel.max_developable_capacity &gt; 1</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="parcel.lnmaxdevcapacity">ln_shifted(psrc_parcel.parcel.max_developable_capacity)</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="parcel.lnmaxdevcapacity_psf">ln_shifted(psrc_parcel.parcel.max_developable_capacity/ (parcel.parcel_sqft).astype(float32))</variable>
    <variable name="parcel.ninugb" source="expression" type="variable_definition" use="model variable">parcel.is_inside_urban_growth_boundary==False</variable>
    <variable name="parcel.povertyshare" source="expression" type="variable_definition" use="model variable">psrc_parcel.parcel.percent_poverty_wwd</variable>
    <variable name="parcel.wealthshare" source="expression" type="variable_definition" use="model variable">psrc_parcel.parcel.percent_wealth_wwd</variable>
    <variable use="model variable" source="expression" name="parcel.is_waterfront" type="variable_definition">parcel.is_waterfront</variable>

    <variable use="model variable" source="expression" name="household_x_building.mnl_bias" type="variable_definition">household_x_building.__mnl_bias_correction_term</variable>
    <variable use="model variable" source="expression" name="building.ngoodpubl_schools_bldg" type="variable_definition">building.disaggregate(psrc_parcel.parcel.number_of_good_public_schools_within_3000_radius)</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="building.lnretailden_wwd_bldg">ln(building.disaggregate(psrc_parcel.parcel.retail_density_within_walking_distance))</variable>   
    <variable use="model variable" source="expression" name="building.no_good_publ_schools_bldg" type="variable_definition">building.disaggregate(psrc_parcel.parcel.number_of_good_public_schools_within_3000_radius == 0)</variable>
    <variable use="model variable" source="expression" name="household_x_building.kids_x_has_good_publ_schools" type="variable_definition">(household.children &gt; 0) * building.disaggregate(psrc_parcel.parcel.number_of_good_public_schools_within_3000_radius &gt; 0)</variable>
 <variable use="model variable" source="expression" name="household_x_building.kids_x_ngood_publ_schools" type="variable_definition">(household.children > 0) * building.disaggregate(psrc_parcel.parcel.number_of_good_public_schools_within_3000_radius)</variable>
     <variable source="expression" type="variable_definition" use="model variable" name="building.park_wwd_bldg">building.disaggregate(psrc_parcel.parcel.psrc_parcel_package_is_park_wwd)</variable>      
    <variable source="expression" type="variable_definition" use="model variable" name="building.lnparkarea_wwd_bldg">ln_shifted(building.disaggregate(psrc_parcel.parcel.psrc_parcel_package_park_area_wwd))</variable>   
    <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.same_building_type">urbansim_parcel.household.residence_type_lag1 == building.building_type_id</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.same_btype_if_sfr">(urbansim_parcel.household.residence_type_lag1 == 19) * urbansim.building.is_single_family_residential</variable>
   <variable source="expression" type="variable_definition" use="model variable" name="household_x_building.same_btype_if_mfr">((urbansim_parcel.household.residence_type_lag1 == 4)+(urbansim_parcel.household.residence_type_lag1 == 12))* urbansim.building.is_multi_family_residential</variable>
    <variable source="expression" type="variable_definition" use="model variable" name="household.is_valid_income">household.income > 0</variable>
    <variable use="model variable" source="expression" name="household_x_building.owner_x_is_not_mfr" type="variable_definition">(household.tenure == 1) * (urbansim.building.is_multi_family_residential==0)</variable>
     <variable use="model variable" source="expression" name="household_x_building.high_income_x_ln_sqft_per_unit" type="variable_definition">urbansim.household.is_income_4 * ln_shifted(building.sqft_per_unit)</variable>
 <variable use="model variable" source="expression" name="household_x_building.low_income_x_ln_sqft_per_unit" type="variable_definition">urbansim.household.is_income_1 * ln_shifted(building.sqft_per_unit)</variable>
     <variable source="expression" type="variable_definition" use="model variable" name="building.ln_sqft_per_unit">ln_shifted(building.sqft_per_unit)</variable>      
 <variable source="expression" type="variable_definition" use="model variable" name="building.ln_resunit">ln_shifted(building.residential_units)</variable>      
<variable source="expression" type="variable_definition" use="model variable" name="household_x_building.pers_gt_2_x_condo">(psrc_parcel.household.persons &gt; 2) * building.disaggregate(building_type.building_type_name == 'condo_residential')</variable>
<variable source="expression" type="variable_definition" use="model variable" name="household_x_building.npers_x_condo">psrc_parcel.household.persons * building.disaggregate(building_type.building_type_name == 'condo_residential')</variable>
<variable source="expression" type="variable_definition" use="model variable" name="household_x_building.npers_x_condo_ifgt2">(psrc_parcel.household.persons * (psrc_parcel.household.persons &gt; 2) * building.disaggregate(building_type.building_type_name == 'condo_residential'))-2</variable>
<variable source="expression" type="variable_definition" use="model variable" name="household_x_building.npers_x_mfr_ifgt2">psrc_parcel.household.persons * (psrc_parcel.household.persons &gt; 2) * building.disaggregate(building_type.building_type_name == 'multi_family_residential')</variable>
<variable use="model variable" source="expression" name="household_x_building.big_not_in_seattle" type="variable_definition">(psrc_parcel.household.persons &gt; 3) * numpy.logical_not(urbansim_parcel.building.large_area_id ==6)</variable>
<variable use="model variable" source="expression" name="household_x_building.per_capita_income_x_size" type="variable_definition">ln_bounded(urbansim.household.income)/psrc_parcel.household.persons * ln(psrc_parcel.building.sqft_per_unit)/psrc_parcel.household.persons</variable>
<variable source="expression" type="variable_definition" use="model variable" name="household_x_building.pers_lt_3_if_seattle">(psrc_parcel.household.persons &lt; 3) * (urbansim_parcel.building.large_area_id==6)</variable>
<variable source="expression" type="variable_definition" use="model variable" name="household_x_building.two_pers_x_not_sfr">(psrc_parcel.household.persons == 2) * numpy.logical_not(urbansim.building.is_single_family_residential)</variable>
<variable name="parcel.lnsgcdacbd_pbsf" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.disaggregate(psrc.zone.generalized_cost_hbw_am_drive_alone_to_cbd) * (parcel.aggregate(urbansim_parcel.building.building_sqft)/(parcel.parcel_sqft).astype(float32)))</variable>
<variable name="parcel.lnsemp10wa_pbsf" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.disaggregate(urbansim_parcel.zone.employment_within_10_minutes_travel_time_hbw_am_walk) * (parcel.aggregate(urbansim_parcel.building.building_sqft)/(parcel.parcel_sqft).astype(float32)))</variable>
<variable name="parcel.hbwavgtmda_pbsf" source="expression" type="variable_definition" use="model variable">parcel.disaggregate(psrc.zone.trip_weighted_average_time_hbw_from_home_am_drive_alone) * (parcel.aggregate(urbansim_parcel.building.building_sqft)/(parcel.parcel_sqft).astype(float32))</variable>
<variable name="parcel.lnsempden_pbsf" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.disaggregate(urbansim_parcel.zone.number_of_jobs_per_acre) * (parcel.aggregate(urbansim_parcel.building.building_sqft)/(parcel.parcel_sqft).astype(float32)))</variable>
<variable name="parcel.lnspopden_pbsf" source="expression" type="variable_definition" use="model variable">ln_shifted(parcel.disaggregate(urbansim_parcel.zone.population_per_acre) * (parcel.aggregate(urbansim_parcel.building.building_sqft)/(parcel.parcel_sqft).astype(float32)))</variable>
<variable name="parcel.bldgage_pbsf" source="expression" type="variable_definition" use="model variable">parcel.aggregate(urbansim_parcel.building.age_masked, function=mean) * (parcel.aggregate(urbansim_parcel.building.building_sqft)/(parcel.parcel_sqft).astype(float32))</variable>
<variable name="development_project_proposal.lnlvalue_psf" source="expression" type="variable_definition" use="model variable">ln(psrc_parcel.development_project_proposal.land_value/(urbansim_parcel.development_project_proposal.parcel_sqft).astype(float32))</variable>
<variable name="development_project_proposal_component.lnclvalue_psf" source="expression" type="variable_definition" use="model variable">ln(psrc_parcel.development_project_proposal_component.land_value/(psrc_parcel.development_project_proposal_component.parcel_sqft).astype(float32))</variable>
<variable name="development_project_proposal.lntvalue_psf" source="expression" type="variable_definition" use="model variable">ln((psrc_parcel.development_project_proposal.prcl_imp_value+psrc_parcel.development_project_proposal.land_value)/(urbansim_parcel.development_project_proposal.parcel_sqft).astype(float32))</variable>
<variable name="development_project_proposal.cbd" source="expression" type="variable_definition" use="model variable">development_project_proposal.disaggregate(zone.seattle_cbd + zone.bellevue_cbd)</variable>
<variable name="development_project_proposal.bcbd" source="expression" type="variable_definition" use="model variable">development_project_proposal.disaggregate(zone.bellevue_cbd)</variable>
<variable name="development_project_proposal.scbd" source="expression" type="variable_definition" use="model variable">development_project_proposal.disaggregate(zone.seattle_cbd)</variable>

<variable name="development_project_proposal.lnimvalue_pbsf" source="expression" type="variable_definition" use="model variable">ln(psrc_parcel.development_project_proposal.prcl_imp_value/psrc_parcel.development_project_proposal.prcl_non_res_sqft)</variable>
<variable name="development_project_proposal.lnimvalue_punit" source="expression" type="variable_definition" use="model variable">ln(psrc_parcel.development_project_proposal.prcl_imp_value/psrc_parcel.development_project_proposal.prcl_du)</variable>
<variable name="development_project_proposal.lnlvalue" source="expression" type="variable_definition" use="model variable">ln(psrc_parcel.development_project_proposal.land_value)</variable>
<variable name="development_project_proposal.lnimvalue" source="expression" type="variable_definition" use="model variable">ln(psrc_parcel.development_project_proposal.prcl_imp_value)</variable>
<variable name="building.multifamily_type" source ="expression" type="variable_definition" use="model variable">(numpy.logical_or(building.building_type_id==4,building.building_type_id==12))</variable>
<variable use="model variable" source="expression" name="building.schooldistr_totscore" type="variable_definition">building.disaggregate(psrc_parcel.parcel.average_school_district_total_score)</variable>
<variable name="household_x_building.single_x_lnretailden_wwd" source="expression" type="variable_definition" use="model variable">(household.persons==1) * (household.age_of_head &lt; 50) * (building.disaggregate(ln(psrc_parcel.parcel.urbansim_parcel_package_employment_retail_wwd)) &gt; 4)</variable>
<!--<variable use="model variable" source="expression" name="household_x_building.max_commute_logsum" type="variable_definition">(urbansim_parcel.household.number_of_workers_with_job &gt; 0) * psrc_parcel.household_x_building.max_logsum_hbw_am_from_home_to_work_4k</variable>-->
<variable use="model variable" source="expression" name="household_x_building.max_commute_logsum" type="variable_definition">((psrc_parcel.household_x_building.max_logsum_hbw_am_from_home_to_work_4k &gt; -20)*psrc_parcel.household_x_building.max_logsum_hbw_am_from_home_to_work_4k) + ((psrc_parcel.household_x_building.max_logsum_hbw_am_from_home_to_work_4k &lt;-19) * psrc_parcel.household_x_building.avg_trip_weighted_zone_logsum)</variable>
<!--<variable use="model variable" source="expression" name="household_x_building.max_commute_logsum_missing" type="variable_definition">((psrc_parcel.household_x_building.max_logsum_hbw_am_from_home_to_work_4k == -99)*(urbansim_parcel.household.number_of_workers_with_job &gt; 0)).astype(bool8)</variable>-->
<variable use="model variable" source="Python class" name="household_x_building.avg_network_distance_notmissing" type="variable_definition">psrc_parcel.household_x_building.avg_network_distance_from_home_to_work &gt; 0</variable>
<!--<variable use="model variable" source="expression" name="household_x_building.zero_workers_x_avg_work_logsum" type="variable_definition">(numpy.logical_or(urbansim_parcel.household.number_of_workers_with_job==0, numpy.logical_and(psrc_parcel.household_x_building.max_logsum_hbw_am_from_home_to_work_4k == -99, urbansim_parcel.household.number_of_workers_with_job &gt; 0))) * ( ((psrc_parcel.household.income_breaks_34000_64000_102000==1) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_1)) + ((psrc_parcel.household.income_breaks_34000_64000_102000==2) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_2)) + ((psrc_parcel.household.income_breaks_34000_64000_102000==3) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_3)) + ((psrc_parcel.household.income_breaks_34000_64000_102000==4) * building.disaggregate(psrc.zone.trip_weighted_average_logsum_hbw_am_income_4)) )</variable>-->
<variable use="model variable" source="expression" name="household_x_building.zero_workers_x_avg_work_logsum" type="variable_definition">(psrc_parcel.household_x_building.max_logsum_hbw_am_from_home_to_work_4k == -20) * psrc_parcel.household_x_building.avg_trip_weighted_zone_logsum</variable>
<variable use="model variable" source="Python class" name="household_x_building.avg_network_distance" type="variable_definition">replace_value_with_mean(psrc_parcel.household_x_building.avg_network_distance_from_home_to_work, 0)</variable>
<variable use="model variable" source="Python class" name="household_x_building.avg_network_cost" type="variable_definition">(psrc_parcel.household_x_building.avg_network_cost_from_home_to_work*(urbansim_parcel.household.number_of_workers_with_job&gt;0)) + psrc_parcel.household_x_building.avg_trip_weighted_zone_gen_cost_if_no_workers</variable>
<variable use="model variable" source="Python class" name="household_x_building.max_network_cost" type="variable_definition">(psrc_parcel.household_x_building.max_network_cost_from_home_to_work*(urbansim_parcel.household.number_of_workers_with_job&gt;0)) + psrc_parcel.household_x_building.avg_trip_weighted_zone_gen_cost_if_no_workers</variable>
<variable use="model variable" source="Python class" name="household_x_building.max_commute_home_to_work" type="variable_definition">replace_value_with_mean(psrc_parcel.household_x_building.max_drive_alone_hbw_am_travel_time_from_home_to_work, 180)</variable>
<variable use="model variable" source="Python class" name="household_x_building.max_tranwalk_home_to_work" type="variable_definition">replace_value_with_mean(psrc_parcel.household_x_building.max_transit_walk_hbw_am_travel_time_from_home_to_work, 0)</variable>
<variable use="model variable" source="expression" name="household_x_building.avg_work_logsum" type="variable_definition">psrc_parcel.household_x_building.avg_trip_weighted_zone_logsum</variable>
<variable use="model variable" source="expression" name="building.mode_split_transit" type="variable_definition">building.disaggregate(psrc.zone.mode_split_transit_trips_over_all)</variable>
<variable use="model variable" source="expression" name="building.twa_from_home_tranwalk" type="variable_definition">building.disaggregate(psrc.zone.trip_weighted_average_time_hbw_from_home_am_transit_walk)</variable>
<variable use="model variable" source="expression" name="building.twa_from_home_bike" type="variable_definition">building.disaggregate(psrc.zone.trip_weighted_average_time_hbw_from_home_am_bike)</variable>
<variable use="model variable" source="expression" name="building.twa_to_work_tranwalk" type="variable_definition">building.disaggregate(psrc.zone.trip_weighted_average_time_hbw_to_work_am_transit_walk)</variable>
<variable use="model variable" source="expression" name="building.twa_to_work_bike" type="variable_definition">building.disaggregate(psrc.zone.trip_weighted_average_time_hbw_to_work_am_bike)</variable>
<variable use="model variable" source="expression" name="household_x_building.low_mid_income_x_twa_from_home_tranwalk" type="variable_definition">(urbansim.household.is_income_1 + urbansim.household.is_income_2) * building.disaggregate(psrc.zone.trip_weighted_average_time_hbw_from_home_am_transit_walk)</variable>
<variable use="model variable" source="expression" name="person_x_job.logsum_from_home_to_work" type="variable_definition">psrc_parcel.person_x_job.logsum_hbw_am_from_home_to_work_4k</variable>
<variable use="model variable" source="expression" name="household_x_building.housing_range_wtoll" type="variable_definition">numpy.logical_or(((((0.06/12)*(urbansim_parcel.building.unit_price*urbansim_parcel.building.building_sqft_per_unit+(building.sqft_per_unit/(building.disaggregate(urbansim_parcel.parcel.building_sqft)).astype(float32))*building.disaggregate(parcel.land_value))*(1+0.06/12)**360)/(((1+0.06/12)**360)-1)*12)/psrc_parcel.household_x_building.income_minus_toll) &lt; .1, (((((0.06/12)*(urbansim_parcel.building.unit_price*urbansim_parcel.building.building_sqft_per_unit+(building.sqft_per_unit/building.disaggregate(urbansim_parcel.parcel.building_sqft))*building.disaggregate(parcel.land_value))*(1+0.06/12)**360)/(((1+0.06/12)**360)-1)*12)/psrc_parcel.household_x_building.income_minus_toll)&gt;.3))</variable>
<variable use="model variable" source="Python class" name="person_x_job.ln_travel_cost_from_home_to_work" type="variable_definition">ln_shifted(psrc_parcel.person_x_job.travel_cost_from_home_to_work)</variable>
<variable use="model variable" source="expression" name="person_x_job.income_x_fires" type="variable_definition">person.disaggregate(urbansim_parcel.household.is_high_income_imputed) * urbansim.job.is_in_employment_sector_group_fires</variable>
</expression_library>
 </general>
 <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">

      <model name="employment_location_choice_model" type="model">
      <structure type="dictionary">
      <init type="dictionary">
       <argument name="sample_size_locations" type="integer">200</argument>
       <argument name="estimation_weight_string" parser_action="quote_string" type="string">clip_to_zero(psrc_parcel.building.total_non_home_based_job_space)</argument>
       </init>
       </structure>
              <specification type="dictionary" inherit_parent_values="False">
                <submodel_group name="non_home_based" type="submodel_group">
                  <submodel hidden="Children" name="natural_resources" submodel_id="1" type="submodel">
                    <description type="string">Natural Resources</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.is_near_art"/> 
                      <!--<variable_spec name="building.ln_unit_price_trunc"/>-->
		      <variable_spec name="building.lnsqft_bldg"/>
		      <variable_spec name="building.inugb_bldg"/>
		      <variable_spec name="building.is_commercial_building"/>
		       <variable_spec name="building.is_warehousing_building"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="construction" submodel_id="2" type="submodel">
                    <description type="string">Construction</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_near_art"/> 
                      <variable_spec name="building.lnsqft_bldg"/>
		       <variable_spec name="building.is_near_highway"/>
		       <variable_spec name="building.is_commercial_building"/>
		       <variable_spec name="building.is_warehousing_building"/>
		       <variable_spec name="building.ln_unit_price_trunc"/>
		       <variable_spec name="building.is_industrial_building"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="aerospace" submodel_id="3" type="submodel">
                    <description type="string">Aerospace</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.is_industrial_building"/>
                      <variable_spec name="building.is_near_art"/>
                      <variable_spec name="building.is_near_highway"/>
                     <!-- <variable_spec name="building.is_warehousing_building"/>-->
                      <variable_spec name="building.ln_unit_price_trunc"/>
                      <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="durable_manufacturing" submodel_id="4" type="submodel">
                    <description type="string">Durable Manufacturing</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_industrial_building"/>
                     <!-- <variable_spec name="building.is_mixed_use_building"/>-->
                      <variable_spec name="building.is_near_art"/>
                      <variable_spec name="building.is_near_highway"/>
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.is_warehousing_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
                      <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="nondurable_manufacturing" submodel_id="5" type="submodel">
                    <description type="string">Nondurable Manufacturing</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_industrial_building"/>
                      <variable_spec name="building.is_mixed_use_building"/>
                      <variable_spec name="building.is_near_art"/>
                      <variable_spec name="building.is_near_highway"/>
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.is_warehousing_building"/>
                      <!-- <variable_spec name="building.ln_unit_price_trunc"/>-->
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="wholesale" submodel_id="6" type="submodel">
                    <description type="string">Wholesale</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_industrial_building"/>
                     <!-- <variable_spec name="building.is_mixed_use_building"/> -->
                      <variable_spec name="building.is_near_art"/>
                     <!-- <variable_spec name="building.is_near_highway"/> -->
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.is_warehousing_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
                    <!--  <variable_spec name="building.lnsqft_bldg"/>-->
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="retail" submodel_id="7" type="submodel">
                    <description type="string">Retail</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_mixed_use_building"/> 
                     <variable_spec name="building.is_near_art"/>
                     <!-- <variable_spec name="building.is_near_highway"/>-->
                      <variable_spec name="building.is_warehousing_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
		      <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="transportation_warehousing" submodel_id="8" type="submodel">
                    <description type="string">Transportation and warehousing</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_industrial_building"/>
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.is_near_art"/>
                      <variable_spec name="building.is_near_highway"/>
                      <variable_spec name="building.is_warehousing_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
                      <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="utilities" submodel_id="9" type="submodel">
                    <description type="string">Utilities</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.is_near_art"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
                     <!-- <variable_spec name="building.lnsqft_bldg"/>-->
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="telecom" submodel_id="10" type="submodel">
                    <description type="string">Telecom</description>
                    <variable_list type="variable_list">
                    <!--  <variable_spec name="building.inugb_bldg"/>-->
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_industrial_building"/>
                      <variable_spec name="building.is_near_art"/>
                      <variable_spec name="building.is_near_highway"/>
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.is_tcu_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="information" submodel_id="11" type="submodel">
                    <description type="string">Information</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_industrial_building"/>
                      <variable_spec name="building.is_mixed_use_building"/>
                      <variable_spec name="building.is_office_building"/>
                     <!-- <variable_spec name="building.is_near_art"/>-->
                      <variable_spec name="building.is_near_highway"/> 
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="finance" submodel_id="12" type="submodel">
                    <description type="string">Finance</description>
                    <variable_list type="variable_list">
                    <!--  <variable_spec name="building.inugb_bldg"/>-->
                      <variable_spec name="building.is_commercial_building"/>
                     <!-- <variable_spec name="building.is_industrial_building"/>-->
                      <variable_spec name="building.is_mixed_use_building"/>
                      <variable_spec name="building.is_near_highway"/>
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
		      <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="professional_services" submodel_id="13" type="submodel">
                    <description type="string">Professional services</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                     <!--  <variable_spec name="building.is_commercial_building"/>
                     <variable_spec name="building.is_industrial_building"/>-->
                      <variable_spec name="building.is_mixed_use_building"/>
                      <variable_spec name="building.is_near_art"/>
                     <!-- <variable_spec name="building.is_near_highway"/>-->
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
		       <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="food_and_drink" submodel_id="14" type="submodel">
                    <description type="string">Food and drink</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_mixed_use_building"/>
                      <variable_spec name="building.is_near_art"/>
                      <!--<variable_spec name="building.is_near_highway"/>-->
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
		      <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="ed_services" submodel_id="15" type="submodel">
                    <description type="string">ed_services</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_industrial_building"/>
                     <!--<variable_spec name="building.is_mixed_use_building"/>-->
                      <variable_spec name="building.is_near_art"/>
                      <variable_spec name="building.is_near_highway"/>
                     <!-- <variable_spec name="building.is_office_building"/>-->
                      <variable_spec name="building.ln_unit_price_trunc"/>
		      <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="health" submodel_id="16" type="submodel">
                    <description type="string">Health</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_commercial_building"/>
                     <variable_spec name="building.is_industrial_building"/>
                       <variable_spec name="building.is_mixed_use_building"/>
                      <variable_spec name="building.is_near_art"/>
                    <!--  <variable_spec name="building.is_near_highway"/>-->
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
		       <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                  <submodel hidden="Children" name="other_services" submodel_id="17" type="submodel">
                    <description type="string">Other services</description>
                    <variable_list type="variable_list">
                      <variable_spec name="building.inugb_bldg"/>
                      <variable_spec name="building.is_commercial_building"/>
                      <variable_spec name="building.is_industrial_building"/>
                      <variable_spec name="building.is_mixed_use_building"/>
                      <variable_spec name="building.is_near_art"/>
                     <!-- <variable_spec name="building.is_near_highway"/>-->
                      <variable_spec name="building.is_office_building"/>
                      <variable_spec name="building.ln_unit_price_trunc"/>
		      <variable_spec name="building.lnsqft_bldg"/>
                    </variable_list>
                  </submodel>
                </submodel_group>
              </specification>
            </model>
      <model name="household_location_choice_model" type="model">
        <dependencies type="list">['household_relocation_model']</dependencies>
        <estimation_config name="Estimation Configuration" parser_action="skip">
            <config_override config_name="models" name="Models to run before estimation" type="list">['household_relocation_model']</config_override>
            <seed type="integer" convert_blank_to_none="True">1</seed>
        </estimation_config>
         <structure type="dictionary">
          <init type="dictionary">
          <argument name="filter" parser_action="quote_string" type="string" convert_blank_to_none="True"></argument>
         <!--  <argument name="estimation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">(urbansim_parcel.building.large_area_id == GROUP)*0.65*urbansim_parcel.building.vacant_residential_units + (urbansim_parcel.building.large_area_id &lt;&gt; GROUP)*0.35/18.*urbansim_parcel.building.vacant_residential_units</argument>-->          
           <argument name="estimation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">urbansim_parcel.building.vacant_residential_units</argument>
           <argument name="simulation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">urbansim_parcel.building.vacant_residential_units</argument>
          <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
          <!--  <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_wesml_mnl_estimation_with_diagnose</argument>-->
           <argument name="submodel_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">7</key>
              <key name="sample_alternatives_by_group" type="boolean">False</key>
              <key name="include_mnl_bias_correction_term" type="boolean">False</key>
              <key name="accept_unavailability_of_choices" type="boolean">False</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <!-- <key name="wesml_sampling_correction_variable" type="string" model_dependency_type="variable">psrc_parcel.building.wesml_sampling_correction_variable</key> -->
              <!--<key name="wesml_sampling_correction_variable" type="string" model_dependency_type="variable" convert_blank_to_none="True"></key>-->
              <key name="sample_alternatives_by_group" type="boolean">False</key>
              <key name="include_mnl_bias_correction_term" type="boolean">False</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
          <argument name="index_to_unplace" type="string">hrm_index</argument>
            <argument name="portion_to_unplace" type="string">1.0</argument>
            <argument convert_blank_to_none="True" name="filter" type="string" parser_action="quote_string">household.move==1</argument>
          </prepare_for_estimate>
         </structure>
         <specification type="dictionary" inherit_parent_values="False">
          <submodel name="submodel" submodel_id="-2" type="submodel" hidden="Children">
            <description type="string">Non-inmigrants</description>
            <variable_list type="variable_list">
             <!--  <variable_spec name="building.Kitsap"/> -->
              <variable_spec name="building.multifamily_type"/>
              <variable_spec name="household_x_building.housing_range"/>
              <variable_spec name="building.iv_ln_price_residual"/>
              <!-- <variable_spec name="household_x_building.kids_x_kids"/> -->
              <!--<variable_spec name="building.ln_price_per_unit"/> -->
              <!--<variable_spec name="building.ngoodpubl_schools"/>-->
              <!-- <variable_spec name="household_x_building.kids_x_has_good_publ_schools"/> -->
              <!--<variable_spec name="building.no_good_publ_schools"/>
              <variable_spec name="household_x_building.twoplus_x_sqft_per_HH_member"/>-->
             <!-- <variable_spec name="building.lnretailden_wwd"/>
              <variable_spec name="building.lnparkarea_wwd"/>
              <variable_spec name="building.park_wwd_bldg"/> -->
              <variable_spec name="household_x_building.per_capita_income_x_size"/>
             <!--  <variable_spec name="household_x_building.income_x_size"/> -->
               <!--  <variable_spec name="household_x_building.inc_x_mfr"/> -->
             <!-- <variable_spec name="household_x_building.inc_x_condo"/>-->
              <variable_spec name="household_x_building.one_pers_x_not_sfr"/>
              <!-- <variable_spec name="household_x_building.two_pers_x_not_sfr"/> -->
              <!--<variable_spec name="household_x_building.big_not_in_seattle"/>  -->
             <!--  <variable_spec name="household_x_building.disposable_inc"/> -->
              <!-- <variable_spec name="building.sqft_per_unit"/> -->
              <!--<variable_spec name="household_x_building.zero_workers_x_avg_work_logsum"/>-->
              <variable_spec name="household_x_building.space_per_pers_gt1T"/>
              <variable_spec name="household_x_building.owner_x_is_not_mfr"/>
             <!--<variable_spec name="household_x_building.high_income_x_ln_sqft_per_unit"/> 
                <variable_spec name="household_x_building.low_income_x_ln_sqft_per_unit"/> -->
               <!--<variable_spec name="building.ln_sqft_per_unit"/> -->
              <!-- <variable_spec name="building.ln_resunit"/>-->
              <!-- <variable_spec name="building.schooldistr_totscore"/> -->
              <variable_spec name="household_x_building.npers_x_condo_ifgt2"/>
              <!-- <variable_spec name="household_x_building.mnl_bias" fixed_value="1"/> -->
              <!-- Might be put in to address household size issues
               <variable_spec name="household_x_building.kids_x_ngood_publ_schools"/>
               <variable_spec name="household_x_building.pers_gt_2_x_condo"/>
               <variable_spec name="household_x_building.pers_lt_3_if_seattle"/>     
               -->               
            </variable_list>
          </submodel>
        </specification>
       </model>
      <model copyable="True" hidden="False" name="workplace_choice_model_for_resident" type="model">
          <structure type="dictionary">
          <init type="dictionary">
          <argument name="estimation" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
          <argument name="filter" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
            <argument name="run_config" type="dictionary">
            <key name="sample_size_locations" type="integer">30</key>
            <key name="capacity_string" type="string">psrc_parcel.job.is_untaken_non_home_based_job</key>
            <key name="lottery_max_iterations" type="integer">10</key>
            <key name="number_of_units_string" type="string">(job.home_based_status==0).astype(int32)</key>
            <key name="number_of_agents_string" type="string">job.number_of_agents(person)</key>
          </argument>
            <argument name="estimate_config" type="dictionary">
            <key name="estimation" type="string">opus_core.bhhh_mnl_estimation_with_diagnose</key>
            <key name="sampler" type="string">opus_core.samplers.weighted_sampler</key>
            <key name="sample_size_locations" type="integer">30</key>
            <key name="weights_for_estimation_string" type="string">is_placed_job=(urbansim_parcel.job.zone_id &gt; 0).astype(int32)</key>
            <key name="compute_capacity_flag" type="string">True</key>
            <key name="capacity_string" type="string" convert_blank_to_none="True"/>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">urbansim_parcel.person.is_non_home_based_worker_with_placed_job</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <argument hidden="True" name="debuglevel" type="string">10</argument>
          </estimate>
        </structure>
          <specification type="dictionary" inherit_parent_values="False">
          <submodel copyable="True" hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <description type="string">No submodel</description>
            <variable_list type="variable_list">
             <!--<variable_spec name="person_x_job.home_dist_19_workplace_dist_19" fixed_value="5"/>-->
             <!-- <variable_spec name="person_x_job.home_dist_19_workplace_dist_19" fixed_value="1"/> -->
               <!-- <variable_spec name="person_x_job.home_dist_19_workplace_dist_ne_19" fixed_value="-1.5"/> -->
             <variable_spec name="person_x_job.logsum_from_home_to_work"/>
             <!--  <variable_spec name="person_x_job.network_distance_from_home_to_work"/> -->
              <variable_spec name="person_x_job.ln_travel_cost_from_home_to_work"/> 
              <variable_spec name="person_x_job.home_district_is_same_as_workplace_district"/>
              <variable_spec name="person_x_job.home_dist_19_workplace_dist_19"/> 
             <!-- <variable_spec name="person_x_job.home_dist_19_workplace_dist_ne_19"/> -->  
             <!-- <variable_spec name="person_x_job.home_dist_1_workplace_dist_1"/>
              <variable_spec name="person_x_job.home_dist_6_workplace_dist_6"/>
              <variable_spec name="person_x_job.home_area_type_3_workplace_area_type_1"/>-->
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_basic"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_retail"/>
              <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_fires"/>
             <variable_spec name="person_x_job.edu_x_job_is_in_employment_sector_group_edu"/>
             <!-- <variable_spec name="person_x_job.income_x_fires"/> -->
            </variable_list>
          </submodel>
        </specification>
      </model>
       </models>
   <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <seed type="integer">1</seed>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/base_year_estimation_4K_for_subreg</cache_directory>
      <base_year type="integer" field_identifier="Base Year">2006</base_year>
      <years type="tuple">
        <firstyear type="integer" field_identifier="Base Year">2006</firstyear>
        <lastyear type="integer" field_identifier="Base Year">2006</lastyear>
      </years>
    </estimation_config>
 </model_manager>
 <scenario_manager>

 </scenario_manager>
 </opus_project>