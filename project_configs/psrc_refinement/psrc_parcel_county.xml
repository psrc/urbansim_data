<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the PSRC parcel sub-regional project</description>
    <parent type="file">../psrc_parcel_just_friends_fair_dpcm.xml</parent>
    <expression_library type="dictionary">
    </expression_library>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="assign_county_to_households" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.simple_model</class_module>
            <class_name type="string">SimpleModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">SimpleModel</name>
            <argument name="model_name" parser_action="quote_string" type="string">Assign county_id Attribute to Households</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="dataset" type="string">household</argument>
            <argument model_dependency_type="variable" name="expression" parser_action="quote_string" type="string">psrc_parcel.household.county_id</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">county_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
      <model name="assign_county_to_jobs" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.simple_model</class_module>
            <class_name type="string">SimpleModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">SimpleModel</name>
            <argument name="model_name" parser_action="quote_string" type="string">Assign county_id Attribute to Jobs</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="dataset" type="string">job</argument>
            <argument model_dependency_type="variable" name="expression" parser_action="quote_string" type="string">psrc_parcel.job.county_id</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">county_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
      <model name="delete_county_from_households" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.delete_attribute_model</class_module>
            <class_name type="string">DeleteAttributeModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">DeleteAttributeModel</name>
            <argument name="model_name" parser_action="quote_string" type="string">Delete county_id Attribute from Households</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="dataset" type="string">household</argument>
            <argument name="attribute" parser_action="quote_string" type="string">county_id</argument>
	    <argument name="write_to_cache" type="boolean">False</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
      <model name="delete_county_from_jobs" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.delete_attribute_model</class_module>
            <class_name type="string">DeleteAttributeModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">DeleteAttributeModel</name>
            <argument name="model_name" parser_action="quote_string" type="string">Delete county_id Attribute from Jobs</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="dataset" type="string">job</argument>
            <argument name="attribute" parser_action="quote_string" type="string">county_id</argument>
	    <argument name="write_to_cache" type="boolean">False</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
      <model name="household_transition_model_by_subarea" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">household</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Household Transition Model by Subarea</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">HTMS</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_household_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_households</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
            <argument name="sync_dataset" type="string">person</argument>
            <argument name="reset_sync_dataset_attribute_value" type="string">{'job_id':-1}</argument>
            <argument model_dependency_type="variable" name="sampling_threshold" parser_action="quote_string" type="string">safe_array_divide(control_total.number_of_agents(household), control_total.total_number_of_households) &gt; 0.3</argument>
            <argument name="sampling_hierarchy" type="string">['county_id']</argument>
          </run>
        </structure>
      </model>
      <model name="employment_transition_model_by_subarea" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.transition_model</class_module>
            <class_name>TransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">TransitionModel</name>
            <argument name="dataset" type="string">job</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Employment Transition Model by Subarea</argument>
            <argument name="model_short_name" parser_action="quote_string" type="string">ETMS</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument name="control_total_table" parser_action="quote_string" type="string">annual_employment_control_totals</argument>
            <argument name="control_total_storage" type="string">base_cache_storage</argument>
          </prepare_for_run>
          <run type="dictionary">
            <output hidden="True" name="output" type="string">etm_index</output>
            <argument name="year" type="string">year</argument>
            <argument name="target_attribute_name" parser_action="quote_string" type="string">total_number_of_jobs</argument>
            <argument name="reset_dataset_attribute_value" type="string">{'building_id':-1}</argument>
            <argument model_dependency_type="variable" name="sampling_threshold" parser_action="quote_string" type="string">safe_array_divide(control_total.number_of_agents(job), control_total.total_number_of_jobs) &gt; 0.3</argument>
            <argument name="sampling_hierarchy" type="string">['county_id']</argument>
          </run>
        </structure>
      </model>
      <model name="household_relocation_model_by_subarea" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.agent_relocation_model</class_module>
            <class_name>AgentRelocationModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="location_id_name" parser_action="quote_string" type="string">building_id</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Household Relocation Model with Zero Rates</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">AgentRelocationModel</name>
            <argument convert_blank_to_none="True" name="probabilities" parser_action="quote_string" type="string"></argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">hrm_resources_subarea</output>
            <argument name="rate_storage" type="string">None</argument>
            <argument convert_blank_to_none="True" name="rate_table" parser_action="quote_string" type="string"></argument>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">hrm_index</output>
            <argument name="resources" type="string">hrm_resources_subarea</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">household</argument>
          </run>
        </structure>
      </model>
      <model name="employment_relocation_model_by_subarea" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.agent_relocation_model</class_module>
            <class_name>AgentRelocationModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="location_id_name" parser_action="quote_string" type="string">building_id</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Employment Relocation Model</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
            <name name="name" type="string">AgentRelocationModel</name>
            <argument convert_blank_to_none="True" name="probabilities" parser_action="quote_string" type="string"></argument>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">erm_resources_subarea</output>
            <argument name="rate_storage" type="string">None</argument>
            <argument convert_blank_to_none="True" name="rate_table" parser_action="quote_string" type="string"></argument>
            <argument name="probability_attribute" parser_action="quote_string" type="string">job_relocation_probability</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">erm_index</output>
            <argument name="resources" type="string">erm_resources_subarea</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
          </run>
        </structure>
      </model>
	<model name="household_location_choice_model_by_subarea" type="model">
	<structure type="dictionary">
	  <import hidden="True" name="import" type="dictionary">
	    <class_module type="string">urbansim.models.subarea_household_location_choice_model</class_module>
	    <class_name>SubareaHouseholdLocationChoiceModel</class_name>
	  </import>
	  <init type="dictionary">
	    <name hidden="True" name="name" type="string">SubareaHouseholdLocationChoiceModel</name>
	    <argument model_dependency_type="variable" name="subarea_id_name" parser_action="quote_string" type="string">county_id</argument>
	    <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
	    <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string"></argument>
	    <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
	    <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
	    <!-- <argument name="number_of_units_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/> -->
	    <argument model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">residential_units</argument>
	    <argument model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">number_of_households</argument>
	    <argument name="location_id_string" parser_action="quote_string" type="string">building_id</argument>
	    <argument model_dependency_type="variable" name="simulation_weight_string" parser_action="quote_string" type="string">urbansim_parcel.building.vacant_residential_units</argument>
	    <argument model_dependency_type="variable" name="capacity_string" parser_action="quote_string" type="string">vacant_residential_units</argument>
	    <argument name="sample_size_locations" type="integer">30</argument>
	    <argument model_dependency_type="variable" name="submodel_string" parser_action="quote_string" type="string">inmigrant_code=household.is_inmigrant+1</argument>
	    <argument name="variable_package" parser_action="quote_string" type="string">urbansim_parcel</argument>
	    <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
	    <argument name="run_config" type="dictionary">
	      <key name="lottery_max_iterations" type="integer">20</key>
	      <key name="include_mnl_bias_correction_term" type="boolean">False</key>
	      <key name="accept_unavailability_of_choices" type="boolean">True</key>
	    </argument>
	  </init>
	  <prepare_for_run type="dictionary">
	    <name hidden="True" name="name" type="string">prepare_for_run</name>
	    <argument name="coefficients_storage" type="string">base_cache_storage</argument>
	    <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">household_location_choice_model_coefficients</argument>
	    <argument name="specification_storage" type="string">base_cache_storage</argument>
	    <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">household_location_choice_model_specification</argument>
	    <output hidden="True" name="output" type="string">(_specification, _coefficients)</output>
	  </prepare_for_run>
	  <run type="dictionary">
	    <argument model_dependency_type="dataset" name="agent_set" type="string">household</argument>
	    <argument hidden="True" name="agents_index" type="string">hrm_index</argument>
	    <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
	    <argument name="flush_after_each_subarea" type="boolean">True</argument>
	    <argument name="run_no_area" type="boolean">False</argument>
	    <argument name="maximum_runs" type="integer">2</argument>
	    <argument hidden="True" name="coefficients" type="string">_coefficients</argument>
	    <argument hidden="True" name="data_objects" type="string">datasets</argument>
	    <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
	    <argument hidden="True" name="specification" type="string">_specification</argument>
	  </run>
	</structure>
      </model>
      <model name="employment_location_choice_model_by_subarea" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim.models.subarea_employment_location_choice_model</class_module>
            <class_name>SubareaEmploymentLocationChoiceModel</class_name>
          </import>
          <group_by_attribute type="tuple">
            <argument model_dependency_type="table" name="grouping_table" type="string">home_based_status</argument>
            <argument name="grouping_column" type="string">name</argument>
          </group_by_attribute>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaEmploymentLocationChoiceModel</name>
            <argument model_dependency_type="variable" name="subarea_id_name" parser_action="quote_string" type="string">county_id</argument>
            <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">psrc_parcel.building.vacant_non_home_based_job_space &gt; 0</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <!-- <argument name="number_of_units_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/> -->
            <argument model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">total_SSS_job_space</argument>
            <argument model_dependency_type="variable" name="number_of_agents_string" parser_action="quote_string" type="string">number_of_SSS_jobs</argument>
            <argument name="sample_size_locations" type="integer">30</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string">job.sector_id</argument>
            <argument model_dependency_type="variable" name="capacity_string" parser_action="quote_string" type="string">vacant_SSS_job_space</argument>
            <argument name="simulation_weight_string" parser_action="quote_string" type="string">((numpy.logical_not(psrc_parcel.building.has_vacancy_for_new_sector) * urbansim_parcel.building.fraction_of_jobs_of_sector_SUBMODEL)+ (psrc_parcel.building.has_vacancy_for_new_sector * psrc_parcel.building.fraction_of_jobs_of_sector_SUBMODEL_static))*(psrc_parcel.building.vacant_SSS_job_space > 0)</argument>
            <argument name="compute_capacity_flag" type="boolean">True</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">psrc_parcel</argument>
            <argument name="run_config" type="dictionary">
              <key convert_blank_to_none="True" name="agent_units_string" type="string"></key>
              <key name="lottery_max_iterations" type="integer">10</key>
              <key name="sample_alternatives_by_submodel" type="boolean">True</key>
              <key name="accept_unavailability_of_choices" type="boolean">True</key>
            </argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument name="agent_filter" parser_action="quote_string" type="string">job.sector_id &lt; 18</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">employment_location_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
            <output hidden="True" name="output" type="string">(specification, coefficients)</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument hidden="True" name="agents_index" type="string">erm_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
            <argument name="maximum_runs" type="integer">2</argument>
            <argument name="flush_after_each_subarea" type="boolean">True</argument>
            <argument name="run_no_area" type="boolean">False</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">specification</argument>
          </run>
        </structure>
      </model>
      <model copyable="True" hidden="False" inherit_parent_values="False" name="governmental_employment_location_choice_model_by_subarea" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim_parcel.models.subarea_scaling_jobs_model</class_module>
            <class_name>SubareaScalingJobsModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaScalingJobsModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">county_id</argument>
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">urbansim_parcel.building.is_governmental</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">numpy.logical_or(job.sector_id==18, job.sector_id==19)</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <output hidden="True" name="output" type="string">filtered_erm_index</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument name="agents_index" type="string">filtered_erm_index</argument>
            <argument name="run_no_area" type="boolean">False</argument>
          </run>
        </structure>
      </model>
      <model name="governmental_employment_location_choice_model" type="model">
        <structure type="dictionary">
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">numpy.logical_or(job.sector_id==18, job.sector_id==19)</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <output hidden="True" name="output" type="string">filtered_erm_index</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument hidden="True" name="agents_index" type="string">filtered_erm_index</argument>
          </run>
        </structure>
      </model>
      <model name="assign_work_at_home_to_workers" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.simple_model</class_module>
            <class_name type="string">SimpleModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">SimpleModel</name>
            <argument name="model_name" parser_action="quote_string" type="string">Assign work_at_home Attribute to Persons</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="dataset" type="string">person</argument>
            <argument model_dependency_type="variable" name="expression" parser_action="quote_string" type="string">person.job_id &gt; 0</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">work_at_home</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
      <model copyable="True" hidden="False" name="work_at_home_choice_model_by_subarea" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim_parcel.models.work_at_home_choice_model</class_module>
            <class_name>WorkAtHomeChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">WorkAtHomeChoiceModel</name>
            <argument model_dependency_type="dataset" name="choice_set" type="string">job</argument>
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">psrc_parcel.job.is_untaken_home_based_job</argument>
            <argument name="match_number_of_jobs" type="boolean">False</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">person</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">work_at_home_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">work_at_home_choice_model_specification</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">urbansim_parcel.person.is_worker_without_job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(specification, coefficients, _index)</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">person</argument>
            <argument name="agents_index" type="string">_index</argument>
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="run_choice_model" type="boolean">True</argument>
            <argument name="choose_job_only_in_residence_zone" type="boolean">True</argument>
            <argument name="residence_id" parser_action="quote_string" type="string">county_id</argument>
            <argument name="match_choice_attribute_to_jobs" type="boolean">True</argument>
          </run>
        </structure>
      </model>
      <model copyable="True" hidden="False" name="work_at_home_choice_model_by_city" type="model">
	<structure type="dictionary">
	  <import name="import" type="dictionary">
	    <class_module>urbansim_parcel.models.work_at_home_choice_model</class_module>
	    <class_name>WorkAtHomeChoiceModel</class_name>
	  </import>
	  <init type="dictionary">
	    <name name="name" type="string">WorkAtHomeChoiceModel</name>
	    <argument model_dependency_type="dataset" name="choice_set" type="string">job</argument>
	    <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">psrc_parcel.job.is_untaken_home_based_job</argument>
	    <argument name="match_number_of_jobs" type="boolean">False</argument>
	  </init>
	  <prepare_for_run type="dictionary">
	    <name name="name" type="string">prepare_for_run</name>
	    <argument model_dependency_type="dataset" name="agent_set" type="string">person</argument>
	    <argument name="coefficients_storage" type="string">base_cache_storage</argument>
	    <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">work_at_home_choice_model_coefficients</argument>
	    <argument name="specification_storage" type="string">base_cache_storage</argument>
	    <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">work_at_home_choice_model_specification</argument>
	    <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">urbansim_parcel.person.is_worker_without_job</argument>
	    <argument name="data_objects" type="string">datasets</argument>
	    <output name="output" type="string">(specification, coefficients, _index)</output>
	  </prepare_for_run>
	  <run type="dictionary">
	    <argument model_dependency_type="dataset" name="agent_set" type="string">person</argument>
	    <argument name="agents_index" type="string">_index</argument>
	    <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
	    <argument name="coefficients" type="string">coefficients</argument>
	    <argument name="data_objects" type="string">datasets</argument>
	    <argument name="specification" type="string">specification</argument>
	    <argument name="run_choice_model" type="boolean">True</argument>
	    <argument name="choose_job_only_in_residence_zone" type="boolean">True</argument>
	    <argument name="residence_id" parser_action="quote_string" type="string">city_id</argument>
	    <argument name="match_choice_attribute_to_jobs" type="boolean">True</argument>
	  </run>
	</structure>
      </model>
      <model copyable="True" hidden="False" name="work_at_home_choice_model_by_tractcity" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim_parcel.models.work_at_home_choice_model</class_module>
            <class_name>WorkAtHomeChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">WorkAtHomeChoiceModel</name>
            <argument model_dependency_type="dataset" name="choice_set" type="string">job</argument>
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">psrc_parcel.job.is_untaken_home_based_job</argument>
            <argument name="match_number_of_jobs" type="boolean">False</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">person</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">work_at_home_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">work_at_home_choice_model_specification</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">urbansim_parcel.person.is_worker_without_job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(specification, coefficients, _index)</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">person</argument>
            <argument name="agents_index" type="string">_index</argument>
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="run_choice_model" type="boolean">True</argument>
            <argument name="choose_job_only_in_residence_zone" type="boolean">True</argument>
            <argument name="residence_id" parser_action="quote_string" type="string">tractcity_id</argument>
            <argument name="match_choice_attribute_to_jobs" type="boolean">True</argument>
          </run>
        </structure>
      </model>
    </models>
    <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <seed type="integer">1</seed>
      <cache_directory field_description="Directory for base_year cache, relative to OPUS_DATA_PATH or OPUS_HOME/data, e.g. seattle_parcel/base_year_data" field_identifier="Cache Directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/base_year_estimation_1K_luv_ct</cache_directory>
      <base_year field_identifier="Base Year" type="integer">2006</base_year>
      <years type="tuple">
        <firstyear field_identifier="Base Year" type="integer">2006</firstyear>
        <lastyear field_identifier="Base Year" type="integer">2006</lastyear>
      </years>
    </estimation_config>
    <travel_model_configuration inherit_parent_values="False" type="dictionary">
      <matrix_variable_map type="dictionary">
        <results type="dictionary">
          <aau1tm type="string">am_single_vehicle_to_work_travel_time</aau1tm>
          <aau1tl type="string">am_single_vehicle_to_work_toll</aau1tl>
          <aau1cs type="string">single_vehicle_to_work_travel_cost</aau1cs>
          <aau1ds type="string">single_vehicle_to_work_travel_distance</aau1ds>
          <awlktm type="string">am_walk_time_in_minutes</awlktm>
          <avehda type="string">am_pk_period_drive_alone_vehicle_trips</avehda>
          <atrtwa type="string">am_total_transit_time_walk</atrtwa>
          <lsum1 type="string">logsum_hbw_am_income_1</lsum1>
          <lsum2 type="string">logsum_hbw_am_income_2</lsum2>
          <lsum3 type="string">logsum_hbw_am_income_3</lsum3>
          <lsum4 type="string">logsum_hbw_am_income_4</lsum4>
        </results>
        <!-- <skims.auto.am type="dictionary">
          <aau1tm type="string">am_single_vehicle_to_work_travel_time</aau1tm>
          <aau1tl type="string">am_single_vehicle_to_work_toll</aau1tl>
         <aau2tm type="string">am_double_vehicle_to_work_travel_time</aau2tm> 
          <aau3tm type="string">am_threeplus_vehicle_to_work_travel_time</aau3tm>  
          <aau1cs type="string">single_vehicle_to_work_tyear_2015_log.txtravel_cost</aau1cs>
          <aau1ds type="string">single_vehicle_to_work_travel_distance</aau1ds>
         </skims.auto.am> 
         <skims.nonmotorized.am type="dictionary"> 
         <abketm type="string">am_bike_to_work_travel_time</abketm>
          <awlktm type="string">am_walk_time_in_minutes</awlktm>
		 </skims.nonmotorized.am>
		 <triptables.nonmotorized.all type="dictionary">
		   <abike type="string">am_biking_person_trips</abike>
           <awalk type="string">am_walking_person_trips</awalk>
		 </triptables.nonmotorized.all>
		 <triptables.autos.am type="dictionary">
		   <avehda type="string">am_pk_period_drive_alone_vehicle_trips</avehda>
		</triptables.autos.am>
		 <skims.transit.am.all_mode  type="dictionary">
          <atrtwa type="string">am_total_transit_time_walk</atrtwa>
         </skims.transit.am.all_mode>
 		<triptables.transit.walkaccess type="dictionary">		
          <atrnwa type="string">am_transit_person_trip_table</atrnwa>
   	    </triptables.transit.walkaccess>
   	    <modechoice.hbwork_inc1 type="dictionary">
         <lsum1 type="string">logsum_hbw_am_income_1</lsum1>
        </modechoice.hbwork_inc1>
        <modechoice.hbwork_inc2 type="dictionary">
          <lsum2 type="string">logsum_hbw_am_income_2</lsum2>
        </modechoice.hbwork_inc2>  
        <modechoice.hbwork_inc3 type="dictionary">
          <lsum3 type="string">logsum_hbw_am_income_3</lsum3>
        </modechoice.hbwork_inc3>  
        <modechoice.hbwork_inc4 type="dictionary">
          <lsum4 type="string">logsum_hbw_am_income_4</lsum4>
        </modechoice.hbwork_inc4> -->
      </matrix_variable_map>
    </travel_model_configuration>
  </model_manager>
  <scenario_manager>
    <scenario executable="True" name="psrc_county" type="scenario">
      <parent type="scenario_name">PSRC_baseline</parent>
      <description type="string">County-level simulation with TM skims</description>
      <models_to_run config_name="models" type="selectable_list">
	<selectable name="delete_county_from_households" type="model_choice">True</selectable>
	<selectable name="delete_county_from_jobs" type="model_choice">True</selectable>
        <selectable name="real_estate_price_model" type="model_choice">True</selectable>
        <selectable name="postprocess_real_estate_price_model" type="model_choice">False</selectable>
        <selectable name="expected_sales_unit_price_component_model" type="model_choice">True</selectable>
        <selectable name="postprocess_expected_sales_unit_price_component_model" type="model_choice">True</selectable>
        <selectable name="development_proposal_choice_model_by_subarea" type="model_choice">True</selectable>
        <selectable name="building_construction_model" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">True</selectable>
        <selectable name="jobs_event_model" type="model_choice">False</selectable>
        <selectable name="households_event_model" type="model_choice">False</selectable>
        <selectable name="household_transition_model" type="model_choice">True</selectable>
        <selectable name="set_inmigrants_model" type="model_choice">True</selectable>
        <selectable name="employment_transition_model" type="model_choice">True</selectable>
        <selectable name="job_person_consistency_keeper" type="model_choice">True</selectable>
        <selectable name="household_relocation_model" type="model_choice">True</selectable>
        <selectable name="household_location_choice_model" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households_if_lower_accessibility" type="model_choice">True</selectable>
        <selectable name="employment_relocation_model" type="model_choice">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="governmental_employment_location_choice_model" type="model_choice">True</selectable>
        <selectable name="distribute_unplaced_mining_utilities_jobs_model" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">True</selectable>
        <selectable name="work_at_home_choice_model" type="model_choice">True</selectable>
        <selectable name="workplace_choice_model_for_resident" type="model_choice">True</selectable>
      </models_to_run>
      <models_in_year type="dictionary">
        <models_in_year_category key_name="year" key_value="models_list" type="category_with_special_keys">
	  <yearset type="dictionary">
	    <year type="integer">2014</year>
	    <models_list type="list">["assign_work_at_home_to_workers", "work_at_home_choice_model_by_tractcity",  "work_at_home_choice_model_by_city", "workplace_choice_model_for_resident"]</models_list>
	  </yearset>
          <yearset type="dictionary">
            <year type="integer">2020</year>
	    <models_list type="list">["real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model_by_subarea", "building_construction_model", "assign_county_to_households", "assign_county_to_jobs", "household_transition_model_by_subarea", "set_inmigrants_model", "employment_transition_model_by_subarea", "job_person_consistency_keeper", "household_relocation_model", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_county_from_households", "delete_county_from_jobs"]</models_list>
          </yearset>
          <yearset type="dictionary">
            <year type="integer">2025</year>
	    <models_list type="list">["real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model_by_subarea", "building_construction_model", "assign_county_to_households", "assign_county_to_jobs", "household_transition_model_by_subarea", "set_inmigrants_model", "employment_transition_model_by_subarea", "job_person_consistency_keeper", "household_relocation_model", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_county_from_households", "delete_county_from_jobs"]</models_list>
          </yearset>
          <yearset type="dictionary">
            <year type="integer">2030</year>
	    <models_list type="list">["real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model_by_subarea", "building_construction_model", "assign_county_to_households", "assign_county_to_jobs", "household_transition_model_by_subarea", "set_inmigrants_model", "employment_transition_model_by_subarea", "job_person_consistency_keeper", "household_relocation_model", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_county_from_households", "delete_county_from_jobs"]</models_list>
          </yearset>
	  <yearset type="dictionary">
            <year type="integer">2035</year>
	    <models_list type="list">["real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model_by_subarea", "building_construction_model", "assign_county_to_households", "assign_county_to_jobs", "household_transition_model_by_subarea", "set_inmigrants_model", "employment_transition_model_by_subarea", "job_person_consistency_keeper", "household_relocation_model", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_county_from_households", "delete_county_from_jobs"]</models_list>
          </yearset>
	  <yearset type="dictionary">
            <year type="integer">2040</year>
	    <models_list type="list">["real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model_by_subarea", "building_construction_model", "assign_county_to_households", "assign_county_to_jobs", "household_transition_model_by_subarea", "set_inmigrants_model", "employment_transition_model_by_subarea", "job_person_consistency_keeper", "household_relocation_model", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_county_from_households", "delete_county_from_jobs"]</models_list>
          </yearset>
	  <yearset type="dictionary">
            <year type="integer">2045</year>
	    <models_list type="list">["real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model_by_subarea", "building_construction_model", "assign_county_to_households", "assign_county_to_jobs", "household_transition_model_by_subarea", "set_inmigrants_model", "employment_transition_model_by_subarea", "job_person_consistency_keeper", "household_relocation_model", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_county_from_households", "delete_county_from_jobs"]</models_list>
          </yearset>
	  <yearset type="dictionary">
            <year type="integer">2050</year>
	    <models_list type="list">["real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model_by_subarea", "building_construction_model", "assign_county_to_households", "assign_county_to_jobs", "household_transition_model_by_subarea", "set_inmigrants_model", "employment_transition_model_by_subarea", "job_person_consistency_keeper", "household_relocation_model", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_county_from_households", "delete_county_from_jobs"]</models_list>
          </yearset>
        </models_in_year_category>
      </models_in_year>
      <base_year type="integer">2014</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2015</firstyear>
        <lastyear type="integer">2050</lastyear>
      </years_to_run>
      <seed convert_blank_to_none="True" type="integer">1</seed>
      <flush_variables type="boolean">True</flush_variables>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfigurationNoDB</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <!--<argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/base_year_2014_inputs/county_model_test</argument>-->
	  <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/land_use_baseline_JF_county_model/test2</argument>
          <!--<argument name="existing_cache_to_copy" type="directory">D:/opus/data/psrc_parcel/base_year_data_1K_luv_ct</argument>-->
        </argument>
      </creating_baseyear_cache_configuration>
      <travel_model_configuration inherit_parent_values="False" type="dictionary">
	<travel_model_base_directory type="string">d:\4k_V405</travel_model_base_directory>
	<!-- <emme2_batch_file_name type="string">run_model_common_tg_beta.bat 3700 3733 3750 3751 4000</emme2_batch_file_name> -->
	<emme_command type="string">emme -ng 127.0.0.1</emme_command>
	<locations_to_disaggregate type="list">['parcel', 'building']</locations_to_disaggregate>
	<travel_model_input_file_writer type="string">psrc_parcel.travel_model_input_file_writer_emme4</travel_model_input_file_writer>
	<models type="selectable_list">
	  <selectable name="psrc_parcel.emme.models.get_cache_data_into_emme4" type="selectable">False</selectable>
	  <selectable name="psrc_parcel.emme.models.run_travel_model" type="selectable">False</selectable>
	  <selectable name="psrc_parcel.emme.models.run_export_skims" type="selectable">False</selectable>
	  <selectable name="psrc_parcel.emme.models.get_emme4_data_from_h5_into_cache" type="selectable">True</selectable>
	</models>
	<years_to_run key_name="year" type="category_with_special_keys">
	  <run_description type="dictionary">
	    <year type="integer">2015</year>
	    <bank type="list">['2014']</bank>
	    <emme2_batch_file_name type="string">psrc_4k.bat 4k_2014.ctl</emme2_batch_file_name>
	  </run_description>
	  <run_description type="dictionary">
	    <year type="integer">2025</year>
	    <bank type="list">['2025']</bank>
	    <emme2_batch_file_name type="string">psrc_4k.bat 4k_2025.ctl</emme2_batch_file_name>
	  </run_description>
	  <run_description type="dictionary">
	    <year type="integer">2035</year>
	    <bank type="list">['2040']</bank>
	    <emme2_batch_file_name type="string">psrc_4k.bat 4k_2040.ctl</emme2_batch_file_name>
	  </run_description>
	  <run_description type="dictionary">
	    <year type="integer">2040</year>
	    <bank type="list">['2040']</bank>
	    <emme2_batch_file_name type="string">psrc_4k.bat 4k_2040.ctl</emme2_batch_file_name>
	  </run_description>
	</years_to_run>
      </travel_model_configuration>
    </scenario>
  </scenario_manager>
  <results_manager>
    </results_manager>
</opus_project>
