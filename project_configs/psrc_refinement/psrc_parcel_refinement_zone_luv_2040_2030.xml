<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the PSRC parcel project - 2040 LUV refinement on zone level</description>
    <parent type="file">psrc_parcel_luv.xml</parent>
    <expression_library type="dictionary">
    </expression_library>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="refinement_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">psrc_parcel.models.refinement_model</class_module>
            <class_name>RefinementModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RefinementModel</name>
            <argument name="subarea_name" parser_action="quote_string" type="string">zone</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="refinement_dataset_name" parser_action="quote_string" type="string">refinement</argument>
            <argument name="refinement_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="refinement_table_name" parser_action="quote_string" type="string">zone_refinements</argument>
            <output hidden="True" name="output" type="string">refinement</output>
          </prepare_for_run>
          <run type="dictionary">
            <name hidden="True" name="name" type="string">run</name>
            <argument model_dependency_type="dataset" name="refinement_dataset" type="string">refinement</argument>
            <argument name="base_year" type="integer">2010</argument>
            <argument name="current_year" type="string">year</argument>
            <!-- <argument name="current_year" type="string">2011</argument>  -->
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument hidden="True" name="demolish_buildings" type="boolean">False</argument>
            <output hidden="True" name="output" type="string">processed_locations</output>
          </run>
        </structure>
      </model>
      <model copyable="True" name="expected_sales_unit_price_component_model" type="model">
        <structure type="dictionary">
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" name="parcel_filter_for_redevelopment" parser_action="quote_string" type="string"></argument>
          </prepare_for_run>
        </structure>
      </model>
      <model inherit_parent_values="False" name="development_proposal_choice_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">psrc_parcel.models.development_proposal_sampling_model_by_subarea_for_refinement</class_module>
            <class_name>DevelopmentProposalSamplingModelBySubareaForRefinement</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">DevelopmentProposalSamplingModelBySubareaForRefinement</name>
            <argument name="subarea_name" parser_action="quote_string" type="string">zone</argument>
            <argument name="intermediates_to_realestate" parser_action="quote_string" type="string">parcel</argument>
            <argument name="proposal_set" type="string">development_project_proposal</argument>
            <argument model_dependency_type="variable" name="weight_string" parser_action="quote_string" type="string">exprevpsft = expfin(0.09 * development_project_proposal.expected_sales_price_per_sqft)</argument>
            <argument convert_blank_to_none="True" name="filter_attribute" parser_action="quote_string" type="string"></argument>
          </init>
          <run type="dictionary">
            <argument name="location_ids_to_process" type="string">processed_locations['add']</argument>
            <argument name="n" type="integer">50</argument>
            <argument name="year" type="integer">2041</argument>
            <argument name="current_year" type="integer">2040</argument>
            <argument convert_blank_to_none="True" name="within_parcel_selection_weight_string" parser_action="quote_string" type="string">psrc_parcel.development_project_proposal.total_revenue</argument>
            <argument name="within_parcel_selection_compete_among_types" parser_action="quote_string" type="boolean">True</argument>
            <argument name="within_parcel_selection_threshold" type="integer">65</argument>
            <argument name="within_parcel_selection_n" type="integer">10</argument>
            <output hidden="True" name="output" type="string">(development_project_proposal, demolished_buildings)</output>
          </run>
        </structure>
      </model>
      <model name="household_relocation_model" type="model">
        <structure type="dictionary">
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="probabilities" parser_action="quote_string" type="string"></argument>
          </init>
          <prepare_for_run type="dictionary">
            <argument convert_blank_to_none="True" name="rate_storage" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="table" name="rate_table" parser_action="quote_string" type="string"></argument>
          </prepare_for_run>
        </structure>
      </model>
      <model name="set_inmigrants_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument model_dependency_type="variable" name="expression" parser_action="quote_string" type="string">household.zone_id &lt; 0</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">is_inmigrant</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
      <model name="household_location_choice_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim.models.subarea_household_location_choice_model</class_module>
            <class_name>SubareaHouseholdLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaHouseholdLocationChoiceModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">zone_id</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <!-- <argument name="number_of_units_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/> -->
            <argument name="sample_size_locations" type="integer">500</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">20</key>
              <key name="include_mnl_bias_correction_term" type="boolean">False</key>
              <key name="accept_unavailability_of_choices" type="boolean">True</key>
            </argument>
          </init>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':2000}</argument>
            <argument name="flush_after_each_subarea" type="boolean">True</argument>
            <argument name="run_no_area" type="boolean">False</argument>
            <argument name="maximum_runs" type="integer">3</argument>
          </run>
        </structure>
      </model>
      <model name="employment_relocation_model" type="model">
        <structure type="dictionary">
          <init type="dictionary">
            <argument convert_blank_to_none="True" name="probabilities" parser_action="quote_string" type="string"></argument>
          </init>
          <prepare_for_run type="dictionary">
            <argument convert_blank_to_none="True" name="rate_storage" type="string"></argument>
            <argument convert_blank_to_none="True" model_dependency_type="table" name="rate_table" parser_action="quote_string" type="string"></argument>
          </prepare_for_run>
        </structure>
      </model>
      <model name="employment_location_choice_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim.models.subarea_employment_location_choice_model</class_module>
            <class_name>SubareaEmploymentLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaEmploymentLocationChoiceModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">zone_id</argument>
            <argument convert_blank_to_none="True" model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">psrc_parcel.building.vacant_non_home_based_job_space &gt; 0</argument>
            <argument convert_blank_to_none="True" name="sampler" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <!-- <argument name="number_of_units_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/> -->
            <argument model_dependency_type="variable" name="number_of_units_string" parser_action="quote_string" type="string">total_SSS_job_space</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string">number_of_SSS_jobs</argument>
            <argument name="sample_size_locations" type="integer">500</argument>
            <argument name="run_config" type="dictionary">
              <key convert_blank_to_none="True" model_dependency_type="variable" name="agent_units_string" type="string"></key>
              <key name="lottery_max_iterations" type="integer">10</key>
              <key name="sample_alternatives_by_submodel" type="boolean">True</key>
              <key name="accept_unavailability_of_choices" type="boolean">True</key>
            </argument>
          </init>
          <run type="dictionary">
            <argument hidden="True" name="agents_index" type="string">erm_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':2000}</argument>
            <argument name="maximum_runs" type="integer">1</argument>
            <argument name="flush_after_each_subarea" type="boolean">True</argument>
            <argument name="run_no_area" type="boolean">False</argument>
          </run>
        </structure>
      </model>
      <model copyable="True" hidden="False" name="workplace_choice_model_for_resident" type="model">
        <structure type="dictionary">
          <init type="dictionary">
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">job.home_based_status==0</argument>
            <argument name="run_config" type="dictionary">
              <key model_dependency_type="variable" name="capacity_string" type="string">is_untaken_nhb_job = numpy.logical_and(job.number_of_agents(person)==0, job.home_based_status==0)</key>
            </argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">numpy.logical_and(urbansim_parcel.person.is_non_home_based_worker, urbansim_parcel.person.is_worker_without_job)</argument>
          </run>
        </structure>
      </model>
      <model copyable="True" hidden="False" name="governmental_employment_location_choice_model_without_filter" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim_parcel.models.subarea_scaling_jobs_model</class_module>
            <class_name>SubareaScalingJobsModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaScalingJobsModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">zone_id</argument>
            <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">numpy.logical_or(job.sector_id==18, job.sector_id==19)</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <output hidden="True" name="output" type="string">filtered_erm_index</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument name="agents_index" type="string">filtered_erm_index</argument>
            <argument name="run_no_area" type="boolean">False</argument>
          </run>
        </structure>
      </model>
      <model copyable="True" hidden="False" name="scaling_unplaced_jobs" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim_parcel.models.subarea_scaling_agents_model</class_module>
            <class_name>SubareaScalingAgentsModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaScalingAgentsModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">zone_id</argument>
            <argument convert_blank_to_none="True" name="submodel_string" parser_action="quote_string" type="string">sector_id</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">numpy.logical_and(urbansim_parcel.job.is_non_home_based, job.building_id&lt;=0)</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string"></argument>
            <output hidden="True" name="output" type="string">filtered_jobs_index_for_sam</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
            <argument name="agents_index" type="string">filtered_jobs_index_for_sam</argument>
            <argument name="run_no_area" type="boolean">False</argument>
          </run>
        </structure>
      </model>
      <model copyable="True" hidden="False" name="scaling_unplaced_households" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim_parcel.models.subarea_scaling_agents_model</class_module>
            <class_name>SubareaScalingAgentsModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaScalingAgentsModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">zone_id</argument>
            <argument name="filter" parser_action="quote_string" type="string"></argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">household</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">household.building_id &lt;= 0</argument>
            <argument convert_blank_to_none="True" name="agents_index" type="string"></argument>
            <output hidden="True" name="output" type="string">filtered_hhs_index_for_sam</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="location_set" type="string">building</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">household</argument>
            <argument name="agents_index" type="string">filtered_hhs_index_for_sam</argument>
            <argument name="run_no_area" type="boolean">False</argument>
          </run>
        </structure>
      </model>
      <model name="delete_zone_from_households" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.delete_attribute_model</class_module>
            <class_name type="string">DeleteAttributeModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">DeleteAttributeModel</name>
            <argument name="model_name" parser_action="quote_string" type="string">Delete zone_id Attribute from Households</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="dataset" type="string">household</argument>
            <argument name="attribute" parser_action="quote_string" type="string">zone_id</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
      <model name="delete_zone_from_jobs" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.delete_attribute_model</class_module>
            <class_name type="string">DeleteAttributeModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">DeleteAttributeModel</name>
            <argument name="model_name" parser_action="quote_string" type="string">Delete zone_id Attribute from Jobs</argument>
          </init>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="dataset" type="string">job</argument>
            <argument name="attribute" parser_action="quote_string" type="string">zone_id</argument>
          </run>
        </structure>
        <specification type="dictionary"></specification>
      </model>
    </models>
  </model_manager>
  <scenario_manager>
    <scenario executable="True" name="2030_refinement" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2010</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2031</firstyear>
        <lastyear type="integer">2033</lastyear>
      </years_to_run>
      <seed convert_blank_to_none="True" type="integer">1</seed>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfigurationNoDB</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2030LUVrefinements/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2030LUVrefinements/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <models_in_year type="dictionary">
        <models_in_year_category key_name="year" key_value="models_list" type="category_with_special_keys">
          <doesnotmatter type="dictionary">
            <year type="integer">2031</year>
            <models_list type="list">["refinement_model", "real_estate_price_model", "postprocess_real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model", "building_construction_model"]</models_list>
          </doesnotmatter>
          <doesnotmatter2 type="dictionary">
            <year type="integer">2032</year>
            <models_list type="list">["modify_workers_jobs_after_moving_households", "modify_workers_jobs_after_moving_jobs", "set_inmigrants_model", "household_relocation_model", "household_location_choice_model", "scaling_unplaced_households"]</models_list>
          </doesnotmatter2>
        </models_in_year_category>
      </models_in_year>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="refinement_model" type="selectable">False</selectable>
        <selectable name="real_estate_price_model" type="model_choice">False</selectable>
        <selectable name="postprocess_real_estate_price_model" type="model_choice">False</selectable>
        <selectable name="expected_sales_unit_price_component_model" type="model_choice">False</selectable>
        <selectable name="postprocess_expected_sales_unit_price_component_model" type="model_choice">False</selectable>
        <selectable name="development_proposal_choice_model" type="model_choice">False</selectable>
        <selectable name="building_construction_model" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">False</selectable>
        <selectable name="set_inmigrants_model" type="model_choice">False</selectable>
        <selectable name="household_relocation_model" type="model_choice">False</selectable>
        <selectable name="household_location_choice_model" type="model_choice">False</selectable>
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="governmental_employment_location_choice_model_without_filter" type="model_choice">True</selectable>
        <selectable name="scaling_unplaced_jobs" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households_if_lower_accessibility" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">True</selectable>
        <selectable name="work_at_home_choice_model" type="model_choice">False</selectable>
        <selectable name="workplace_choice_model_for_resident" type="model_choice">True</selectable>
        <selectable name="delete_zone_from_households" type="model_choice">True</selectable>
        <selectable name="delete_zone_from_jobs" type="model_choice">True</selectable>
      </models_to_run>
      <advanced type="category">
        <datasets_to_cache_after_each_model type="list">['building', 'parcel', 'household', 'person', 'job', 'development_project_proposal', 'development_project_proposal_component', 'travel_data', 'gridcell']</datasets_to_cache_after_each_model>
        <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2030LUVrefinements/runs</cache_directory>
        <flush_variables type="boolean">False</flush_variables>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['psrc_parcel', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
      </advanced>
    </scenario>
    <scenario executable="True" name="2035_refinement" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2010</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2036</firstyear>
        <lastyear type="integer">2038</lastyear>
      </years_to_run>
      <seed convert_blank_to_none="True" type="integer">1</seed>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfigurationNoDB</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2035LUVrefinements/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2035LUVrefinements/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <models_in_year type="dictionary">
        <models_in_year_category key_name="year" key_value="models_list" type="category_with_special_keys">
          <doesnotmatter type="dictionary">
            <year type="integer">2036</year>
            <models_list type="list">["refinement_model", "real_estate_price_model", "postprocess_real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model", "building_construction_model"]</models_list>
          </doesnotmatter>
          <doesnotmatter2 type="dictionary">
            <year type="integer">2037</year>
            <models_list type="list">["modify_workers_jobs_after_moving_households", "modify_workers_jobs_after_moving_jobs", "set_inmigrants_model", "household_relocation_model", "household_location_choice_model", "scaling_unplaced_households"]</models_list>
          </doesnotmatter2>
        </models_in_year_category>
      </models_in_year>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="refinement_model" type="selectable">False</selectable>
        <selectable name="real_estate_price_model" type="model_choice">False</selectable>
        <selectable name="postprocess_real_estate_price_model" type="model_choice">False</selectable>
        <selectable name="expected_sales_unit_price_component_model" type="model_choice">False</selectable>
        <selectable name="postprocess_expected_sales_unit_price_component_model" type="model_choice">False</selectable>
        <selectable name="development_proposal_choice_model" type="model_choice">False</selectable>
        <selectable name="building_construction_model" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">False</selectable>
        <selectable name="set_inmigrants_model" type="model_choice">False</selectable>
        <selectable name="household_relocation_model" type="model_choice">False</selectable>
        <selectable name="household_location_choice_model" type="model_choice">False</selectable>
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="governmental_employment_location_choice_model_without_filter" type="model_choice">True</selectable>
        <selectable name="scaling_unplaced_jobs" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households_if_lower_accessibility" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">True</selectable>
        <selectable name="work_at_home_choice_model" type="model_choice">False</selectable>
        <selectable name="workplace_choice_model_for_resident" type="model_choice">True</selectable>
        <selectable name="delete_zone_from_households" type="model_choice">True</selectable>
        <selectable name="delete_zone_from_jobs" type="model_choice">True</selectable>
      </models_to_run>
      <advanced type="category">
        <datasets_to_cache_after_each_model type="list">['building', 'parcel', 'household', 'person', 'job', 'development_project_proposal', 'development_project_proposal_component', 'travel_data', 'gridcell']</datasets_to_cache_after_each_model>
        <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2035LUVrefinements/runs</cache_directory>
        <flush_variables type="boolean">False</flush_variables>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['psrc_parcel', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
      </advanced>
    </scenario>
    <scenario executable="True" name="2040_refinement" type="scenario">
      <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2010</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2041</firstyear>
        <lastyear type="integer">2043</lastyear>
      </years_to_run>
      <seed convert_blank_to_none="True" type="integer">1</seed>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfigurationNoDB</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2040LUVrefinements/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2040LUVrefinements/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <models_in_year type="dictionary">
        <models_in_year_category key_name="year" key_value="models_list" type="category_with_special_keys">
          <doesnotmatter type="dictionary">
            <year type="integer">2041</year>
            <models_list type="list">["refinement_model", "real_estate_price_model", "postprocess_real_estate_price_model", "expected_sales_unit_price_component_model", "postprocess_expected_sales_unit_price_component_model", "development_proposal_choice_model", "building_construction_model"]</models_list>
          </doesnotmatter>
          <doesnotmatter2 type="dictionary">
            <year type="integer">2042</year>
            <models_list type="list">["modify_workers_jobs_after_moving_households", "modify_workers_jobs_after_moving_jobs", "set_inmigrants_model", "household_relocation_model", "household_location_choice_model", "scaling_unplaced_households"]</models_list>
          </doesnotmatter2>
        </models_in_year_category>
      </models_in_year>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="refinement_model" type="selectable">False</selectable>
        <selectable name="real_estate_price_model" type="model_choice">False</selectable>
        <selectable name="postprocess_real_estate_price_model" type="model_choice">False</selectable>
        <selectable name="expected_sales_unit_price_component_model" type="model_choice">False</selectable>
        <selectable name="postprocess_expected_sales_unit_price_component_model" type="model_choice">False</selectable>
        <selectable name="development_proposal_choice_model" type="model_choice">False</selectable>
        <selectable name="building_construction_model" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">False</selectable>
        <selectable name="set_inmigrants_model" type="model_choice">False</selectable>
        <selectable name="household_relocation_model" type="model_choice">False</selectable>
        <selectable name="household_location_choice_model" type="model_choice">False</selectable>
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="governmental_employment_location_choice_model_without_filter" type="model_choice">True</selectable>
        <selectable name="scaling_unplaced_jobs" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households_if_lower_accessibility" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">True</selectable>
        <selectable name="work_at_home_choice_model" type="model_choice">False</selectable>
        <selectable name="workplace_choice_model_for_resident" type="model_choice">True</selectable>
        <selectable name="delete_zone_from_households" type="model_choice">True</selectable>
        <selectable name="delete_zone_from_jobs" type="model_choice">True</selectable>
      </models_to_run>
      <advanced type="category">
        <datasets_to_cache_after_each_model type="list">['building', 'parcel', 'household', 'person', 'job', 'development_project_proposal', 'development_project_proposal_component', 'travel_data', 'gridcell']</datasets_to_cache_after_each_model>
        <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2040LUVrefinements/runs</cache_directory>
        <flush_variables type="boolean">False</flush_variables>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['psrc_parcel', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
      </advanced>
    </scenario>
  </scenario_manager>
  <results_manager>
    </results_manager>
</opus_project>
