<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the PSRC parcel sub-regional project</description>
    <parent type="file">../psrc_parcel_new_repm_hlcm_altroi.xml</parent>
    <expression_library type="dictionary">
    </expression_library>
 </general>
 <model_manager>
 <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model copyable="True" name="expected_sales_unit_price_component_model_relaxed_redevelopment" type="model">
     <dependencies type="list">['real_estate_price_model', 'postprocess_real_estate_price_model']</dependencies>
     <structure type="dictionary">
      <import hidden="True" name="import" type="dictionary">
         <class_module type="string">psrc_parcel.models.expected_sales_unit_price_comp_model</class_module>
         <class_name>ExpectedSalesUnitPriceModel</class_name>
       </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">ExpectedSalesUnitPriceModel</name>
            <argument name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">building_type_id</argument>
            <argument name="filter_attribute" parser_action="quote_string" type="string" model_dependency_type="variable">urbansim_parcel.development_project_proposal.is_size_fit</argument>
            <argument name="outcome_attribute_name" parser_action="quote_string" type="string">ln_expected_sales_price_per_sqft</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
          </init>
       <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument name="parcel_filter_for_new_development" parser_action="quote_string" type="string">has_vacant_land=numpy.logical_or(urbansim_parcel.parcel.vacant_land_area==parcel.parcel_sqft, urbansim_parcel.parcel.is_residential_land_use_type * (safe_array_divide(parcel.parcel_sqft, urbansim_parcel.parcel.used_land_area) &gt; 2.5 ) * ((parcel.aggregate(building.improvement_value, function=maximum) &lt; 200000)))</argument>
            <argument name="parcel_filter_for_redevelopment" parser_action="quote_string" type="string">capacity_opportunity_non_gov=((safe_array_divide(psrc_parcel.parcel.max_developable_capacity, urbansim_parcel.parcel.building_sqft)&gt;1.1)*(parcel.aggregate(urbansim_parcel.building.is_governmental)==0)*(numpy.logical_not(parcel.aggregate(urbansim_parcel.building.age_masked, function=mean)&lt;1))*(numpy.logical_or((safe_array_divide(psrc_parcel.parcel.max_developable_capacity, urbansim_parcel.parcel.building_sqft)&gt;6),(parcel.land_use_type_id&lt;&gt;15)))*(parcel.aggregate(building.job_capacity)&lt;500)*((safe_array_divide(urbansim_parcel.parcel.improvement_value,parcel.parcel_sqft))&lt;250))</argument>            
            <argument name="template_filter" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
            <argument hidden="True" name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">expected_sales_unit_price_component_model_specification</argument>
            <argument hidden="True" name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">expected_sales_unit_price_component_model_coefficients</argument>
            <argument hidden="True" name="spec_replace_module_variable_pair" type="string" convert_blank_to_none="True"/>
            <argument hidden="False" name="proposed_units_variable" type="string" parser_action="quote_string">psrc_parcel.development_project_proposal.units_proposed_plus_minimum_1DU_per_legal_lot_yield</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument hidden="False" name="accept_only_larger_proposals_for_redevelopment" type="boolean">True</argument>
            <output hidden="True" name="output" type="string">(development_project_proposal, development_project_proposal_component, specification, coefficients)</output>
          </prepare_for_run>
       <run type="dictionary">
         <argument name="dataset" type="string">development_project_proposal_component</argument>
         <argument name="specification" type="string">specification</argument>
         <argument name="coefficients" type="string">coefficients</argument>
       </run>
       </structure>
    </model>
      <model type="model" name="development_proposal_choice_model_by_subarea">
        <structure type="dictionary">
          <import hidden="True" type="dictionary" name="import">
            <class_module type="string">psrc_parcel.models.development_proposal_sampling_model_by_subarea_for_refinement</class_module>
            <class_name>DevelopmentProposalSamplingModelBySubareaForRefinement</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" type="string" name="name">DevelopmentProposalSamplingModelBySubareaForRefinement</name>
            <argument type="string" name="subarea_name" parser_action="quote_string" model_dependency_type="dataset">city</argument>
            <argument type="string" name="intermediates_to_realestate" parser_action="quote_string" model_dependency_type="dataset">parcel</argument>
            <argument type="string" name="proposal_set" model_dependency_type="dataset">development_project_proposal</argument>
            <argument type="string" parser_action="quote_string" name="weight_string" model_dependency_type="variable">exprevpsft = expfin(0.09 * development_project_proposal.expected_sales_price_per_sqft)</argument>
            <argument type="string" convert_blank_to_none="True" parser_action="quote_string" name="filter_attribute" model_dependency_type="variable"/>
          </init>
          <run type="dictionary">
            <argument type="string" name="location_ids_to_process" convert_blank_to_none="True"></argument>
            <argument type="boolean" parser_action="quote_string" name="process_planned">True</argument>
            <argument type="integer" name="n">50</argument>
            <argument type="string" name="year">year</argument>
            <argument type="string" name="current_year">year</argument>
            <argument type="string" parser_action="quote_string" name="within_parcel_selection_weight_string" convert_blank_to_none="True" model_dependency_type="variable">psrc_parcel.development_project_proposal.total_revenue</argument>
            <argument type="boolean" parser_action="quote_string" name="within_parcel_selection_compete_among_types">True</argument>
            <argument type="integer" name="within_parcel_selection_threshold">65</argument>
            <argument type="integer" name="within_parcel_selection_n">10</argument>
            <output hidden="True" type="string" name="output">(development_project_proposal, demolished_buildings)</output>
          </run>
        </structure>
      </model>
     <model name="assign_city_to_households" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.simple_model</class_module>
            <class_name type="string">SimpleModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">SimpleModel</name>
          </init>
          <run type="dictionary">
            <argument name="dataset" type="string" model_dependency_type="dataset">household</argument>
            <argument name="expression" parser_action="quote_string" type="string" model_dependency_type="variable">psrc_parcel.household.city_id</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">city_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
        <specification type="dictionary"/>
      </model>
      <model name="assign_city_to_jobs" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.simple_model</class_module>
            <class_name type="string">SimpleModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">SimpleModel</name>
          </init>
          <run type="dictionary">
            <argument name="dataset" type="string" model_dependency_type="dataset">job</argument>
            <argument name="expression" parser_action="quote_string" type="string" model_dependency_type="variable">psrc_parcel.job.city_id</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">city_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </run>
        </structure>
        <specification type="dictionary"/>
      </model>
      <model name="delete_city_from_households" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.delete_attribute_model</class_module>
            <class_name type="string">DeleteAttributeModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">DeleteAttributeModel</name>
          </init>
          <run type="dictionary">
            <argument name="dataset" type="string" model_dependency_type="dataset">household</argument>
            <argument name="attribute" parser_action="quote_string" type="string">city_id</argument>
          </run>
        </structure>
        <specification type="dictionary"/>
      </model>
      <model name="delete_city_from_jobs" type="model">
        <dependencies type="list">[]</dependencies>
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.models.delete_attribute_model</class_module>
            <class_name type="string">DeleteAttributeModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">DeleteAttributeModel</name>
          </init>
          <run type="dictionary">
            <argument name="dataset" type="string" model_dependency_type="dataset">job</argument>
            <argument name="attribute" parser_action="quote_string" type="string">city_id</argument>
          </run>
        </structure>
        <specification type="dictionary"/>
      </model>
      <model name="household_transition_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="sampling_threshold" type="string" parser_action="quote_string" model_dependency_type="variable">safe_array_divide(control_total.number_of_agents(household), control_total.total_number_of_households) &gt; 0.3</argument>
            <argument name="sampling_hierarchy" type="string">['city_id', 'county_id']</argument>
         </run>
        </structure>
      </model>
      <model name="employment_transition_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="sampling_threshold" type="string" parser_action="quote_string" model_dependency_type="variable">safe_array_divide(control_total.number_of_agents(job), control_total.total_number_of_jobs) &gt; 0.3</argument>
            <argument name="sampling_hierarchy" type="string">['city_id', 'county_id']</argument>
         </run>
        </structure>
      </model>
      <model name="household_relocation_model_by_subarea" type="model">
      <structure type="dictionary">
        <init type="dictionary">
            <argument name="probabilities" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
        </init>
      <prepare_for_run type="dictionary">
            <argument name="rate_storage" type="string">None</argument>
            <argument name="rate_table" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
          </prepare_for_run>
      </structure>
      </model>
      <model name="employment_relocation_model_by_subarea" type="model">
      <structure type="dictionary">
        <init type="dictionary">
            <argument name="probabilities" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
        </init>
      <prepare_for_run type="dictionary">
            <argument name="rate_storage" type="string">None</argument>
            <argument name="rate_table" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
          </prepare_for_run>
      </structure>
      </model>
      <model name="household_location_choice_model_by_subarea" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim.models.subarea_household_location_choice_model</class_module>
            <class_name>SubareaHouseholdLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaHouseholdLocationChoiceModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string" model_dependency_type="variable">city_id</argument>
            <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
            <argument name="filter" parser_action="quote_string" type="string" model_dependency_type="variable"></argument>
            <argument name="sampler" parser_action="quote_string" type="string" convert_blank_to_none="True">opus_core.samplers.weighted_sampler</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <!-- <argument name="number_of_units_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/> -->
            <argument name="number_of_units_string" parser_action="quote_string" type="string" model_dependency_type="variable">residential_units</argument>
            <argument name="number_of_agents_string" parser_action="quote_string" type="string" model_dependency_type="variable">number_of_households</argument>
            <argument name="location_id_string" parser_action="quote_string" type="string">building_id</argument>
            <argument name="simulation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">urbansim_parcel.building.vacant_residential_units</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string" model_dependency_type="variable">vacant_residential_units</argument>
            <argument name="sample_size_locations" type="integer">200</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string" model_dependency_type="variable">inmigrant_code=household.is_inmigrant+1</argument>
            <argument name="variable_package" parser_action="quote_string" type="string">urbansim_parcel</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">20</key>
              <key name="include_mnl_bias_correction_term" type="boolean">False</key>
              <key name="accept_unavailability_of_choices" type="boolean">True</key>
            </argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">household_location_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">household_location_choice_model_specification</argument>
            <output hidden="True" name="output" type="string">(_specification, _coefficients)</output>        
          </prepare_for_run>
          <run type="dictionary">
            <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
            <argument hidden="True" name="agents_index" type="string">hrm_index</argument>
            <argument name="chunk_specification" type="string">{'records_per_chunk':5000}</argument>
            <argument name="flush_after_each_subarea" type="boolean">True</argument>
            <argument name="run_no_area" type="boolean">False</argument>
            <argument name="maximum_runs" type="integer">3</argument>
            <argument hidden="True" name="coefficients" type="string">_coefficients</argument>
            <argument hidden="True" name="data_objects" type="string">datasets</argument>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
            <argument hidden="True" name="specification" type="string">_specification</argument>
          </run>
        </structure>
      </model>
      <model name="employment_location_choice_model_by_subarea" type="model">
      <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
             <class_module type="string">urbansim.models.subarea_employment_location_choice_model</class_module>
             <class_name>SubareaEmploymentLocationChoiceModel</class_name>
           </import>
           <group_by_attribute type="tuple">
                  <argument name="grouping_table" type="string" model_dependency_type="table">home_based_status</argument>
                  <argument name="grouping_column" type="string">name</argument>
           </group_by_attribute>
            <init type="dictionary">
                  <name hidden="True" name="name" type="string">SubareaEmploymentLocationChoiceModel</name>
                  <argument name="subarea_id_name" parser_action="quote_string" type="string" model_dependency_type="variable">city_id</argument>
                  <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
                  <argument name="filter" convert_blank_to_none="True" parser_action="quote_string" type="string" model_dependency_type="variable">psrc_parcel.building.vacant_non_home_based_job_space &gt; 0</argument>
                  <argument name="sampler" parser_action="quote_string" type="string" convert_blank_to_none="True">opus_core.samplers.weighted_sampler</argument>
                  <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
                  <!-- <argument name="number_of_units_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/> -->
                  <argument name="number_of_units_string" parser_action="quote_string" type="string" model_dependency_type="variable">total_SSS_job_space</argument>
                  <argument name="number_of_agents_string" parser_action="quote_string" type="string" model_dependency_type="variable">number_of_SSS_jobs</argument>                  
                  <argument name="sample_size_locations" type="integer">200</argument>
                  <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
                  <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
                  <argument name="submodel_string" parser_action="quote_string" type="string">job.sector_id</argument>
                  <argument name="capacity_string" parser_action="quote_string" type="string" model_dependency_type="variable">vacant_SSS_job_space</argument>
                  <argument name="simulation_weight_string" parser_action="quote_string" type="string">((numpy.logical_not(psrc_parcel.building.has_vacancy_for_new_sector) * urbansim_parcel.building.fraction_of_jobs_of_sector_SUBMODEL)+ (psrc_parcel.building.has_vacancy_for_new_sector * psrc_parcel.building.fraction_of_jobs_of_sector_SUBMODEL_static))*(psrc_parcel.building.vacant_SSS_job_space &gt; 0) </argument>
                  <argument name="compute_capacity_flag" type="boolean">True</argument>
                  <argument name="variable_package" parser_action="quote_string" type="string">psrc_parcel</argument>
                  <argument name="run_config" type="dictionary">
                    <key convert_blank_to_none="True" name="agent_units_string" type="string"/>
                    <key name="lottery_max_iterations" type="integer">10</key>
                    <key name="sample_alternatives_by_submodel" type="boolean">True</key>
                    <key name="accept_unavailability_of_choices" type="boolean">True</key>
                  </argument>
                </init>
                <prepare_for_run type="dictionary">
                  <name hidden="True" name="name" type="string">prepare_for_run</name>
                  <argument name="agent_filter" parser_action="quote_string" type="string">job.sector_id &lt; 18</argument>
                  <argument name="coefficients_storage" type="string">base_cache_storage</argument>
                  <argument name="coefficients_table" parser_action="quote_string" type="string" model_dependency_type="table">employment_location_choice_model_coefficients</argument>
                  <argument name="specification_storage" type="string">base_cache_storage</argument>
                  <argument name="specification_table" parser_action="quote_string" type="string" model_dependency_type="table">employment_location_choice_model_specification</argument>
                  <output hidden="True" name="output" type="string">(specification, coefficients)</output>
                </prepare_for_run>
                <run type="dictionary">
                  <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
                  <argument hidden="True" name="agents_index" type="string">erm_index</argument>
                  <argument name="chunk_specification" type="string">{'records_per_chunk':5000}</argument>
                  <argument name="maximum_runs" type="integer">2</argument>
                  <argument name="flush_after_each_subarea" type="boolean">True</argument>
                  <argument name="run_no_area" type="boolean">False</argument>
                  <argument name="coefficients" type="string">coefficients</argument>
                  <argument name="data_objects" type="string">datasets</argument>
                  <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
                  <argument hidden="True" name="specification" type="string">specification</argument>
                </run>
      </structure>
      </model>
      <model copyable="True" hidden="False" name="governmental_employment_location_choice_model_by_subarea" type="model" inherit_parent_values="False">
      <structure type="dictionary">
           <import hidden="True" name="import" type="dictionary">
                  <class_module type="string">urbansim_parcel.models.subarea_scaling_jobs_model</class_module>
                  <class_name>SubareaScalingJobsModel</class_name>
           </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaScalingJobsModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">city_id</argument>
            <argument model_dependency_type="variable" name="filter" parser_action="quote_string" type="string">urbansim_parcel.building.is_governmental</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
            <argument name="agents_filter" type="string" parser_action="quote_string" model_dependency_type="variable">numpy.logical_or(job.sector_id==18, job.sector_id==19)</argument>
            <argument name="agents_index" type="string">erm_index</argument>
            <output hidden="True" name="output" type="string">filtered_erm_index</output>
          </prepare_for_run>
          <run type="dictionary">
              <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
              <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
              <argument name="agents_index" type="string">filtered_erm_index</argument>
              <argument name="run_no_area" type="boolean">False</argument>
          </run>
       </structure>
    </model>
    <model copyable="True" hidden="False" name="scaling_unplaced_jobs" type="model">
      <structure type="dictionary">
           <import hidden="True" name="import" type="dictionary">
                  <class_module type="string">urbansim_parcel.models.subarea_scaling_agents_model</class_module>
                  <class_name>SubareaScalingAgentsModel</class_name>
           </import>
          <init type="dictionary">
          <name hidden="True" name="name" type="string">SubareaScalingAgentsModel</name>
          <argument name="subarea_id_name" parser_action="quote_string" type="string">city_id</argument>
          <argument name="submodel_string" type="string" parser_action="quote_string" convert_blank_to_none="True">sector_id</argument>
          <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
          <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
        <name hidden="True" name="name" type="string">prepare_for_run</name>
          <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
          <argument name="agents_filter" type="string" parser_action="quote_string" model_dependency_type="variable">numpy.logical_and(urbansim_parcel.job.is_non_home_based, job.building_id&lt;=0)</argument>
          <argument name="agents_index" type="string" convert_blank_to_none="True"/>
         <output hidden="True" name="output" type="string">filtered_jobs_index_for_sam</output>
      </prepare_for_run>
          <run type="dictionary">
              <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
              <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
              <argument name="agents_index" type="string">filtered_jobs_index_for_sam</argument>
              <argument name="run_no_area" type="boolean">False</argument>
          </run>
       </structure>
    </model>
    <model copyable="True" hidden="False" name="scaling_unplaced_households" type="model">
      <structure type="dictionary">
           <import hidden="True" name="import" type="dictionary">
                  <class_module type="string">urbansim_parcel.models.subarea_scaling_agents_model</class_module>
                  <class_name>SubareaScalingAgentsModel</class_name>
           </import>
          <init type="dictionary">
          <name hidden="True" name="name" type="string">SubareaScalingAgentsModel</name>
          <argument name="subarea_id_name" parser_action="quote_string" type="string">city_id</argument>
          <argument name="filter" parser_action="quote_string" type="string"></argument>
          <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
          <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
        <name hidden="True" name="name" type="string">prepare_for_run</name>
          <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
          <argument name="agents_filter" type="string" parser_action="quote_string" model_dependency_type="variable">household.building_id &lt;= 0</argument>
          <argument name="agents_index" type="string" convert_blank_to_none="True"/>
         <output hidden="True" name="output" type="string">filtered_hhs_index_for_sam</output>
    </prepare_for_run>
          <run type="dictionary">
              <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
              <argument name="agent_set" type="string" model_dependency_type="dataset">household</argument>
              <argument name="agents_index" type="string">filtered_hhs_index_for_sam</argument>
              <argument name="run_no_area" type="boolean">False</argument>
          </run>
       </structure>
    </model>
          <model copyable="True" hidden="False" name="work_at_home_choice_model_by_subarea" type="model">
          <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim_parcel.models.work_at_home_choice_model</class_module>
            <class_name>WorkAtHomeChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">WorkAtHomeChoiceModel</name>
            <argument model_dependency_type="dataset" name="choice_set" type="string">job</argument>
            <argument name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">psrc_parcel.job.is_untaken_home_based_job</argument>
            <argument name="match_number_of_jobs" type="boolean">True</argument>
          </init>
        <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument model_dependency_type="dataset" name="agent_set" type="string">person</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="coefficients_table" parser_action="quote_string" type="string">work_at_home_choice_model_coefficients</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument model_dependency_type="table" name="specification_table" parser_action="quote_string" type="string">work_at_home_choice_model_specification</argument>
            <argument model_dependency_type="variable" name="agents_filter" parser_action="quote_string" type="string">urbansim_parcel.person.is_worker_without_job</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(specification, coefficients, _index)</output>
          </prepare_for_run>
          <run type="dictionary">
            <argument model_dependency_type="dataset" name="agent_set" type="string">person</argument>
            <argument name="agents_index" type="string">_index</argument>
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="run_choice_model" type="boolean">False</argument>
            <argument name="choose_job_only_in_residence_zone" type="boolean">True</argument>
            <argument name="residence_id" parser_action="quote_string" type="string">city_id</argument>
          </run>
        </structure>
        </model>
      </models>
         <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <seed type="integer">1</seed>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/base_year_estimation_1K_luv_ct</cache_directory>
      <base_year type="integer" field_identifier="Base Year">2006</base_year>
      <years type="tuple">
        <firstyear type="integer" field_identifier="Base Year">2006</firstyear>
        <lastyear type="integer" field_identifier="Base Year">2006</lastyear>
      </years>
    </estimation_config>
 </model_manager>
  <scenario_manager>
    <scenario executable="True" name="psrc_luv_test" type="scenario">
      <parent type="scenario_name">PSRC_baseline</parent>
       <models_to_run config_name="models" type="selectable_list">
        <selectable name="real_estate_price_model" type="model_choice">False</selectable>
        <selectable name="postprocess_real_estate_price_model" type="model_choice">False</selectable>
        <selectable name="expected_sales_unit_price_component_model" type="model_choice">False</selectable>
        <selectable name="postprocess_expected_sales_unit_price_component_model" type="model_choice">False</selectable>
        <selectable name="development_proposal_choice_model" type="model_choice">False</selectable>
        <selectable name="building_construction_model" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">False</selectable>
        <selectable name="jobs_event_model" type="model_choice">False</selectable>
        <selectable name="assign_city_to_households" type="model_choice">True</selectable>
        <selectable name="assign_city_to_jobs" type="model_choice">True</selectable>
        <selectable name="household_transition_model" type="model_choice">True</selectable>
        <selectable name="set_inmigrants_model" type="model_choice">True</selectable>
        <selectable name="employment_transition_model" type="model_choice">True</selectable>
        <selectable name="job_person_consistency_keeper" type="model_choice">False</selectable>
        <selectable name="household_relocation_model" type="model_choice">False</selectable>
        <selectable name="household_location_choice_model" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_households_if_lower_accessibility" type="model_choice">False</selectable>
        <selectable name="employment_relocation_model" type="model_choice">False</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">False<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="governmental_employment_location_choice_model" type="model_choice">False</selectable>
        <selectable name="distribute_unplaced_mining_utilities_jobs_model" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">False</selectable>
        <selectable name="work_at_home_choice_model" type="model_choice">False</selectable>
        <selectable name="workplace_choice_model_for_resident" type="model_choice">False</selectable>
      </models_to_run>
      <models_in_year type="dictionary">
      <models_in_year_category  key_name="year" key_value="models_list" type="category_with_special_keys">
       <yearset type="dictionary">
          <year type="integer">2000</year>
		  <models_list type="list">["assign_city_to_households", "assign_city_to_jobs", "impute_residential_land_area_model", "compute_max_dev_capacity_model"]</models_list>       
	   </yearset>
	   <yearset type="dictionary">
          <year type="integer">2005</year>
		  <models_list type="list">["real_estate_price_model", "postprocess_real_estate_price_model", "expected_sales_unit_price_component_model_relaxed_redevelopment", "postprocess_expected_sales_unit_price_component_model", "delete_city_from_households", "delete_city_from_jobs", "assign_city_to_households", "assign_city_to_jobs", "household_transition_model", "set_inmigrants_model", "employment_transition_model", "job_person_consistency_keeper", "development_proposal_choice_model_by_subarea", "building_construction_model", "household_relocation_model", "household_location_choice_model_by_subarea", "employment_relocation_model", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "scaling_unplaced_jobs", "scaling_unplaced_households", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_city_from_households", "delete_city_from_jobs"]</models_list>
       </yearset>
       	 <yearset type="dictionary">
          <year type="integer">2001</year>
		  <models_list type="list">[ "delete_city_from_households", "delete_city_from_jobs", "assign_city_to_households", "assign_city_to_jobs", "household_transition_model", "set_inmigrants_model", "employment_transition_model", "job_person_consistency_keeper",  "household_relocation_model",  "employment_relocation_model", "governmental_employment_location_choice_model_by_subarea", "scaling_unplaced_jobs", "scaling_unplaced_households", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_city_from_households", "delete_city_from_jobs"]</models_list>
       </yearset>
       <yearset type="dictionary">
          <year type="integer">2002</year>
		  <models_list type="list">["employment_transition_model", "employment_relocation_model", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident"]</models_list>
       </yearset>
    </models_in_year_category> 
      </models_in_year>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2001</firstyear>
        <lastyear type="integer">2001</lastyear>
      </years_to_run>
      <seed type="integer" convert_blank_to_none="True">1</seed>
      <flush_variables type="boolean">True</flush_variables>
      </scenario>
      <scenario executable="True" name="psrc_luv" type="scenario">
      <parent type="scenario_name">PSRC_baseline</parent>
       <models_to_run config_name="models" type="selectable_list">
        <selectable name="delete_city_from_households" type="model_choice">True</selectable>
        <selectable name="delete_city_from_jobs" type="model_choice">True</selectable>
        <selectable name="real_estate_price_model" type="model_choice">True</selectable>
        <selectable name="postprocess_real_estate_price_model" type="model_choice">True</selectable>
        <selectable name="expected_sales_unit_price_component_model" type="model_choice">True</selectable>
        <selectable name="postprocess_expected_sales_unit_price_component_model" type="model_choice">True</selectable>
        <selectable name="development_proposal_choice_model" type="model_choice">True</selectable>
        <selectable name="building_construction_model" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">False</selectable>
        <selectable name="jobs_event_model" type="model_choice">False</selectable>
        <selectable name="household_transition_model" type="model_choice">True</selectable>
        <selectable name="set_inmigrants_model" type="model_choice">True</selectable>
        <selectable name="employment_transition_model" type="model_choice">True</selectable>
        <selectable name="job_person_consistency_keeper" type="model_choice">True</selectable>
        <selectable name="household_relocation_model" type="model_choice">True</selectable>
        <selectable name="household_location_choice_model" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households_if_lower_accessibility" type="model_choice">False</selectable>
        <selectable name="employment_relocation_model" type="model_choice">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="governmental_employment_location_choice_model" type="model_choice">True</selectable>
        <selectable name="distribute_unplaced_mining_utilities_jobs_model" type="model_choice">False</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">False</selectable>
        <selectable name="work_at_home_choice_model" type="model_choice">True</selectable>
        <selectable name="workplace_choice_model_for_resident" type="model_choice">True</selectable>
      </models_to_run>
      <models_in_year type="dictionary">
      <models_in_year_category  key_name="year" key_value="models_list" type="category_with_special_keys">
       <yearset type="dictionary">
          <year type="integer">2000</year>
		  <models_list type="list">["impute_residential_land_area_model", "compute_max_dev_capacity_model"]</models_list>       
	   </yearset>
       <yearset type="dictionary">
          <year type="integer">2010</year>
		  <models_list type="list">["real_estate_price_model", "postprocess_real_estate_price_model", "expected_sales_unit_price_component_model_relaxed_redevelopment", "postprocess_expected_sales_unit_price_component_model", "delete_city_from_households", "delete_city_from_jobs", "assign_city_to_households", "assign_city_to_jobs", "household_transition_model", "set_inmigrants_model", "employment_transition_model", "job_person_consistency_keeper", "development_proposal_choice_model_by_subarea", "building_construction_model", "household_relocation_model_by_subarea", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "scaling_unplaced_jobs", "scaling_unplaced_households", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_city_from_households", "delete_city_from_jobs"]</models_list>
       </yearset>
       <yearset type="dictionary">
          <year type="integer">2025</year>
		  <models_list type="list">["real_estate_price_model", "postprocess_real_estate_price_model", "expected_sales_unit_price_component_model_relaxed_redevelopment", "postprocess_expected_sales_unit_price_component_model", "delete_city_from_households", "delete_city_from_jobs", "assign_city_to_households", "assign_city_to_jobs", "household_transition_model", "set_inmigrants_model", "employment_transition_model", "job_person_consistency_keeper", "development_proposal_choice_model_by_subarea", "building_construction_model", "household_relocation_model_by_subarea", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "scaling_unplaced_jobs", "scaling_unplaced_households", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_city_from_households", "delete_city_from_jobs"]</models_list>
       </yearset>
        <yearset type="dictionary">
          <year type="integer">2035</year>
		  <models_list type="list">["real_estate_price_model", "postprocess_real_estate_price_model", "expected_sales_unit_price_component_model_relaxed_redevelopment", "postprocess_expected_sales_unit_price_component_model", "delete_city_from_households", "delete_city_from_jobs", "assign_city_to_households", "assign_city_to_jobs", "household_transition_model", "set_inmigrants_model", "employment_transition_model", "job_person_consistency_keeper", "development_proposal_choice_model_by_subarea", "building_construction_model", "household_relocation_model_by_subarea", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "scaling_unplaced_jobs", "scaling_unplaced_households", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_city_from_households", "delete_city_from_jobs"]</models_list>
       </yearset>
       <yearset type="dictionary">
          <year type="integer">2040</year>
		  <models_list type="list">["real_estate_price_model", "postprocess_real_estate_price_model", "expected_sales_unit_price_component_model_relaxed_redevelopment", "postprocess_expected_sales_unit_price_component_model", "delete_city_from_households", "delete_city_from_jobs", "assign_city_to_households", "assign_city_to_jobs", "household_transition_model", "set_inmigrants_model", "employment_transition_model", "job_person_consistency_keeper", "development_proposal_choice_model_by_subarea", "building_construction_model", "household_relocation_model_by_subarea", "household_location_choice_model_by_subarea", "employment_relocation_model_by_subarea", {"employment_location_choice_model_by_subarea": {"group_members":"non_home_based"}}, "governmental_employment_location_choice_model_by_subarea", "scaling_unplaced_jobs", "scaling_unplaced_households", "work_at_home_choice_model_by_subarea", "workplace_choice_model_for_resident", "delete_city_from_households", "delete_city_from_jobs"]</models_list>
       </yearset>
    </models_in_year_category> 
      </models_in_year>
      <base_year type="integer">2000</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2000</firstyear>
        <lastyear type="integer">2040</lastyear>
      </years_to_run>
      <seed type="integer" convert_blank_to_none="True">1</seed>
      <flush_variables type="boolean">True</flush_variables>
      </scenario>
 </scenario_manager>
 </opus_project>