<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v1.dtd">
<config>

<!-- ====================================================================== -->
	<module name="matrixBasedPtRouter" >    
		<!-- Boolean. "true": MATSim expects a ptStops input file and runs the pseudo pt based on the given pt stops; "false": no pseudo pt based on ptStops is used in MATSim -->
		<param name="usingPtStops" value="true"/>
		<!-- Set a path to pt stop csv file ingluding columns for "id", "x"- and "y"-coordinate -->
		<param name="ptStopsFile" value="/Network/Servers/kosrae.ethz.ch/Volumes/ivt-home/zoelligc/eclipse-urbansim/data/zurich_kt_parcel/base_year_data/2000/matsim/network/Zones_Attributes_v3_3cols.csv"/>
		<!-- Boolean. "true": MATSim expects both an input file for ptTravelTimes and ptTravelDistances and runs the pseudo pt with the given times and distances. Providing a ptStops input file is mandatory! -->
		<param name="usingTravelTimesAndDistances" value="true"/>
		<!-- Set a path to pt travel times file (in VISUM JRT or TXT format) including columns for from ptStopId, to ptStopId and travel times in minutes -->
		<param name="ptTravelTimesFile" value="/Network/Servers/kosrae.ethz.ch/Volumes/ivt-home/zoelligc/eclipse-urbansim/data/zurich_kt_parcel/base_year_data/2000/matsim/network/Reisezeiten_2007_OeV_v3.JRT"/>
		<!-- Set a path to pt travel distances file (in VISUM JRD or TXT format) including columns for from ptStopId, to ptStopId and travel distances in meter -->
		<param name="ptTravelDistancesFile" value="/Network/Servers/kosrae.ethz.ch/Volumes/ivt-home/zoelligc/eclipse-urbansim/data/zurich_kt_parcel/base_year_data/2000/matsim/network/OeV_2007_7_8_v3.JRD"/>
	</module>

<!-- ====================================================================== -->

	<module name="changeLegMode" >
		<param name="modes" value="car,pt" />
	</module>

<!-- ====================================================================== -->

	<module name="strategy" >

		<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
		<param name="ModuleDisableAfterIteration_1" value="79" />

		<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
		<param name="ModuleDisableAfterIteration_2" value="null" />

		<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
		<param name="ModuleDisableAfterIteration_3" value="79" />

		<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
		<param name="ModuleDisableAfterIteration_4" value="79" />
        
    	<!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_1" value="0.1" />

		<!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_2" value="0.9" />

		<!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_3" value="0.1" />
    
        <!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_4" value="0.1" />
        
        
        <!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
		<param name="Module_1" value="ChangeExpBeta" /> 
        
        <!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
		<param name="Module_2" value="TimeAllocationMutator" /> 
        
        <!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
		<param name="Module_3" value="ReRoute" /> 
        
        <!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
		<param name="Module_4" value="ChangeLegMode" /> 
        
	</module>
 
<!-- ====================================================================== -->

	<module name="planCalcScore" >

		<!-- [1/utils] conversion factor of utility model for use in logit-based choice model.  Set to 1 if your utl function is estimated -->
		<param name="BrainExpBeta" value="1.0" />

		<!-- [utils/hr] utility for departing early (i.e. before the earliest end time).  Probably implemented correctly, but not tested. -->
		<param name="earlyDeparture" value="-0.0" />

		<!-- [utils/hr] utility for arriving late (i.e. after the latest start time).  normally negative -->
		<param name="lateArrival" value="-18.0" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- [utils/unit_of_money] conversion of money (e.g. toll, distance cost) into utils -->
		<param name="marginalUtilityOfMoney" value="1.0" />
		<param name="marginalUtlOfDistanceOther" value="0.0" />

		<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
		<param name="marginalUtlOfDistanceWalk" value="0.0" />

		<!-- [unit_of_money/m] conversion of car distance into money. Probably needs to be negative to work. -->
		<param name="monetaryDistanceCostRateCar" value="0.0" />

		<!-- [unit_of_money/m] conversion of pt distance into money. Probably needs to be negative to work. -->
		<param name="monetaryDistanceCostRatePt" value="0.0" />

		<!-- [utils/hr] marginal utility of doing an activity.  normally positive.  also the opportunity cost of time if agent is doing nothing. -->
		<param name="performing" value="6.0" />

		<!-- [utils/hr] additional marginal utility of traveling by car.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling" value="-6.0" />
		<param name="travelingBike" value="-6.0" />
		<param name="travelingOther" value="-6.0" />

		<!-- [utils/hr] additional marginal utility offset of traveling by pt.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="travelingPt" value="-6.0" />

		<!-- [utils/hr] additional marginal utility offset of traveling by foot.  normally negative.  this comes on top of the opportunity cost of time.  also see marginalUtlOfDistanceWalk -->
		<param name="travelingWalk" value="-6.0" />
	</module>

<!-- ====================================================================== -->

	<module name="accessibility" >

		<!-- if only a sample of destinations should be used (reduces accuracy - not recommended except when necessary for computational speed reasons) -->
		<param name="accessibilityDestinationSamplingRate" value="1.0" />

		<!-- econometric accessibility usually returns the logsum. Set to true if you just want the sum (without the ln) -->
		<param name="usingRawSumsWithoutLn" value="true" />
	</module>

<!-- ====================================================================== -->

</config>
