<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the PSRC parcel project</description>
    <parent type="file">psrc_parcel_new_repm_hlcm.xml</parent>
    <expression_library type="dictionary">
    </expression_library>
 </general>
 <model_manager>
 <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="refinement_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">psrc_parcel.models.refinement_model</class_module>
            <class_name>RefinementModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RefinementModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_run</name>
            <argument name="refinement_dataset_name" parser_action="quote_string" type="string">refinement</argument>
            <argument name="refinement_storage" type="string">base_cache_storage</argument>
            <argument name="refinement_table_name" parser_action="quote_string" type="string" model_dependency_type="table">refinements</argument>
            <output hidden="True" name="output" type="string">refinement</output>
          </prepare_for_run>
          <run type="dictionary">
            <name hidden="True" name="name" type="string">run</name>
            <argument name="refinement_dataset" type="string">refinement</argument>
            <argument name="base_year" type="integer">2000</argument>
            <argument name="current_year" type="string">year</argument>
            <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
            <output hidden="True" name="output" type="string">processed_zones</output>
          </run>
        </structure>
      </model>
      <model copyable="True" name="expected_sales_unit_price_model" type="model">
     <structure type="dictionary">
        <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument type="string" convert_blank_to_none="True" name="parcel_filter_for_redevelopment"/>
        </prepare_for_run>
     </structure>
     </model>
     <model type="model" name="development_proposal_choice_model">
        <structure type="dictionary">
          <import hidden="True" type="dictionary" name="import">
            <class_module type="string">psrc_parcel.models.development_proposal_sampling_model_by_zones</class_module>
            <class_name>DevelopmentProposalSamplingModelByZones</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" type="string" name="name">DevelopmentProposalSamplingModelByZones</name>
          </init>
          <run type="dictionary">
            <argument type="string" name="zones" model_dependency_type="dataset">zone</argument>
            <argument type="string" name="zone_ids_to_process">processed_zones['add']</argument>
            <argument type="integer" name="n">50</argument>
            <argument type="integer" name="year">2011</argument>
          </run>
        </structure>
      </model>
     <model name="household_relocation_model" type="model">
        <structure type="dictionary">
        <init type="dictionary">
            <argument name="probabilities" parser_action="quote_string" convert_blank_to_none="True" type="string"/>
        </init>
        <prepare_for_run type="dictionary">
          <argument name="rate_storage" type="string" convert_blank_to_none="True"/>
          <argument name="rate_table" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
        </prepare_for_run>
     </structure>
     </model>
    <model name="set_inmigrants_model" type="model">
        <structure type="dictionary">
          <run type="dictionary">
            <argument name="expression" parser_action="quote_string" type="string" model_dependency_type="variable">household.zone_id &lt; 0</argument>
            <argument name="outcome_attribute" parser_action="quote_string" type="string">is_inmigrant</argument>
          </run>
        </structure>
        <specification type="dictionary"/>
      </model>
     <model name="household_location_choice_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim.models.subarea_household_location_choice_model</class_module>
            <class_name>SubareaHouseholdLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaHouseholdLocationChoiceModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">zone_id</argument>
            <argument name="sampler" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
            <argument name="number_of_units_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">20</key>
              <key name="include_mnl_bias_correction_term" type="boolean">False</key>
              <key name="accept_unavailability_of_choices" type="boolean">True</key>
            </argument>
          </init>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'nchunks':1}</argument>
          </run>
        </structure>
      </model>
    <model name="employment_relocation_model" type="model">
        <structure type="dictionary">
          <init type="dictionary">
            <argument name="probabilities" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
          </init>
          <prepare_for_run type="dictionary">
            <argument name="rate_storage" type="string" convert_blank_to_none="True"/>
            <argument name="rate_table" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
          </prepare_for_run>
        </structure>
      </model>
       <model name="employment_location_choice_model" type="model">
         <structure type="dictionary">
                <import hidden="True" name="import" type="dictionary">
                  <class_module type="string">urbansim.models.subarea_employment_location_choice_model</class_module>
                  <class_name>SubareaEmploymentLocationChoiceModel</class_name>
                </import>
                <init type="dictionary">
                  <name hidden="True" name="name" type="string">SubareaEmploymentLocationChoiceModel</name>
                  <argument name="subarea_id_name" parser_action="quote_string" type="string">zone_id</argument>
                  <argument name="filter" convert_blank_to_none="True" parser_action="quote_string" type="string">psrc_parcel.building.vacant_non_home_based_job_space &gt; 0</argument>
                  <argument name="number_of_units_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
                  <argument name="run_config" type="dictionary">
                    <key convert_blank_to_none="True" name="agent_units_string" type="string"/>
                    <key name="lottery_max_iterations" type="integer">10</key>
                    <key name="sample_alternatives_by_submodel" type="boolean">True</key>
                    <key name="accept_unavailability_of_choices" type="boolean">True</key>
                  </argument>
                </init>
                <run type="dictionary">
                  <argument hidden="True" name="agents_index" type="string">erm_index</argument>
                  <!--<argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>-->
                  <argument name="chunk_specification" type="string">{'records_per_chunk':5000}</argument>
                  <argument name="maximum_runs" type="integer">1</argument>
                </run>
              </structure>
 </model>
    <model copyable="True" hidden="False" name="workplace_choice_model_for_resident" type="model">
        <structure type="dictionary">
          <init type="dictionary">
          <argument name="filter" parser_action="quote_string" type="string" model_dependency_type="variable">job.home_based_status==0</argument>
          <argument name="run_config" type="dictionary">
          <key name="capacity_string" type="string" model_dependency_type="variable">is_untaken_nhb_job = numpy.logical_and(job.number_of_agents(person)==0, job.home_based_status==0)</key>
          </argument>
          </init>
          <run type="dictionary">
              <argument name="agents_filter" parser_action="quote_string" type="string" model_dependency_type="variable">numpy.logical_and(urbansim_parcel.person.is_non_home_based_worker, urbansim_parcel.person.is_worker_without_job)</argument>
          </run>
        </structure>  
    </model>
    <model copyable="True" hidden="False" name="governmental_employment_location_choice_model_without_filter" type="model">
      <structure type="dictionary">
           <import hidden="True" name="import" type="dictionary">
                  <class_module type="string">urbansim_parcel.models.subarea_scaling_jobs_model</class_module>
                  <class_name>SubareaScalingJobsModel</class_name>
           </import>
          <init type="dictionary">
          <name hidden="True" name="name" type="string">SubareaScalingJobsModel</name>
          <argument name="subarea_id_name" parser_action="quote_string" type="string">zone_id</argument>
          <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
    <name hidden="True" name="name" type="string">prepare_for_run</name>
          <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
          <argument name="agents_filter" type="string" parser_action="quote_string" model_dependency_type="variable">numpy.logical_or(job.sector_id==18, job.sector_id==19)</argument>
          <argument name="agents_index" type="string">erm_index</argument>
    <output hidden="True" name="output" type="string">filtered_erm_index</output>
    </prepare_for_run>
          <run type="dictionary">
              <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
              <argument name="agent_set" type="string" model_dependency_type="dataset">job</argument>
              <argument name="agents_index" type="string">filtered_erm_index</argument>
          </run>
       </structure>
    </model>
 </models>
 </model_manager>
 <scenario_manager>
     <scenario type="scenario" executable="True" name="2010_refinement">
     <parent type="scenario_name">urbansim_parcel_baseline</parent>
      <base_year type="integer">2010</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2011</firstyear>
        <lastyear type="integer">2011</lastyear>
      </years_to_run>
      <seed type="integer" convert_blank_to_none="True">1</seed>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfigurationNoDB</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2010refinements/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2010refinements/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="refinement_model" type="selectable">True</selectable>
        <selectable name="real_estate_price_model" type="model_choice">True</selectable>
        <selectable name="postprocess_real_estate_price_model" type="model_choice">True</selectable>
        <selectable name="expected_sales_unit_price_model" type="model_choice">True</selectable>
        <selectable name="development_proposal_choice_model" type="model_choice">True</selectable>
        <selectable name="building_construction_model" type="model_choice">True</selectable>
        <selectable name="set_inmigrants_model" type="model_choice">True</selectable>
        <selectable name="household_relocation_model" type="model_choice">True</selectable>
        <selectable name="household_location_choice_model" type="model_choice">True</selectable>
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">non_home_based</group_members>
        </selectable>
        <selectable name="governmental_employment_location_choice_model_without_filter" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_households_if_lower_accessibility" type="model_choice">True</selectable>
        <selectable name="modify_workers_jobs_after_moving_jobs" type="model_choice">True</selectable>
        <selectable name="work_at_home_choice_model" type="model_choice">False</selectable>
        <selectable name="workplace_choice_model_for_resident" type="model_choice">True</selectable>
      </models_to_run>
      <advanced type="category">
      <datasets_to_cache_after_each_model type="list">['building', 'parcel', 'household', 'person', 'job', 'development_project_proposal', 'travel_data', 'gridcell']</datasets_to_cache_after_each_model>
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/2010refinements/runs</cache_directory>
         <flush_variables type="boolean">False</flush_variables>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['psrc_parcel', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
      </advanced>
    </scenario>
 </scenario_manager>
 </opus_project>
