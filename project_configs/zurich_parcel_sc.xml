<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <!--<parent type="file">zurich_parcel/configs/zurich_li_parcel.xml</parent>-->
    <!--<parent type="file">zurich_parcel/configs/zurich_li_parcel.xml</parent>-->
    <!--<parent type="file">zurich_parcel/configs/zurich_li_parcel.xml</parent>-->
    <!--<parent type="file">zurich_parcel/configs/zurich_li_parcel.xml</parent>-->
    <parent type="file">zurich_parcel/configs/kt_cache.xml</parent>
    <parent type="file">zurich_parcel/configs/zurich_kt_parcel.xml</parent>
    <expression_library type="dictionary">
      <variable use="both" source="expression" name="household.SC_dist_to_previous_loc" type="variable_definition">household.aggregate(sqrt((person.disaggregate(parcel.x_coord_sp, intermediates=[building, household])-person.disaggregate(parcel.x_coord_sp_lag1, intermediates=[building, household]))**2+(person.disaggregate(parcel.y_coord_sp, intermediates=[building, household])-person.disaggregate(parcel.y_coord_sp_lag1, intermediates=[building, household]))**2)**-0.15) / (household.number_of_agents(person))</variable>
      <variable use="both" source="expression" name="household.SC_dist_to_workplace" type="variable_definition">household.aggregate((sqrt((person.disaggregate(parcel.x_coord_sp, intermediates=[building, household])-person.disaggregate(parcel.x_coord_sp, intermediates=[building, job]))**2+(person.disaggregate(parcel.y_coord_sp, intermediates=[building, household])-person.disaggregate(parcel.y_coord_sp, intermediates=[building, job]))**2)**-0.0914))/ household.aggregate(person.worker)</variable>
      <variable use="both" source="expression" name="person.SC_dist_to_job" type="variable_definition">0.1629 * exp(-0.00008 * sqrt((person.disaggregate(parcel.x_coord_sp, intermediates=[building, household])-person.disaggregate(parcel.x_coord_sp, intermediates=[building, job]))**2+(person.disaggregate(parcel.y_coord_sp, intermediates=[building, household])-person.disaggregate(parcel.y_coord_sp, intermediates=[building, job]))**2)) </variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2_step_ln" type="variable_definition">((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &lt; 0) * 4 * ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)) + ((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories) &gt; 0) * ln(((parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)))</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_taxindex_jur" type="variable_definition">parcel.jurst</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_taxindex" type="variable_definition">parcel.stfuss</variable>
      <variable use="both" source="Python class" name="parcel.SC_jobs_within_300" type="variable_definition">urbansim_parcel.parcel.jobs_within_300_of_parcel</variable>
      <variable use="both" source="Python class" name="parcel.SC_newcomers_within_300_of_parcel" type="variable_definition">zurich_parcel.parcel.newcomers_within_300_of_parcel</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_permitted_floor_m2" type="variable_definition">(parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft) - (development_event_history.land_area * development_event_history.stories)</variable>
      <variable use="both" source="expression" name="parcel.SC_jobs_and_pop_within_300" type="variable_definition">zurich_parcel.parcel.persons_within_300_of_parcel + urbansim_parcel.parcel.jobs_within_300_of_parcel</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_plan_type_id" type="variable_definition">parcel.plan_type_id</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_parcel_sqft" type="variable_definition">parcel.parcel_sqft</variable>
      <variable use="both" source="expression" name="parcel.SC_permitted_floor_m2" type="variable_definition">parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft</variable>
      <variable use="both" source="expression" name="parcel.SC_price_permitted_floor_m2" type="variable_definition">(parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft) / (parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) * parcel.parcel_sqft)</variable>
      <variable use="both" source="expression" name="parcel.SC_land_price" type="variable_definition">parcel.disaggregate(city.avrg_landprice) * parcel.parcel_sqft</variable>
      <variable use="both" source="expression" name="building.SC_quality_is_residential" type="variable_definition">numpy.logical_or(numpy.logical_or(building.building_quality_id == 1021, building.building_quality_id == 1025),building.building_quality_id == 1030) </variable>
      <variable use="both" source="expression" name="building.SC_quality_is_non_residential" type="variable_definition">building.building_quality_id &gt;=1040</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_parcel_cut_off" type="variable_definition">(parcel.parcel_sqft &gt; development_event_history.land_area) * parcel.parcel_sqft - development_event_history.land_area</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_parcel_and_far" type="variable_definition">(parcel.parcel_sqft &gt; development_event_history.land_area) * parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) - (parcel.aggregate(development_event_history.land_area * development_event_history.stories) / development_event_history.land_area)</variable>
      <variable use="both" source="expression" name="parcel.SC_acc_car_and_pt" type="variable_definition">parcel.acc_car + parcel.acc_pt</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_fed_tax_revenue_pers" type="variable_definition">parcel.fed_tax_revenue_pers</variable>
      <variable use="model variable" source="Python class" name="parcel.SC_workers_within_1000" type="variable_definition">zurich_parcel.parcel.workers_within_1000_of_parcel</variable>
      <variable use="both" source="expression" name="parcel.SC_ln_jobs_and_pop_within_300" type="variable_definition">ln(zurich_parcel.parcel.persons_within_300_of_parcel + urbansim_parcel.parcel.jobs_within_300_of_parcel)</variable>
      <variable use="both" source="expression" name="parcel.SC_ln_pop_within_300" type="variable_definition">ln(zurich_parcel.parcel.persons_within_300_of_parcel)</variable>
      <variable use="both" source="expression" name="parcel.SC_ln_jobs_within_300" type="variable_definition">ln(urbansim_parcel.parcel.jobs_within_300_of_parcel)</variable>
      <variable use="both" source="expression" name="parcel.SC_dist_to_highwayaccess_inv_U_form_300" type="variable_definition">-(parcel.dist_to_highwayaccess - 300)**2</variable>
      <variable use="both" source="primary attribute" name="parcel.SC_dist_to_highwayaccess" type="variable_definition">parcel.dist_to_highwayaccess</variable>
      <variable use="both" source="expression" name="parcel.SC_dist_to_station_inv_U_form" type="variable_definition">-(parcel.dist_to_station - 150)**2</variable>
      <variable use="model variable" source="Python class" name="parcel.SC_new_bldgs_within_150_of_parcel" type="variable_definition">zurich_parcel.parcel.new_bldgs_within_150_of_parcel</variable>
      <variable use="both" source="expression" name="parcel.SC_max_parcel_far" type="variable_definition">parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum))</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_parcel_far" type="variable_definition">parcel.disaggregate(plan_type.aggregate(development_constraint.maximum, function=maximum)) - (parcel.aggregate(development_event_history.land_area * development_event_history.stories) / development_event_history.land_area)</variable>
      <variable use="model variable" source="expression" name="parcel.SC_logit_foreigners_within_56_of_parcel" type="variable_definition">ln(zurich_parcel.parcel.households_foreign_within_56_of_parcel) - ln(1 - zurich_parcel.parcel.households_foreign_within_56_of_parcel)</variable>
      <variable use="both" source="expression" name="parcel.SC_noise" type="variable_definition">numpy.logical_and(parcel.dist_to_highwaynet&lt;100, parcel.dist_to_railnet&lt;100)</variable>
      <variable use="model variable" source="Python class" name="parcel.SC_new_bldgs_within_100_of_parcel" type="variable_definition">zurich_parcel.parcel.new_bldgs_within_100_of_parcel</variable>
      <variable use="both" source="Python class" name="parcel.SC_share_new_bldg_within_100_of_parcel" type="variable_definition">zurich_parcel.parcel.new_bldg_within_100_of_parcel</variable>
      <variable use="both" source="expression" name="development_event_history_x_parcel.SC_dev_fit_parcel" type="variable_definition">parcel.parcel_sqft - development_event_history.land_area</variable>
      <variable use="both" source="expression" name="building_x_parcel.SC_building_fit_parcel" type="variable_definition">parcel.parcel_sqft - building.land_area</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect1" type="variable_definition">(job.sector_id == 1 ) * ln(building.sqm_sector1)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect8" type="variable_definition">(job.sector_id == 8 ) * ln(building.sqm_sector8)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect7" type="variable_definition">(job.sector_id == 7 ) * ln(building.sqm_sector7)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect6" type="variable_definition">(job.sector_id == 6 ) * ln(building.sqm_sector6)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect5" type="variable_definition">(job.sector_id == 5 ) * ln(building.sqm_sector5)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect4" type="variable_definition">(job.sector_id == 4 ) * ln(building.sqm_sector4)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect3" type="variable_definition">(job.sector_id == 3 ) * ln(building.sqm_sector3)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_ln_surf_sect2" type="variable_definition">(job.sector_id == 2 ) * ln(building.sqm_sector2)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type1" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_1)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type2" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_2)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type3" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_3)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type4" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_4)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type5" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_5)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type6" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_6)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type7" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_7)</variable>
      <variable use="model variable" source="expression" name="zone.RH_zone_jobs_type8" type="variable_definition">building.disaggregate(urbansim_parcel.zone.number_of_jobs_of_sector_8)</variable>
      <variable use="model variable" source="expression" name="job_x_building.RH_zonal_income_trade" type="variable_definition">(job.sector_id == 3) * building.disaggregate(zone.aggregate(household.income, function=mean))</variable>
    </expression_library>
    <available_datasets type="list">['development_event_history_x_parcel', 'building_x_parcel','building','parcel','household','business','household_x_building','zone','tract','district14','district24','alldata','pdist','buildings_for_estimation', 'development_event_history', 'job_x_building']</available_datasets>
  </general>
  <data_manager>
    <tool_library setexpanded="True">
      <tool_group name="opus_data_import_export_tools" setexpanded="True">
        <tool name="sql_data_to_opus_tool">
          <params>
            <param name="database_name" param_type="string" required="True">cz_by_test</param>
            <param name="table_name" param_type="string" required="True">development_event_history_PLCM</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">data/zurich_kt_parcel/base_year_data</param>
          </params>
        </tool>
        <tool name="opus_data_to_sql_tool">
          <params>
            <param name="database_name" param_type="string" required="True">cz_us_run2</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_mini_parcel/runs/run_103.run_2012_06_20_13_19</param>
            <param name="opus_data_year" param_type="string" required="True">ALL</param>
            <param name="opus_table_name" param_type="string" required="True">ALL</param>
          </params>
        </tool>
        <tool name="opus_data_to_csv_tool">
          <params>
            <param name="csv_data_path" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_li_parcel/cz_exports</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">/home/zoelligc/eclipse-urbansim/data/zurich_li_parcel/base_year_data</param>
            <param name="opus_data_year" param_type="string" required="True">2000</param>
            <param name="opus_table_name" param_type="string" required="True">target_vacancies</param>
          </params>
        </tool>
        <tool name="csv_data_to_opus_tool">
          <params>
            <param name="csv_data_path" param_type="dir_path" required="True">/Network/Servers/kosrae.ethz.ch/Volumes/ivt-home/zoelligc/sustaincity/opushome/data/zurich_kt_parcel</param>
            <param name="csv_table_name" param_type="string" required="True">SC_household_location_choice_model_coefficients</param>
            <param name="opus_data_directory" param_type="dir_path" required="True">/Network/Servers/kosrae.ethz.ch/Volumes/ivt-home/zoelligc/sustaincity/opushome/data/zurich_kt_parcel/base_year_data</param>
          </params>
        </tool>
      </tool_group>
    </tool_library>
  </data_manager>
  <model_manager>
    <travel_model_configuration type="dictionary">
      <models type="selectable_list">
        <selectable name="opus_matsim.zurich.models.get_cache_data_into_matsim_parcel" type="selectable">True</selectable>
        <selectable name="opus_matsim.zurich.models.run_travel_model_parcel" type="selectable">True</selectable>
        <selectable name="opus_matsim.zurich.models.get_matsim_data_into_cache" type="selectable">True</selectable>
      </models>
      <matsim4urbansim type="dictionary">
        <population_sampling_rate type="float">0.1</population_sampling_rate>
        <matsim_controler type="selectable_list">
          <selectable name="zone2zone_impedance" type="selectable">True</selectable>
          <selectable name="agent_performance" type="selectable">True</selectable>
          <selectable name="zone_based_accessibility" type="selectable">True</selectable>
          <selectable name="cell_based_accessibility" type="selectable">True</selectable>
        </matsim_controler>
        <controler_parameter type="dictionary">
          <cell_size type="integer">100</cell_size>
          <shape_file type="file">data/zurich_parcel/shapefiles/zurich_mun.shp</shape_file>
          <bounding_box type="selectable_list">
            <selectable name="use_bounding_box" type="selectable">False</selectable>
          </bounding_box>
          <bounding_box_top type="float">0.</bounding_box_top>
          <bounding_box_left type="float">0.</bounding_box_left>
          <bounding_box_right type="float">0.</bounding_box_right>
          <bounding_box_bottom type="float">0.</bounding_box_bottom>
        </controler_parameter>
        <accessibility_parameter type="dictionary">
          <accessibility_destination_sampling_rate type="float">1.</accessibility_destination_sampling_rate>
          <use_MATSim_parameter type="selectable_list">
            <selectable name="use_logit_scale_parameter_from_MATSim" type="selectable">True</selectable>
            <selectable name="use_car_parameter_from_MATSim" type="selectable">True</selectable>
            <selectable name="use_walk_parameter_from_MATSim" type="selectable">True</selectable>
            <selectable name="use_raw_sums_without_ln" type="selectable">False</selectable>
          </use_MATSim_parameter>
          <logit_scale_parameter type="float">0.</logit_scale_parameter>
          <car_parameter type="dictionary">
            <betacar_travel_time type="float">0.</betacar_travel_time>
            <betacar_travel_time_power2 type="float">0.</betacar_travel_time_power2>
            <betacar_ln_travel_time type="float">0.</betacar_ln_travel_time>
            <betacar_travel_distance type="float">0.</betacar_travel_distance>
            <betacar_travel_distance_power2 type="float">0.</betacar_travel_distance_power2>
            <betacar_ln_travel_distance type="float">0.</betacar_ln_travel_distance>
            <betacar_travel_cost type="float">0.</betacar_travel_cost>
            <betacar_travel_cost_power2 type="float">0.</betacar_travel_cost_power2>
            <betacar_ln_travel_cost type="float">0.</betacar_ln_travel_cost>
          </car_parameter>
          <walk_parameter type="dictionary">
            <betawalk_travel_time type="float">0.</betawalk_travel_time>
            <betawalk_travel_time_power2 type="float">0.</betawalk_travel_time_power2>
            <betawalk_ln_travel_time type="float">0.</betawalk_ln_travel_time>
            <betawalk_travel_distance type="float">0.</betawalk_travel_distance>
            <betawalk_travel_distance_power2 type="float">0.</betawalk_travel_distance_power2>
            <betawalk_ln_travel_distance type="float">0.</betawalk_ln_travel_distance>
            <betawalk_travel_cost type="float">0.</betawalk_travel_cost>
            <betawalk_travel_cost_power2 type="float">0.</betawalk_travel_cost_power2>
            <betawalk_ln_travel_cost type="float">0.</betawalk_ln_travel_cost>
          </walk_parameter>
        </accessibility_parameter>
        <random_location_distribution_radius_for_urbansim_zone type="float">0.</random_location_distribution_radius_for_urbansim_zone>
      </matsim4urbansim>
      <matsim_config type="dictionary">
        <common type="dictionary">
          <external_matsim_config type="dictionary">
          </external_matsim_config>
          <matsim_network_file type="file">/data/zurich_kt_parcel/base_year_data/2000/matsim/network/network.multimodal-wu.xml.gz</matsim_network_file>
          <last_iteration type="integer">100</last_iteration>
          <input_plans_file type="file"/>
          <hotstart_plans_file type="file"/>
          <test_parameter type="string"/>
          <backup type="selectable_list">
            <selectable name="backup_run_data" type="selectable">False</selectable>
          </backup>
        </common>
        <plan_calc_score type="dictionary">
          <home_activity_typical_duration type="integer">43200</home_activity_typical_duration>
          <work_activity_typical_duration type="integer">28800</work_activity_typical_duration>
          <work_activity_opening_time type="integer">25200</work_activity_opening_time>
          <work_activity_latest_start_time type="integer">32400</work_activity_latest_start_time>
        </plan_calc_score>
        <strategy type="dictionary">
          <max_agent_plan_memory_size type="integer">5</max_agent_plan_memory_size>
          <time_accocation_mutator_probability type="float">0.1</time_accocation_mutator_probability>
          <change_exp_beta_probability type="float">0.9</change_exp_beta_probability>
          <reroute_dijkstra_probability type="float">0.1</reroute_dijkstra_probability>
        </strategy>
      </matsim_config>
      <years_to_run key_name="year" type="category_with_special_keys">
        <run_description type="dictionary">
          <year type="integer">2001</year>
        </run_description>
        <run_description type="dictionary">
          <year type="integer">2010</year>
        </run_description>
      </years_to_run>
    </travel_model_configuration>
  </model_manager>
  <scenario_manager>
    <scenario name="test_run" type="scenario" executable="True">
      <advanced type="category">
        <datasets_to_preload parser_action="list_to_dictionary" type="selectable_list">
          <selectable name="zone" type="selectable">True</selectable>
          <selectable name="travel_data" type="selectable">False</selectable>
        </datasets_to_preload>
        <run_in_same_process type="boolean">True</run_in_same_process>
      </advanced>
      <models_to_run config_name="models" type="selectable_list">
        <selectable return_value="SC_real_estate_price_model_new" type="selectable" name="SC_real_estate_price_model_new_1">True</selectable>
        <selectable return_value="SC_building_transition_model" type="selectable" name="SC_building_transition_model_1">True</selectable>
        <selectable return_value="SC_RBLCM_from_template" type="selectable" name="SC_RBLCM_from_template_1">True</selectable>
        <selectable return_value="SC_NRBLCM_from_template" type="selectable" name="SC_NRBLCM_from_template_1">True</selectable>
        <selectable return_value="SC_building_location_choice_model_from_template" type="selectable" name="SC_building_location_choice_model_from_template_1">False</selectable>
        <selectable return_value="SC_workplace_location_choice" type="selectable" name="SC_workplace_location_choice_1">True</selectable>
        <selectable return_value="SC_household_transition_model" type="selectable" name="SC_household_transition_model_1">True</selectable>
        <selectable return_value="SC_household_relocation_model" type="selectable" name="SC_household_relocation_model_1">True</selectable>
        <selectable return_value="SC_household_location_choice_model" type="selectable" name="SC_household_location_choice_model_1">True</selectable>
        <selectable return_value="SC_employment_transition_model" type="selectable" name="new_employment_transition_model_1">True</selectable>
        <selectable return_value="employment_transition_model" type="selectable" name="employment_transition_model_1">False</selectable>
        <selectable return_value="employment_relocation_model" type="selectable" name="employment_relocation_model">True</selectable>
        <selectable name="employment_location_choice_model" type="selectable">True<group_members type="string">non_home_based</group_members>
        </selectable>
      </models_to_run>
    </scenario>
  </scenario_manager>
  <results_manager>
    </results_manager>
</opus_project>

