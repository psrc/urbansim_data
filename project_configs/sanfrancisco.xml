<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the San Francisco parcel project</description>
    <parent type="file">sanfrancisco/configs/sanfrancisco.xml</parent>
    <expression_library type="dictionary">
      <variable use="model variable" source="expression" name="building.ln_emp_30_min_bus" type="variable_definition">ln(building.disaggregate(sanfrancisco.zone.employment_within_30_minutes_bus_travel_time,intermediates=[parcel]))</variable>
      <variable use="both" source="expression" name="building.ln_total_price" type="variable_definition">ln_bounded(building.structure_value+building.disaggregate(parcel.land_value))</variable>
      <variable use="model variable" source="Python class" name="building.ln_emp_activity_6_win_10_min_hwy" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.employment_of_activity_id_6_within_10_minutes_hwy_travel_time,intermediates=[parcel]))</variable>
      <variable use="model variable" source="Python class" name="building.ln_emp_activity_5_win_10_min_hwy" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.employment_of_activity_id_5_within_10_minutes_hwy_travel_time,intermediates=[parcel]))</variable>
      <variable use="model variable" source="Python class" name="building.ln_emp_activity_4_win_10_min_hwy" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.employment_of_activity_id_4_within_10_minutes_hwy_travel_time,intermediates=[parcel]))</variable>
      <variable use="model variable" source="Python class" name="building.ln_emp_activity_3_win_10_min_hwy" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.employment_of_activity_id_3_within_10_minutes_hwy_travel_time,intermediates=[parcel]))</variable>
      <variable use="model variable" source="Python class" name="building.ln_emp_activity_2_win_10_min_hwy" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.employment_of_activity_id_2_within_10_minutes_hwy_travel_time,intermediates=[parcel]))</variable>
      <variable use="model variable" source="Python class" name="building.ln_emp_activity_1_win_10_min_hwy" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.employment_of_activity_id_1_within_10_minutes_hwy_travel_time,intermediates=[parcel]))</variable>
      <variable use="both" source="expression" name="building.visitor_possible" type="variable_definition">building.disaggregate(parcel.visitor_possible)</variable>
      <variable use="both" source="expression" name="building.ret_possible" type="variable_definition">building.disaggregate(parcel.ret_possible)</variable>
      <variable use="both" source="expression" name="building.mips_possible" type="variable_definition">building.disaggregate(parcel.mips_possible)</variable>
      <variable use="both" source="expression" name="building.pdr_possible" type="variable_definition">building.disaggregate(parcel.pdr_possible)</variable>
      <variable use="both" source="expression" name="building.med_possible" type="variable_definition">building.disaggregate(parcel.med_possible)</variable>
      <variable use="both" source="expression" name="building.cie_possible" type="variable_definition">building.disaggregate(parcel.cie_possible)</variable>
      <variable use="both" source="expression" name="building.ln_total_price_per_sqft" type="variable_definition">ln_bounded(building.total_price/building.building_sqft)</variable>
      <variable use="model variable" source="expression" name="building.emp_30_hwy_10k" type="variable_definition">building.disaggregate(sanfrancisco.zone.employment_within_30_minutes_hwy_travel_time,intermediates=[parcel])/10000</variable>
      <variable use="model variable" source="expression" name="building.emp_30_bart_10k" type="variable_definition">building.disaggregate(sanfrancisco.zone.employment_within_30_minutes_bart_travel_time,intermediates=[parcel])/10000</variable>
      <variable use="both" source="expression" name="building.building_jobs_per_acre" type="variable_definition">building.aggregate(business.employment)/(building.disaggregate(parcel.area))</variable>
      <variable use="model variable" source="expression" name="building.emp_30_lrt_10k" type="variable_definition">building.disaggregate(sanfrancisco.zone.employment_within_30_minutes_lrt_travel_time,intermediates=[parcel])/10000</variable>
      <variable use="model variable" source="expression" name="building.emp_30_lrt" type="variable_definition">building.disaggregate(sanfrancisco.zone.employment_within_30_minutes_lrt_travel_time,intermediates=[parcel])</variable>
      <variable use="model variable" source="expression" name="building.avg_income_in_zone" type="variable_definition">building.disaggregate(sanfrancisco.zone.average_income, intermediates=[parcel])</variable>
      <variable use="both" source="expression" name="building.building_jobs" type="variable_definition">building.aggregate(business.employment)</variable>
      <variable use="both" source="expression" name="building.building_jobs_per_sqft" type="variable_definition">building.aggregate(business.employment)/(building.disaggregate(parcel.area))</variable>
      <variable use="both" source="expression" name="building.population_per_acre" type="variable_definition">(ln(building.disaggregate(sanfrancisco.zone.population)/building.disaggregate(zone.aggregate(parcel.area)*43560.0)))</variable>
      <variable use="both" source="expression" name="building.pre_1930" type="variable_definition">numpy.logical_and(building.year_built&lt;1930, building.year_built&gt;1800)</variable>
      <variable use="both" source="expression" name="building.residential_units_greater_than_0" type="variable_definition">building.residential_units&gt;0</variable>
      <variable use="both" source="expression" name="building.unnamed_variable" type="variable_definition">building.residential_sqft</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_18" type="variable_definition">building.building_type_id==18</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_17" type="variable_definition">building.building_type_id==17</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_16" type="variable_definition">building.building_type_id==16</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_15" type="variable_definition">building.building_type_id==15</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_14" type="variable_definition">building.building_type_id==14</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_13" type="variable_definition">building.building_type_id==13</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_12" type="variable_definition">building.building_type_id==12</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_11" type="variable_definition">building.building_type_id==11</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_10" type="variable_definition">building.building_type_id==10</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_9" type="variable_definition">building.building_type_id==9</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_8" type="variable_definition">building.building_type_id==8</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_6" type="variable_definition">building.building_type_id==6</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_5" type="variable_definition">building.building_type_id==5</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_4" type="variable_definition">building.building_type_id==4</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_3" type="variable_definition">building.building_type_id==3</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_2" type="variable_definition">building.building_type_id==2</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_1" type="variable_definition">building.building_type_id==1</variable>
      <variable use="both" source="expression" name="building.building_type_id_is_7" type="variable_definition">building.building_type_id==7</variable>
      <variable name="building.avg_unit_price" source="expression" type="variable_definition" use="both">building.disaggregate(zone.aggregate(urbansim_parcel.building.unit_price,function=mean,intermediates=[parcel]))</variable>
      <variable name="building.is_commercial_building" source="expression" type="variable_definition" use="model variable">building.building_type_id==3</variable>
      <variable name="building.is_office_building" source="expression" type="variable_definition" use="model variable">building.building_type_id==10</variable>
      <variable use="model variable" source="expression" name="building.ln_hholds_per_acre_in_zone" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.number_of_households,intermediates=[parcel])/(building.disaggregate(sanfrancisco.parcel.area)/43560))</variable>
      <variable use="model variable" source="expression" name="building.ln_jobs_per_acre_in_zone" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.employment,intermediates=[parcel])/(building.disaggregate(sanfrancisco.parcel.area)/43560))</variable>
      <variable use="model variable" source="expression" name="building.age" type="variable_definition">urbansim_parcel.building.age_masked</variable>
      <variable use="model variable" source="expression" name="building.bfar" type="variable_definition">safe_array_divide(building.building_sqft, building.disaggregate(parcel.area))</variable>
      <variable use="model variable" source="expression" name="building.ln_sqft_unit" type="variable_definition">ln_bounded(safe_array_divide(building.building_sqft, building.residential_units))</variable>
      <variable use="model variable" source="expression" name="building.ln_lot_area_unit" type="variable_definition">ln_bounded(safe_array_divide(building.disaggregate(parcel.area), building.residential_units))</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_income_in_zone" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.average_income, intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="building.ln_emp_20_min_hwy" type="variable_definition">ln(building.disaggregate(sanfrancisco.zone.employment_within_20_minutes_hwy_travel_time,intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="building.ln_emp_30_lrt" type="variable_definition">ln(building.disaggregate(sanfrancisco.zone.employment_within_30_minutes_lrt_travel_time,intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="building.ln_sqft" type="variable_definition">ln_bounded(building.building_sqft)</variable>
      <variable use="model variable" source="expression" name="building.ln_lot_area" type="variable_definition">ln_bounded(building.disaggregate(parcel.area))</variable>
      <variable use="model variable" source="expression" name="building.ln_sector_3_employment_in_zone" type="variable_definition">ln_bounded(building.disaggregate(sanfrancisco.zone.aggregate_employment_of_sector_3_from_building,intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="building.emp_20_min_bus" type="variable_definition">building.disaggregate(sanfrancisco.zone.employment_within_20_minutes_bus_travel_time,intermediates=[parcel])</variable>
      <variable use="model variable" source="expression" name="building.sector_3_employment_in_zone" type="variable_definition">building.disaggregate(sanfrancisco.zone.aggregate_employment_of_sector_3_from_building,intermediates=[parcel])</variable>
      <variable use="model variable" source="expression" name="building.ln_capacity" type="variable_definition">building.disaggregate(zone.aggregate(parcel.building_sqft_capacity))</variable>
      <variable use="model variable" source="expression" name="building.single_family" type="variable_definition">(building.building_type_id == 14)</variable>
      <variable use="model variable" source="expression" name="building.ln_avg_building_sf_per_unit" type="variable_definition">ln_bounded(safe_array_divide(sanfrancisco.building.building_sqft,building.residential_units))</variable>
      <variable use="model variable" source="expression" name="building.ln_unit_price" type="variable_definition">ln(building.unit_price)</variable>
      <variable use="model variable" source="expression" name="building.lrt_weighted_access_to_population" type="variable_definition">building.disaggregate(sanfrancisco.zone.lrt_travel_time_weighted_access_by_population,intermediates=[parcel])</variable>
      <variable use="model variable" source="expression" name="building.ln_sector_1_employment_in_zone" type="variable_definition">ln(building.disaggregate(sanfrancisco.zone.aggregate_employment_of_sector_1_from_building,intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="building.ln_sector_2_employment_in_zone" type="variable_definition">ln(building.disaggregate(sanfrancisco.zone.aggregate_employment_of_sector_2_from_building,intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="building.ln_sector_3_employment_in_zone" type="variable_definition">ln(building.disaggregate(sanfrancisco.zone.aggregate_employment_of_sector_3_from_building,intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="building.ln_sector_4_employment_in_zone" type="variable_definition">ln(building.disaggregate(sanfrancisco.zone.aggregate_employment_of_sector_4_from_building,intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="building.ln_sector_5_employment_in_zone" type="variable_definition">ln(building.disaggregate(sanfrancisco.zone.aggregate_employment_of_sector_5_from_building,intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="building.ln_sector_6_employment_in_zone" type="variable_definition">ln(building.disaggregate(sanfrancisco.zone.aggregate_employment_of_sector_6_from_building,intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="household_x_building.ln_inc_avg_inc" type="variable_definition">ln(household.income * building.disaggregate(sanfrancisco.zone.average_income, intermediates=[parcel]))</variable>
      <variable use="model variable" source="expression" name="household_x_building.ln_inc_minus_cost" type="variable_definition">ln_bounded((household.income*1000) - (building.unit_price/10))</variable>
      <variable use="indicator" source="Python class" name="zone.employment" type="variable_definition">sanfrancisco.zone.employment</variable>
      <variable use="indicator" source="expression" name="zone.or_apartment" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_apartment),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='apartment',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_automotive" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_automotive),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='automotive',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_commercial" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_commercial),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='commercial',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_condo" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_condo),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='condo',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_flat" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_flat),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='flat',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_hotel" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_hotel),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='hotel',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_industrial" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_industrial),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='industrial',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_institutional" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_institutional),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='institutional',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_mixed" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_mixed),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='mixed',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_office" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_office),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='office',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_other" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_other),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='other',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_public" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_public),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='public',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_resother" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_resother),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='resother',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.or_single" type="variable_definition">safe_array_divide(zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_single),zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='single',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_apartment" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='apartment',building.building_sqft,0))   - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_apartment)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_automotive" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='automotive',building.building_sqft,0)) - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_automotive)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_commercial" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='commercial',building.building_sqft,0)) - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_commercial)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_condo" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='condo',building.building_sqft,0))           - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_condo)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_flat" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='flat',building.building_sqft,0))             - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_flat)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_hotel" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='hotel',building.building_sqft,0))           - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_hotel)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_industrial" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='industrial',building.building_sqft,0)) - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_industrial)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_institutional" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='institutional',building.building_sqft,0)) - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_institutional)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_mixed" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='mixed',building.building_sqft,0))           - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_mixed)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_office" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='office',building.building_sqft,0))         - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_office)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_other" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='other',building.building_sqft,0))           - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_other)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_public" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='public',building.building_sqft,0))         - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_public)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_resother" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='resother',building.building_sqft,0))     - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_resother)</variable>
      <variable use="indicator" source="expression" name="zone.vacsqft_single" type="variable_definition">zone.aggregate(where(sanfrancisco.building.building_typeclass_name=='single',building.building_sqft,0))         - zone.aggregate(sanfrancisco.building.occupied_sqft_of_typeclass_single)</variable>
      <variable use="indicator" source="expression" name="alldata.business_occupied_sqft" type="variable_definition">alldata.aggregate_all(where(business.building_id&gt;0,business.sqft,0))</variable>
      <variable use="indicator" source="expression" name="alldata.building_nonres_sqft" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.non_residential_sqft)</variable>
      <variable use="indicator" source="expression" name="alldata.total_households" type="variable_definition">alldata.aggregate_all(where(household.building_id&gt;0,1,0))</variable>
      <variable use="indicator" source="expression" name="alldata.building_res_units" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.residential_units)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_apartment" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_apartment)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_automotive" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_automotive)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_commercial" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_commercial)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_condo" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_condo)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_flat" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_flat)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_hotel" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_hotel)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_industrial" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_industrial)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_institutional" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_institutional)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_mixed" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_mixed)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_office" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_office)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_other" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_other)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_public" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_public)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_resother" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_resother)</variable>
      <variable use="indicator" source="expression" name="alldata.allocc_single" type="variable_definition">alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_single)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_apartment" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_apartment),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='apartment',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_automotive" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_automotive),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='automotive',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_commercial" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_commercial),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='commercial',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_condo" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_condo),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='condo',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_flat" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_flat),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='flat',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_hotel" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_hotel),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='hotel',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_industrial" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_industrial),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='industrial',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_institutional" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_institutional),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='institutional',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_mixed" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_mixed),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='mixed',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_office" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_office),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='office',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_other" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_other),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='other',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_public" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_public),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='public',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_resother" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_resother),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='resother',building.building_sqft,0)),0)</variable>
      <variable use="indicator" source="expression" name="alldata.allor_single" type="variable_definition">safe_array_divide(alldata.aggregate_all(sanfrancisco.building.occupied_sqft_of_typeclass_single),alldata.aggregate_all(where(sanfrancisco.building.building_typeclass_name=='single',building.building_sqft,0)),0)</variable>
    </expression_library>
    <available_datasets type="list">['building','parcel','household','business','household_x_building','zone','tract','district14','district24','alldata']</available_datasets>
    <spatial_datasets type="list">['parcel','zone','tract','district24','district14','city','county']</spatial_datasets>
    <dataset_pool_configuration type="class" hidden="True">
      <class_name type="string">DatasetPoolConfiguration</class_name>
      <class_module type="string">opus_core.configurations.dataset_pool_configuration</class_module>
      <argument name="package_order" type="list">['sanfrancisco','urbansim_parcel','urbansim','opus_core']</argument>
    </dataset_pool_configuration>
  </general>
  <model_manager>
    <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
      <model name="rent_regression_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.regression_model</class_module>
            <class_name type="string">RegressionModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">RegressionModel</name>
            <argument name="regression_procedure" parser_action="quote_string" type="string">opus_core.linear_regression</argument>
            <argument convert_blank_to_none="True" name="submodel_string" type="string"/>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument convert_blank_to_none="True" name="estimate_config" type="string"/>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="dataset" type="string">building</argument>
            <argument convert_blank_to_none="True" hidden="True" name="index" type="string">rm_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <argument convert_blank_to_none="True" name="dataset" type="string"/>
            <argument convert_blank_to_none="True" name="dataset_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">rent_regression_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">rent_regression_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
            <output name="output" type="string">(specification, coefficients, rm_index)</output>
          </prepare_for_run>
          <estimate type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="dataset" type="string">building</argument>
            <argument config_name="outcome_attribute" name="dependent_variable" parser_action="quote_string" type="string">building.rent</argument>
            <argument convert_blank_to_none="True" name="index" type="string">rm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.estimate_linear_regression</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <output name="output" type="string">(coefficients, dummy)</output>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <argument convert_blank_to_none="True" name="dataset" type="string">building</argument>
            <argument convert_blank_to_none="True" name="dataset_filter" parser_action="quote_string" type="string">numpy.logical_and(building.rent&gt;0, building.building_sqft&gt;0)</argument>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">regression_model_template_specification</argument>
            <output name="output" type="string">(specification, rm_index)</output>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="Commercial" submodel_id="-2" type="submodel">
            <description type="string">A sample submodel. In order to estimate the model, please add at least one variable.</description>
            <variable_list type="variable_list">
              <variable_spec name="building.avg_income_in_zone"/>
              <variable_spec name="building.building_jobs"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.emp_30_lrt_10k"/>
              <variable_spec name="building.is_commercial_building"/>
              <variable_spec name="building.is_office_building"/>
            </variable_list>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="demolition_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module type="string">opus_core.choice_model</class_module>
            <class_name type="string">ChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name name="name" type="string">ChoiceModel</name>
            <argument name="choice_set" type="string">[1,2]</argument>
            <argument name="utilities" parser_action="quote_string" type="string">opus_core.linear_utilities</argument>
            <argument name="probabilities" parser_action="quote_string" type="string">opus_core.mnl_probabilities</argument>
            <argument name="choices" parser_action="quote_string" type="string">opus_core.random_choices</argument>
            <argument convert_blank_to_none="True" field_description="test description" name="submodel_string" type="string"/>
            <argument name="choice_attribute_name" parser_action="quote_string" type="string">building.demo+1</argument>
            <argument name="interaction_pkg" parser_action="quote_string" type="string">opus_core</argument>
            <argument convert_blank_to_none="True" name="run_config" type="string"/>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation_size_agents" type="float">1.0</key>
            </argument>
            <argument name="debuglevel" type="integer">0</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
          </init>
          <run type="dictionary">
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument convert_blank_to_none="True" name="chunk_specification" type="string"/>
            <argument name="data_objects" type="string">datasets</argument>
          </run>
          <prepare_for_run type="dictionary">
            <name name="name" type="string">prepare_for_run</name>
            <output name="output" type="string">(specification, coefficients, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string">building</argument>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">demolition_model_specification</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">demolition_model_coefficients</argument>
            <argument name="cache_storage" type="string">base_cache_storage</argument>
            <argument name="sample_coefficients" type="boolean">False</argument>
            <argument name="distribution" parser_action="quote_string" type="string">normal</argument>
            <argument name="multiplicator" type="integer">1</argument>
          </prepare_for_run>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">building</argument>
            <argument name="agents_index" type="string">cm_index</argument>
            <argument name="procedure" parser_action="quote_string" type="string">opus_core.bhhh_mnl_estimation</argument>
            <argument name="data_objects" type="string">datasets</argument>
          </estimate>
          <prepare_for_estimate type="dictionary">
            <name name="name" type="string">prepare_for_estimate</name>
            <output name="output" type="string">(specification, cm_index)</output>
            <argument convert_blank_to_none="True" name="agent_set" type="string"/>
            <argument convert_blank_to_none="True" name="agent_filter" parser_action="quote_string" type="string"/>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">choice_model_template_specification</argument>
          </prepare_for_estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="submodel" submodel_id="-2" type="submodel">
            <equation equation_id="2" name="Demo" type="submodel_equation">
              <variable_list type="variable_list">
                <variable_spec name="building.age"/>
                <variable_spec name="constant"/>
                <variable_spec name="building.ln_residential_units"/>
                <variable_spec name="building.ln_unit_price"/>
              </variable_list>
            </equation>
          </submodel>
        </specification>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
      </model>
      <model name="real_estate_price_model" type="model">
        <structure type="dictionary">
          <init type="dictionary">
            <argument config_name="outcome_attribute" name="dependent_variable" parser_action="quote_string" type="string">ln_total_price=ln_bounded(building.structure_value+building.disaggregate(parcel.land_value))</argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <argument name="filter_variable" parser_action="quote_string" type="string">ln_bounded(building.structure_value+building.disaggregate(parcel.land_value))&gt;0</argument>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <argument config_name="outcome_attribute" name="dependent_variable" parser_action="quote_string" type="string">ln_total_price=ln_bounded(building.structure_value+building.disaggregate(parcel.land_value))</argument>
          </estimate>
        </structure>
        <specification type="dictionary">
          <submodel hidden="Children" name="res_other" submodel_id="13" type="submodel">
            <description type="string">res_other</description>
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="building.bfar"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_capacity"/>
              <variable_spec name="building.ln_emp_30_min_bus"/>
              <variable_spec name="building.ln_lot_area_unit"/>
              <variable_spec name="building.ln_sqft_unit"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="apartment" submodel_id="1" type="submodel">
            <description type="string">Apartments</description>
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="building.bfar"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_30_min_bus"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="building.pre_1930"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="condo" submodel_id="4" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="building.bfar"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_30_min_bus"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="building.pre_1930"/>
            </variable_list>
            <description>condo</description>
          </submodel>
          <submodel hidden="Children" name="flat" submodel_id="5" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="building.bfar"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_30_lrt"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="building.pre_1930"/>
            </variable_list>
            <description>Flats</description>
          </submodel>
          <submodel hidden="Children" name="Single" submodel_id="14" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_30_lrt"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_residential_units"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="building.pre_1930"/>
            </variable_list>
            <description>Single-family residential</description>
          </submodel>
          <submodel hidden="Children" name="institutional" submodel_id="8" type="submodel">
            <description type="string">institutional</description>
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_capacity"/>
              <variable_spec name="building.ln_emp_30_min_bus"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="office" submodel_id="10" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_capacity"/>
              <variable_spec name="building.ln_emp_30_lrt"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
            </variable_list>
            <description>office</description>
          </submodel>
          <submodel hidden="Children" name="mixed" submodel_id="9" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_capacity"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
            </variable_list>
            <description>mixed</description>
          </submodel>
          <submodel hidden="Children" name="other" submodel_id="11" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_capacity"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
            </variable_list>
            <description>other</description>
          </submodel>
          <submodel hidden="Children" name="industrial" submodel_id="7" type="submodel">
            <description type="string">industrial</description>
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_capacity"/>
              <variable_spec name="building.ln_emp_30_lrt"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
            </variable_list>
          </submodel>
          <submodel hidden="Children" name="automotive" submodel_id="2" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_capacity"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
            </variable_list>
            <description>automotive</description>
          </submodel>
          <submodel hidden="Children" name="commercial" submodel_id="3" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_capacity"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
            </variable_list>
            <description>commercial</description>
          </submodel>
          <submodel hidden="Children" name="hotel" submodel_id="6" type="submodel">
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="constant"/>
              <variable_spec name="building.ln_capacity"/>
              <variable_spec name="building.ln_lot_area"/>
              <variable_spec name="building.ln_sqft"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
            </variable_list>
            <description>hotel</description>
          </submodel>
        </specification>
      </model>
      <model name="household_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <specification type="dictionary">
          <submodel name="submodel" submodel_id="1" type="submodel" hidden="Children">
            <description type="string">submodel1</description>
            <variable_list type="variable_list">
              <variable_spec name="building.single_family"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="household_x_building.ln_inc_minus_cost"/>
              <variable_spec name="building.ln_avg_building_sf_per_unit"/>
              <variable_spec name="building.ln_emp_30_lrt"/>
              <variable_spec name="household_x_building.ln_inc_avg_inc"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
            </variable_list>
          </submodel>
          <submodel name="submodel" submodel_id="2" type="submodel" hidden="Children">
            <description type="string">submodel2</description>
            <variable_list type="variable_list">
              <variable_spec name="building.single_family"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="household_x_building.ln_inc_minus_cost"/>
              <variable_spec name="building.ln_avg_building_sf_per_unit"/>
              <variable_spec name="building.ln_emp_30_lrt"/>
              <variable_spec name="household_x_building.ln_inc_avg_inc"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
            </variable_list>
          </submodel>
          <submodel name="submodel" submodel_id="3" type="submodel" hidden="Children">
            <description type="string">submodel3</description>
            <variable_list type="variable_list">
              <variable_spec name="building.single_family"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="household_x_building.ln_inc_minus_cost"/>
              <variable_spec name="building.ln_avg_building_sf_per_unit"/>
              <variable_spec name="household_x_building.ln_inc_avg_inc"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="business_location_choice_model" type="model">
        <structure type="dictionary">
          <init type="dictionary">
            <name hidden="True" name="name" type="string">BusinessLocationChoiceModel</name>
            <argument name="location_set" type="string">building</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Business Location Choice Model</argument>
            <argument name="short_name" parser_action="quote_string" type="string">BLCM</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string">business.activity_id</argument>
            <argument name="sampler" convert_blank_to_none="True" parser_action="quote_string" type="string">opus_core.samplers.weighted_sampler</argument>
            <argument name="choices" parser_action="quote_string" type="string">urbansim.lottery_choices</argument>
            <argument name="filter" convert_blank_to_none="True" type="string"/>
            <argument name="run_config" type="dictionary">
              <key name="sample_size_locations" type="integer">50</key>
              <key name="compute_capacity_flag" type="string">True</key>
              <key name="capacity_string" type="string">building.non_residential_sqft</key>
              <key name="number_of_agents_string" parser_action="quote_string" type="string">business.sqft</key>
              <key name="number_of_units_string" parser_action="quote_string" type="string">sanfrancisco.building.vacant_non_residential_sqft</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key name="estimation" type="string">opus_core.bhhh_mnl_estimation</key>
              <key name="sample_size_locations" type="integer">50</key>
            </argument>
          </init>
          <prepare_for_estimate type="dictionary">
            <name hidden="True" name="name" type="string">prepare_for_estimate</name>
            <output hidden="True" name="output" type="string">(specification, index)</output>
            <argument name="agent_set" type="string">business</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_storage" type="string">base_cache_storage</argument>
            <argument convert_blank_to_none="True" name="agents_for_estimation_table" parser_action="quote_string" type="string">business</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="index_to_unplace" type="string">None</argument>
            <argument name="portion_to_unplace" type="string">.1</argument>
            <argument name="join_datasets" type="boolean">False</argument>
            <argument convert_blank_to_none="True" name="filter" parser_action="quote_string" type="string"/>
          </prepare_for_estimate>
        </structure>
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">['real_estate_price_model']</config_override>
        </estimation_config>
        <specification type="dictionary">
          <submodel name="CIE" submodel_id="1" type="submodel" hidden="Children">
            <description type="string">submodel1</description>
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="building.bfar"/>
              <variable_spec name="building.building_type_id_is_1"/>
              <variable_spec name="building.building_type_id_is_10"/>
              <variable_spec name="building.building_type_id_is_14"/>
              <variable_spec name="building.building_type_id_is_3"/>
              <variable_spec name="building.building_type_id_is_4"/>
              <variable_spec name="building.building_type_id_is_5"/>
              <variable_spec name="building.building_type_id_is_7"/>
              <variable_spec name="building.building_type_id_is_8"/>
              <variable_spec name="building.cie_possible"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_activity_1_win_10_min_hwy"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="building.lrt_weighted_access_to_population"/>
            </variable_list>
          </submodel>
          <submodel name="MED" submodel_id="2" type="submodel" hidden="Children">
            <description type="string">submodel2</description>
            <variable_list type="variable_list">
              <variable_spec name="building.bfar"/>
              <variable_spec name="building.building_type_id_is_10"/>
              <variable_spec name="building.building_type_id_is_13"/>
              <variable_spec name="building.building_type_id_is_14"/>
              <variable_spec name="building.building_type_id_is_3"/>
              <variable_spec name="building.building_type_id_is_5"/>
              <variable_spec name="building.building_type_id_is_6"/>
              <variable_spec name="building.building_type_id_is_7"/>
              <variable_spec name="building.building_type_id_is_8"/>
              <variable_spec name="building.building_type_id_is_9"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_activity_2_win_10_min_hwy"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.lrt_weighted_access_to_population"/>
              <variable_spec name="building.med_possible"/>
            </variable_list>
          </submodel>
          <submodel name="MIPS" submodel_id="3" type="submodel" hidden="Children">
            <description type="string">submodel3</description>
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="building.bfar"/>
              <variable_spec name="building.building_type_id_is_1"/>
              <variable_spec name="building.building_type_id_is_10"/>
              <variable_spec name="building.building_type_id_is_12"/>
              <variable_spec name="building.building_type_id_is_13"/>
              <variable_spec name="building.building_type_id_is_14"/>
              <variable_spec name="building.building_type_id_is_3"/>
              <variable_spec name="building.building_type_id_is_4"/>
              <variable_spec name="building.building_type_id_is_5"/>
              <variable_spec name="building.building_type_id_is_6"/>
              <variable_spec name="building.building_type_id_is_8"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_activity_3_win_10_min_hwy"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.lrt_weighted_access_to_population"/>
              <variable_spec name="building.mips_possible"/>
            </variable_list>
          </submodel>
          <submodel name="PDR" submodel_id="4" type="submodel" hidden="Children">
            <description type="string">submodel4</description>
            <variable_list type="variable_list">
              <variable_spec name="building.bfar"/>
              <variable_spec name="building.building_type_id_is_1"/>
              <variable_spec name="building.building_type_id_is_13"/>
              <variable_spec name="building.building_type_id_is_14"/>
              <variable_spec name="building.building_type_id_is_2"/>
              <variable_spec name="building.building_type_id_is_3"/>
              <variable_spec name="building.building_type_id_is_4"/>
              <variable_spec name="building.building_type_id_is_5"/>
              <variable_spec name="building.building_type_id_is_6"/>
              <variable_spec name="building.building_type_id_is_7"/>
              <variable_spec name="building.building_type_id_is_8"/>
              <variable_spec name="building.building_type_id_is_9"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_activity_4_win_10_min_hwy"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.lrt_weighted_access_to_population"/>
              <variable_spec name="building.pdr_possible"/>
            </variable_list>
          </submodel>
          <submodel name="RETAIL/ENT" submodel_id="5" type="submodel" hidden="Children">
            <description type="string">submodel5</description>
            <variable_list type="variable_list">
              <variable_spec name="building.age"/>
              <variable_spec name="building.bfar"/>
              <variable_spec name="building.building_type_id_is_1"/>
              <variable_spec name="building.building_type_id_is_10"/>
              <variable_spec name="building.building_type_id_is_13"/>
              <variable_spec name="building.building_type_id_is_14"/>
              <variable_spec name="building.building_type_id_is_2"/>
              <variable_spec name="building.building_type_id_is_3"/>
              <variable_spec name="building.building_type_id_is_4"/>
              <variable_spec name="building.building_type_id_is_6"/>
              <variable_spec name="building.building_type_id_is_7"/>
              <variable_spec name="building.building_type_id_is_8"/>
              <variable_spec name="building.building_type_id_is_9"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_activity_5_win_10_min_hwy"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.lrt_weighted_access_to_population"/>
              <variable_spec name="building.ret_possible"/>
            </variable_list>
          </submodel>
          <submodel name="VISITOR" submodel_id="6" type="submodel" hidden="Children">
            <description type="string">submodel6</description>
            <variable_list type="variable_list">
              <variable_spec name="building.bfar"/>
              <variable_spec name="building.building_type_id_is_14"/>
              <variable_spec name="building.building_type_id_is_6"/>
              <variable_spec name="building.ln_avg_income_in_zone"/>
              <variable_spec name="building.ln_emp_activity_6_win_10_min_hwy"/>
              <variable_spec name="building.ln_hholds_per_acre_in_zone"/>
              <variable_spec name="building.ln_jobs_per_acre_in_zone"/>
              <variable_spec name="building.lrt_weighted_access_to_population"/>
              <variable_spec name="building.visitor_possible"/>
            </variable_list>
          </submodel>
        </specification>
      </model>
      <model name="building_transition_model" type="model">
        <structure type="dictionary">
          <import hidden="False" name="import" type="dictionary">
            <class_module type="string">sanfrancisco.models.building_transition_model</class_module>
            <class_name>BuildingTransitionModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="False" name="name" type="string">BuildingTransitionModel</name>
            <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
          </init>
          <run type="dictionary">
            <output hidden="False" name="output" type="string">new_building_index</output>
            <argument name="building_set" type="string">building</argument>
            <argument name="new_building_copy_attrs" type="list">["building_sqft","building_use","building_use_id","cie","land_value","med","mips","non_residential_sqft","pdr","residential_sqft","residential_units","restype","retail","stories","structure_value","total_uses","unit_price","visitor"]</argument>
            <argument name="building_type_table" type="string">building_type</argument>
            <argument name="building_type_classification_table" type="string">building_type_classification</argument>
            <argument name="vacancy_table" type="string">target_vacancy</argument>
            <argument name="history_table" type="string">development_event_history</argument>
            <argument name="year" type="string">year</argument>
            <argument name="location_set" type="string">parcel</argument>
            <argument name="resources" type="string">model_resources</argument>
          </run>
        </structure>
      </model>
      <model name="building_location_choice_model" type="model">
        <estimation_config name="Estimation Configuration" parser_action="skip">
          <config_override config_name="models" name="Models to run before estimation" type="list">[]</config_override>
        </estimation_config>
        <structure type="dictionary">
          <group_by_attribute type="list">('building_use_classification', 'name')</group_by_attribute>
          <import name="import" type="dictionary">
            <class_module>sanfrancisco.models.building_location_choice_model</class_module>
            <class_name>BuildingLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <argument name="location_set" type="string">parcel</argument>
            <argument name="submodel_string" parser_action="quote_string" type="string">building.building_use_id</argument>
            <argument name="capacity_string" parser_action="quote_string" type="string">UNITS_capacity</argument>
            <argument name="filter" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
            <argument name="number_of_agents_string" convert_blank_to_none="True" parser_action="quote_string" type="string">sanfrancisco.parcel.UNITS</argument>
            <argument name="number_of_units_string" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
            <argument name="developable_maximum_unit_variable" convert_blank_to_none="True" parser_action="quote_string" type="string">UNITS_capacity</argument>
            <argument name="developable_minimum_unit_variable" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
            <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">sanfrancisco.building.building_class_id</argument>
            <argument name="dataset_pool" type="string">dataset_pool</argument>
            <argument name="estimate_config" type="dictionary">
              <key name="weights_for_simulation_string" type="string">None</key>
            </argument>
            <argument name="run_config" type="dictionary">
              <key name="agent_units_string" convert_blank_to_none="True" type="string">sanfrancisco.building.building_size</key>
            </argument>
            <name name="name" type="string">BuildingLocationChoiceModel</name>
          </init>
          <prepare_for_run type="dictionary">
            <output name="output" type="string">(specification, coefficients)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_storage" type="string">base_cache_storage</argument>
            <argument name="coefficients_table" parser_action="quote_string" type="string">building_location_choice_model_coefficients</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">building_location_choice_model_specification</argument>
            <name name="name" type="string">prepare_for_run</name>
          </prepare_for_run>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':500}</argument>
            <argument name="agent_set" type="string">building</argument>
            <argument name="specification" type="string">specification</argument>
            <argument name="coefficients" type="string">coefficients</argument>
            <argument name="agents_index" type="string">new_building_index</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </run>
          <prepare_for_estimate type="dictionary">
            <output name="output" type="string">(specification, index)</output>
            <argument name="specification_storage" type="string">base_cache_storage</argument>
            <argument name="specification_table" parser_action="quote_string" type="string">development_location_choice_model_specification</argument>
            <argument name="building_set" type="string">building</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="constants" type="string">urbansim_constant</argument>
            <argument name="base_year" type="integer">2001</argument>
            <argument convert_blank_to_none="True" name="buildings_for_estimation_table" parser_action="quote_string" type="string">development_event_history</argument>
            <argument convert_blank_to_none="True" name="buildings_for_estimation_storage" type="string">base_cache_storage</argument>
            <name name="name" type="string">prepare_for_estimate</name>
          </prepare_for_estimate>
          <estimate type="dictionary">
            <output name="output" type="string">(coefficients, dummy)</output>
            <argument name="specification" type="string">specification</argument>
            <argument name="agent_set" type="string">building</argument>
            <argument name="data_objects" type="string">datasets</argument>
            <argument name="agents_index" type="string">index</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>
          </estimate>
        </structure>
        <specification type="dictionary">
          <submodel_group name="residential" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="1" type="submodel">
              <description type="string">submodel1</description>
              <variable_list type="variable_list">
                <variable_spec name="parcel._ln_hholds_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_jobs_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_land_area"/>
                <variable_spec name="parcel._ln_price"/>
                <variable_spec name="parcel._employment_within_30_minutes_bus_travel_time"/>
                <variable_spec name="parcel._ln_avg_income_in_zone"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="submodel" submodel_id="2" type="submodel">
              <description type="string">submodel2</description>
              <variable_list type="variable_list">
                <variable_spec name="parcel._ln_hholds_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_jobs_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_land_area"/>
                <variable_spec name="parcel._ln_price"/>
                <variable_spec name="parcel._employment_within_30_minutes_bus_travel_time"/>
                <variable_spec name="parcel._ln_avg_income_in_zone"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="submodel" submodel_id="3" type="submodel">
              <description type="string">submodel3</description>
              <variable_list type="variable_list">
                <variable_spec name="parcel._ln_hholds_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_jobs_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_price"/>
                <variable_spec name="parcel._employment_within_30_minutes_bus_travel_time"/>
                <variable_spec name="parcel._ln_avg_income_in_zone"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="submodel" submodel_id="5" type="submodel">
              <description type="string">submodel5</description>
              <variable_list type="variable_list">
                <variable_spec name="parcel._ln_hholds_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_jobs_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_land_area"/>
                <variable_spec name="parcel._ln_price"/>
                <variable_spec name="parcel._ln_avg_income_in_zone"/>
              </variable_list>
            </submodel>
          </submodel_group>
          <submodel_group name="nonresidential" type="submodel_group">
            <submodel hidden="Children" name="submodel" submodel_id="7" type="submodel">
              <description type="string">submodel7</description>
              <variable_list type="variable_list">
                <variable_spec name="parcel._ln_land_area"/>
                <variable_spec name="parcel._ln_hholds_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_jobs_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_price"/>
                <variable_spec name="parcel._ln_avg_income_in_zone"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_by_population"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_to_employment"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="submodel" submodel_id="8" type="submodel">
              <description type="string">submodel8</description>
              <variable_list type="variable_list">
                <variable_spec name="parcel._ln_land_area"/>
                <variable_spec name="parcel._ln_hholds_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_jobs_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_price"/>
                <variable_spec name="parcel._ln_avg_income_in_zone"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_by_population"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_to_employment"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="submodel" submodel_id="9" type="submodel">
              <description type="string">submodel9</description>
              <variable_list type="variable_list">
                <variable_spec name="parcel._ln_land_area"/>
                <variable_spec name="parcel._ln_hholds_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_jobs_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_price"/>
                <variable_spec name="parcel._ln_avg_income_in_zone"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_by_population"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_to_employment"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="submodel" submodel_id="13" type="submodel">
              <description type="string">submodel13</description>
              <variable_list type="variable_list">
                <variable_spec name="parcel._ln_land_area"/>
                <variable_spec name="parcel._ln_hholds_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_jobs_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_price"/>
                <variable_spec name="parcel._ln_avg_income_in_zone"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_by_population"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_to_employment"/>
              </variable_list>
            </submodel>
            <submodel hidden="Children" name="submodel" submodel_id="14" type="submodel">
              <description type="string">submodel14</description>
              <variable_list type="variable_list">
                <variable_spec name="parcel._ln_land_area"/>
                <variable_spec name="parcel._ln_hholds_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_jobs_per_acre_in_zone"/>
                <variable_spec name="parcel._ln_price"/>
                <variable_spec name="parcel._ln_avg_income_in_zone"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_by_population"/>
                <variable_spec name="parcel._lrt_travel_time_weighted_access_to_employment"/>
              </variable_list>
            </submodel>
          </submodel_group>
        </specification>
      </model>
    </models>
    <estimation_config config_name="estimation_config" name="Estimation Configuration" type="configuration">
      <save_estimation_results type="boolean">True</save_estimation_results>
    </estimation_config>
    <travel_model_configuration type="dictionary">
      <urbansim_to_tm_variable_file type="string">lumodelout.csv</urbansim_to_tm_variable_file>
      <tm_variable_order type="list">['tm.SFTAZ','tm.HHPOP','tm.HHLDS','tm.EMPRES','tm.CIE','tm.MED','tm.MIPS','tm.PDR','tm.RETAIL','tm.VISITOR','tm.TOTALEMP','tm.HHINCQ1','tm.HHINCQ2','tm.HHINCQ3','tm.HHINCQ4','tm.AVGINCQ1','tm.AVGINCQ2','tm.AVGINCQ3','tm.AVGINCQ4','tm.AVGHHINC']</tm_variable_order>
      <urbansim_to_tm_variable_mapping type="dictionary">
        <variable use="model" source="expression" name="tm.SFTAZ" type="variable_definition">(zone.zone_id).astype(int16)</variable>
        <variable use="model" source="expression" name="tm.HHPOP" type="variable_definition">zone.aggregate(sanfrancisco.household.persons)</variable>
        <variable use="model" source="expression" name="tm.HHLDS" type="variable_definition">zone.aggregate(where(sanfrancisco.household.household_id,1,0))</variable>
        <variable use="model" source="expression" name="tm.EMPRES" type="variable_definition">zone.aggregate(sanfrancisco.household.nfulltime)+zone.aggregate(sanfrancisco.household.nparttime)</variable>
        <variable use="model" source="expression" name="tm.CIE" type="variable_definition">zone.aggregate(where(sanfrancisco.business.activity=='CIE',sanfrancisco.business.employment,0), intermediates=[building, parcel])</variable>
        <variable use="model" source="expression" name="tm.MED" type="variable_definition">zone.aggregate(where(sanfrancisco.business.activity=='MED',sanfrancisco.business.employment,0), intermediates=[building, parcel])</variable>
        <variable use="model" source="expression" name="tm.MIPS" type="variable_definition">zone.aggregate(where(sanfrancisco.business.activity=='MIPS',sanfrancisco.business.employment,0), intermediates=[building, parcel])</variable>
        <variable use="model" source="expression" name="tm.PDR" type="variable_definition">zone.aggregate(where(sanfrancisco.business.activity=='PDR',sanfrancisco.business.employment,0), intermediates=[building, parcel])</variable>
        <variable use="model" source="expression" name="tm.RETAIL" type="variable_definition">zone.aggregate(where(sanfrancisco.business.activity=='RETAIL/ENT',sanfrancisco.business.employment,0), intermediates=[building, parcel])</variable>
        <variable use="model" source="expression" name="tm.VISITOR" type="variable_definition">zone.aggregate(where(sanfrancisco.business.activity=='VISITOR',sanfrancisco.business.employment,0), intermediates=[building, parcel])</variable>
        <variable use="model" source="expression" name="tm.TOTALEMP" type="variable_definition">zone.aggregate(sanfrancisco.business.employment, intermediates=[building,parcel])</variable>
        <variable use="model" source="expression" name="tm.HHINCQ1" type="variable_definition">zone.aggregate(sanfrancisco.household.income &lt; 25*(177.1/124))</variable>
        <variable use="model" source="expression" name="tm.HHINCQ2" type="variable_definition">zone.aggregate((sanfrancisco.household.income &gt;=25*(177.1/124))*(sanfrancisco.household.income &lt; 45*(177.1/124)))</variable>
        <variable use="model" source="expression" name="tm.HHINCQ3" type="variable_definition">zone.aggregate((sanfrancisco.household.income &gt;=45*(177.1/124))*(sanfrancisco.household.income &lt; 75*(177.1/124)))</variable>
        <variable use="model" source="expression" name="tm.HHINCQ4" type="variable_definition">zone.aggregate(sanfrancisco.household.income &gt;=75*(177.1/124))</variable>
        <variable use="model" source="expression" name="tm.AVGINCQ1" type="variable_definition">1000*safe_array_divide(zone.aggregate((sanfrancisco.household.income &lt; 25*(177.1/124))*sanfrancisco.household.income),zone.aggregate((sanfrancisco.household.income &lt; 25*(177.1/124))))</variable>
        <variable use="model" source="expression" name="tm.AVGINCQ2" type="variable_definition">1000*safe_array_divide(zone.aggregate((sanfrancisco.household.income &gt;=25*(177.1/124))*(sanfrancisco.household.income &lt; 45*(177.1/124))*sanfrancisco.household.income),zone.aggregate((sanfrancisco.household.income &gt;=25*(177.1/124))*(sanfrancisco.household.income &lt; 45*(177.1/124))))</variable>
        <variable use="model" source="expression" name="tm.AVGINCQ3" type="variable_definition">1000*safe_array_divide(zone.aggregate((sanfrancisco.household.income &gt;=45*(177.1/124))*(sanfrancisco.household.income &lt; 75*(177.1/124))*sanfrancisco.household.income),zone.aggregate((sanfrancisco.household.income &gt;=45*(177.1/124))*(sanfrancisco.household.income &lt; 75*(177.1/124))))</variable>
        <variable use="model" source="expression" name="tm.AVGINCQ4" type="variable_definition">1000*safe_array_divide(zone.aggregate((sanfrancisco.household.income &gt;=75*(177.1/124))*sanfrancisco.household.income),zone.aggregate((sanfrancisco.household.income &gt;=75*(177.1/124))))</variable>
        <variable use="model" source="expression" name="tm.AVGHHINC" type="variable_definition">zone.aggregate(sanfrancisco.household.income,function=mean)</variable>
      </urbansim_to_tm_variable_mapping>
      <tazdataprocessor_srcdir type="string">Q:\Model Projects\Model Programs\TazDataProcessor9county</tazdataprocessor_srcdir>
      <tazdataprocessor_datadir type="string">Q:\Model Projects\Model Programs\TazDataProcessor9county\input\p2007</tazdataprocessor_datadir>
      <popsyn_srcdir type="string">Q:\Model Projects\Model Programs\PopSyn9county</popsyn_srcdir>
      <model name="get_cache_data_into_travel_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>sanfrancisco.travel_model.get_cache_data_into_travel_model</class_module>
            <class_name>GetCacheDataIntoTravelModel</class_name>
          </import>
          <run type="dictionary">
            <argument name="run_config" type="string" hidden="False">scenario_dir_name</argument>
            <argument name="year" type="string" hidden="False">year</argument>
          </run>
        </structure>
      </model>
      <model name="run_sanfrancisco_travel_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>sanfrancisco.travel_model.run_sanfrancisco_travel_model</class_module>
            <class_name>RunSanfranciscoTravelModel</class_name>
          </import>
          <run type="dictionary">
            <argument name="run_config" type="string" hidden="False">scenario_dir_name</argument>
            <argument name="year" type="string" hidden="False">year</argument>
          </run>
        </structure>
      </model>
      <model name="get_travel_model_data_into_cache" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>sanfrancisco.travel_model.get_travel_model_data_into_cache</class_module>
            <class_name>GetTravelModelDataIntoCache</class_name>
          </import>
          <run type="dictionary">
            <argument name="run_config" type="string" hidden="False">scenario_dir_name</argument>
            <argument name="year" type="string" hidden="False">year</argument>
          </run>
        </structure>
      </model>
    </travel_model_configuration>
  </model_manager>
  <scenario_manager>
    <scenario executable="True" name="sanfrancisco_baseline" type="scenario">
      <years_to_run config_name="years" type="tuple">
        <lastyear type="integer">2005</lastyear>
      </years_to_run>
      <advanced type="category">
        </advanced>
      <travel_model_configuration type="dictionary">
        <travel_model_base_directory type="string">X:\Projects\LUCI\Runs\lmz_2010.03.18</travel_model_base_directory>
        <years_to_run key_name="year" type="category_with_special_keys">
          <run_description type="dictionary">
            <year type="integer">2005</year>
            <year_dir type="string">2005_model</year_dir>
          </run_description>
        </years_to_run>
        <models_to_run config_name="models" type="selectable_list">
          <selectable name="sanfrancisco.travel_model.get_cache_data_into_travel_model" type="selectable">True</selectable>
          <selectable name="sanfrancisco.travel_model.run_sanfrancisco_travel_model" type="selectable">False</selectable>
          <selectable name="sanfrancisco.travel_model.get_travel_model_data_into_cache" type="selectable">False</selectable>
        </models_to_run>
      </travel_model_configuration>
    </scenario>
  </scenario_manager>
  <results_manager>
    <indicator_batches name="Indicator Batches" setexpanded="True" type="group">
      <indicator_batch name="Quick Check on Sqft/Units/Occupancy">
        <batch_visualization hidden="Children" type="batch_visualization" name="OR_resnon_tab">
          <indicators>['business_occupied_sqft', 'building_nonres_sqft', 'total_households', 'building_res_units']</indicators>
          <output_type>tab</output_type>
          <settings>
            <setting name="output_style">1</setting>
          </settings>
          <dataset_name>alldata</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="Occ_bldg_type_tab">
          <indicators>['allocc_apartment', 'allocc_automotive', 'allocc_commercial', 'allocc_condo', 'allocc_flat', 'allocc_hotel', 'allocc_industrial', 'allocc_institutional', 'allocc_mixed', 'allocc_office', 'allocc_other', 'allocc_public', 'allocc_resother', 'allocc_single']</indicators>
          <output_type>tab</output_type>
          <settings>
            <setting name="output_style">1</setting>
          </settings>
          <dataset_name>alldata</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="OR_bldg_type_tab">
          <indicators>['allor_apartment', 'allor_automotive', 'allor_commercial', 'allor_condo', 'allor_flat', 'allor_hotel', 'allor_industrial', 'allor_institutional', 'allor_mixed', 'allor_office', 'allor_other', 'allor_public', 'allor_resother', 'allor_single']</indicators>
          <output_type>tab</output_type>
          <settings>
            <setting name="output_style">1</setting>
          </settings>
          <dataset_name>alldata</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="Occupancy">
        <batch_visualization hidden="Children" type="batch_visualization" name="vacantsqft_buildingtype_table">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
            <setting name="output_style">1</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['vacsqft_apartment', 'vacsqft_automotive', 'vacsqft_commercial', 'vacsqft_condo', 'vacsqft_flat', 'vacsqft_hotel', 'vacsqft_industrial', 'vacsqft_institutional', 'vacsqft_mixed', 'vacsqft_office', 'vacsqft_other', 'vacsqft_public', 'vacsqft_resother', 'vacsqft_single']</indicators>
          <output_type>tab</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="vacantsqft_buildingtype_anim">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['vacsqft_apartment', 'vacsqft_automotive', 'vacsqft_commercial', 'vacsqft_condo', 'vacsqft_flat', 'vacsqft_hotel', 'vacsqft_industrial', 'vacsqft_institutional', 'vacsqft_mixed', 'vacsqft_office', 'vacsqft_other', 'vacsqft_public', 'vacsqft_resother', 'vacsqft_single']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="OR_bldgtype_table">
          <indicators>['or_apartment', 'or_automotive', 'or_commercial', 'or_condo', 'or_flat', 'or_hotel', 'or_industrial', 'or_institutional', 'or_mixed', 'or_office', 'or_other', 'or_public', 'or_resother', 'or_single']</indicators>
          <output_type>tab</output_type>
          <settings>
            <setting name="output_style">1</setting>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#deebf7,#c6dbef,#b9d3ee,#9ecae1,#6baed6,#4292c6,#2171b5,#08519c,#08306b,#011561</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <dataset_name>zone</dataset_name>
          <visualization_type>tab</visualization_type>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="OR_bldg_type_anim">
          <indicators>['or_apartment', 'or_automotive', 'or_commercial', 'or_condo', 'or_flat', 'or_hotel', 'or_industrial', 'or_institutional', 'or_mixed', 'or_office', 'or_other', 'or_public', 'or_resother', 'or_single']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <settings>
            <setting name="output_style">1</setting>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#deebf7,#c6dbef,#b9d3ee,#9ecae1,#6baed6,#4292c6,#2171b5,#08519c,#08306b,#011561</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <dataset_name>zone</dataset_name>
          <visualization_type>mapnik_animated_map</visualization_type>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="Zonal Animations">
        <batch_visualization hidden="Children" type="batch_visualization" name="Employment Animation">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['employment']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="Households Animation">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d,#238b45,#006400,#00441b,#00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">0.00,300.00,600.00,900.00,1200.00,1500.00,1800.00,2100.00,2400.00,2700.00,3000.00</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['number_of_households']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="Population Animation">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#deebf7,#c6dbef,#b9d3ee,#9ecae1,#6baed6,#4292c6,#2171b5,#08519c,#08306b,#011561</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">0.00,400.00,800.00,1200.00,1600.00,2000.00,2400.00,2800.00,3200.00,3600.00,4000.00</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['population']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="Tract_employment">
        <batch_visualization hidden="Children" type="batch_visualization" name="employment">
          <indicators>['tract_employment']</indicators>
          <output_type>mapnik_map</output_type>
          <settings>
            <setting name="output_style">1</setting>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <dataset_name>tract</dataset_name>
          <visualization_type>mapnik_map</visualization_type>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="zone_employment">
        <batch_visualization hidden="Children" type="batch_visualization" name="employment">
          <indicators>['employment']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <settings>
            <setting name="output_style">1</setting>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <dataset_name>zone</dataset_name>
          <visualization_type>mapnik_animated_map</visualization_type>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="City">
        <batch_visualization hidden="Children" type="batch_visualization" name="population_employment">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">0,0.1,1000,5000,20000,100000,999999999</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
            <setting name="output_style">3</setting>
          </settings>
          <visualization_type>tab</visualization_type>
          <indicators>['city_employment_total', 'city_households', 'city_population']</indicators>
          <output_type>tab</output_type>
          <dataset_name>alldata</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="Parcels">
        <batch_visualization hidden="Children" type="batch_visualization" name="building_sqft">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">0,0.1,1000,5000,20000,100000,999999999</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['total_building_sqft']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="residential_units">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0,#c7e9c0,#a1d99b,#7ccd7c,#74c476,#41ab5d</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">0,1,2,5,11,51,800</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_map</visualization_type>
          <indicators>['residential_units']</indicators>
          <output_type>mapnik_map</output_type>
          <dataset_name>parcel</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="TotalEmployment">
        <batch_visualization hidden="Children" type="batch_visualization" name="Total Employment">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#00fc00,#00d400,#00aa00,#007e00,#004800</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">1,751,2514,5940,14107,45053</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['zone_total_jobs']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="Employment">
        <batch_visualization hidden="Children" type="batch_visualization" name="sector6">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['zone_sector_6_jobs']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="sector5">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['zone_sector_5_jobs']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="sector4">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['zone_sector_4_jobs']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="sector3">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['zone_sector_3_jobs']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="sector2">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['zone_sector_2_jobs']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="sector1">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['zone_sector_1_jobs']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
      </indicator_batch>
      <indicator_batch name="households_population">
        <batch_visualization hidden="Children" type="batch_visualization" name="households">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['number_of_households']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
        <batch_visualization hidden="Children" type="batch_visualization" name="population">
          <settings>
            <setting name="mapnik_bucket_labels">range_labels</setting>
            <setting name="mapnik_legend_lower_left">6.5,0.5</setting>
            <setting name="mapnik_map_lower_left">0.5,0.5</setting>
            <setting name="mapnik_page_dims">8.5,5.5</setting>
            <setting name="mapnik_bucket_colors">#e0eee0, #c7e9c0, #a1d99b, #7ccd7c, #74c476, #41ab5d, #238b45, #006400, #00441b, #00340b</setting>
            <setting name="mapnik_map_upper_right">6.0,5.0</setting>
            <setting name="mapnik_resolution">96</setting>
            <setting name="mapnik_bucket_ranges">linear_scale</setting>
            <setting name="mapnik_legend_upper_right">6.9,5.0</setting>
          </settings>
          <visualization_type>mapnik_animated_map</visualization_type>
          <indicators>['population']</indicators>
          <output_type>mapnik_animated_map</output_type>
          <dataset_name>zone</dataset_name>
        </batch_visualization>
      </indicator_batch>
    </indicator_batches>
    <simulation_runs name="Simulation Runs" setexpanded="True" type="all_source_data" followers="Results">
      <run hidden="Children" type="source_data" name="base_year_data" run_id="52">
        <scenario_name type="string"/>
        <cache_directory type="string">C:\opus\data\sanfrancisco\base_year_data</cache_directory>
        <start_year type="integer">2001</start_year>
        <end_year type="integer">2001</end_year>
      </run>
      <run hidden="Children" type="source_data" name="run_2010_04_23_12_09" run_id="51">
        <scenario_name type="string">?</scenario_name>
        <cache_directory type="string">C:\opus\data\sanfrancisco\runs\run_51.run_2010_04_23_12_09</cache_directory>
        <start_year type="integer">2002</start_year>
        <end_year type="integer">2005</end_year>
      </run>
      <run hidden="Children" type="source_data" name="run_2010_04_19_12_39" run_id="47">
        <scenario_name type="string">?</scenario_name>
        <cache_directory type="string">C:\opus\data\sanfrancisco\runs\run_47.run_2010_04_19_12_39</cache_directory>
        <start_year type="integer">2002</start_year>
        <end_year type="integer">2005</end_year>
      </run>
      <run hidden="Children" type="source_data" name="No description" run_id="8">
        <scenario_name type="string">?</scenario_name>
        <cache_directory type="string">C:\opus\data\sanfrancisco\runs\run_8.2010_03_19_13_04</cache_directory>
        <start_year type="integer">2002</start_year>
        <end_year type="integer">2030</end_year>
      </run>
    </simulation_runs>
  </results_manager>
</opus_project>

