<opus_project>
  <xml_version>2.0</xml_version>
  <general>
    <description type="string">Configuration for the PSRC parcel project</description>
    <parent type="file">psrc_parcel_4K.xml</parent>
    <expression_library type="dictionary">
    </expression_library>
 </general>
 <model_manager>
 <models config_name="model_system" hidden="False" name="Models" setexpanded="True" type="dictionary">
    <model name="employment_relocation_model" type="model">
        <structure type="dictionary">
          <import name="import" type="dictionary">
            <class_module>urbansim.models.agent_relocation_model</class_module>
            <class_name>AgentRelocationModel</class_name>
          </import>
        <init type="dictionary">
            <name name="name" type="string">AgentRelocationModel</name>
            <argument name="location_id_name" parser_action="quote_string" type="string">building_id</argument>
            <argument name="model_name" parser_action="quote_string" type="string">Employment Relocation Model</argument>
            <argument name="debuglevel" type="string">debuglevel</argument>           
            <argument name="probabilities" convert_blank_to_none="True" parser_action="quote_string" type="string"/>
        </init>
      <prepare_for_run type="dictionary">
         <name name="name" type="string">prepare_for_run</name>
         <output name="output" type="string">erm_resources</output>
            <argument name="rate_storage" type="string" convert_blank_to_none="True"/>
            <argument name="rate_table" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
          </prepare_for_run>
          <run type="dictionary">
            <output name="output" type="string">erm_index</output>
            <argument name="resources" type="string">erm_resources</argument>
            <argument model_dependency_type="dataset" name="agent_set" type="string">job</argument>
          </run>        
        </structure>
      </model>
       <model name="non_home_based_employment_location_choice_model" type="model">
         <structure type="dictionary">
                <group_by_attribute type="tuple">
                  <argument name="grouping_table" type="string">home_based_status</argument>
                  <argument name="grouping_column" type="string">name</argument>
                </group_by_attribute>
                <import hidden="True" name="import" type="dictionary">
                  <class_module type="string">psrc_parcel.models.employment_location_choice_model_by_geography</class_module>
                  <class_name>EmploymentLocationChoiceModelByGeography</class_name>
                </import>
                <init type="dictionary">
                  <name hidden="True" name="name" type="string">EmploymentLocationChoiceModelByGeography</name>
                  <argument name="geography_dataset" type="string" model_dependency_type="dataset">tractcity</argument>
                  <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
                  <argument name="sampler" parser_action="quote_string" type="string" convert_blank_to_none="True">opus_core.samplers.weighted_sampler</argument>
                  <argument name="choices" parser_action="quote_string" type="string">opus_core.upc.random_choices_from_index</argument>
                  <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
                  <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
                  <argument name="simulation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">(psrc_parcel.building.fraction_of_jobs_of_sector_SUBMODEL_static + 0.1)*ln_shifted(building.non_residential_sqft, 2)</argument>
                  <argument name="filter" convert_blank_to_none="True" parser_action="quote_string" type="string">urbansim_parcel.building.is_non_residential &gt; 0</argument>
                  <argument name="compute_capacity_flag" type="boolean">False</argument>
                  <argument name="number_of_units_string" type="string" convert_blank_to_none="True"/>
		  <argument name="sample_size_locations" type="integer">100</argument>
                  <argument name="run_config" type="dictionary">
                    <key convert_blank_to_none="True" name="agent_units_string" type="string"/>
		    <key name="accept_unavailability_of_choices" type="boolean">True</key>
		    <key name="sample_alternatives_by_submodel" type="boolean">True</key>
                  </argument>
                  <argument name="variable_package" parser_action="quote_string" type="string">psrc_parcel</argument>
                </init>
                <prepare_for_run type="dictionary">
                  <name hidden="True" name="name" type="string">prepare_for_run</name>
                  <output hidden="True" name="output" type="string">(specification, coefficients)</output>
                  <argument name="coefficients_storage" type="string">base_cache_storage</argument>
                  <argument name="coefficients_table" parser_action="quote_string" type="string">employment_location_choice_model_coefficients</argument>
                  <argument name="specification_storage" type="string">base_cache_storage</argument>
                  <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
                </prepare_for_run>
                <run type="dictionary">
                  <argument name="agent_set" type="string">job</argument>
                  <argument hidden="True" name="agents_index" type="string">erm_index</argument>
                  <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
                  <argument name="coefficients" type="string">coefficients</argument>
                  <argument name="data_objects" type="string">datasets</argument>
                  <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
                  <argument hidden="True" name="specification" type="string">specification</argument>
                  <argument name="maximum_runs" type="integer">1</argument>
                </run>
              </structure>
 </model>
        <model name="non_home_based_employment_location_choice_model_city" type="model">
         <structure type="dictionary">
                <group_by_attribute type="tuple">
                  <argument name="grouping_table" type="string">home_based_status</argument>
                  <argument name="grouping_column" type="string">name</argument>
                </group_by_attribute>
                <import hidden="True" name="import" type="dictionary">
                  <class_module type="string">psrc_parcel.models.employment_location_choice_model_by_geography</class_module>
                  <class_name>EmploymentLocationChoiceModelByGeography</class_name>
                </import>
                <init type="dictionary">
                  <name hidden="True" name="name" type="string">EmploymentLocationChoiceModelByGeography</name>
                  <argument name="geography_dataset" type="string" model_dependency_type="dataset">city</argument>
                  <argument name="agents_grouping_attribute" parser_action="quote_string" type="string">job.home_based_status</argument>
                  <argument name="sampler" parser_action="quote_string" type="string" convert_blank_to_none="True">opus_core.samplers.weighted_sampler</argument>
                  <argument name="choices" parser_action="quote_string" type="string">opus_core.upc.random_choices_from_index</argument>
                  <argument hidden="True" name="dataset_pool" type="string">dataset_pool</argument>
                  <argument name="location_set" type="string" model_dependency_type="dataset">building</argument>
                  <argument name="simulation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">psrc_parcel.building.fraction_of_jobs_of_sector_SUBMODEL_static * ln_shifted(building.non_residential_sqft, 2)</argument>
                  <argument name="filter" convert_blank_to_none="True" parser_action="quote_string" type="string">urbansim_parcel.building.is_non_residential &gt; 0</argument>
                  <argument name="compute_capacity_flag" type="boolean">False</argument>
                  <argument name="number_of_units_string" type="string" convert_blank_to_none="True"/>
		  <argument name="sample_size_locations" type="integer">100</argument>
                  <argument name="run_config" type="dictionary">
                    <key convert_blank_to_none="True" name="agent_units_string" type="string"/>
		    <key name="sample_alternatives_by_submodel" type="boolean">True</key>
                  </argument>
                  <argument name="variable_package" parser_action="quote_string" type="string">psrc_parcel</argument>
                </init>
                <prepare_for_run type="dictionary">
                  <name hidden="True" name="name" type="string">prepare_for_run</name>
                  <output hidden="True" name="output" type="string">(specification, coefficients)</output>
                  <argument name="coefficients_storage" type="string">base_cache_storage</argument>
                  <argument name="coefficients_table" parser_action="quote_string" type="string">employment_location_choice_model_coefficients</argument>
                  <argument name="specification_storage" type="string">base_cache_storage</argument>
                  <argument name="specification_table" parser_action="quote_string" type="string">employment_location_choice_model_specification</argument>
                </prepare_for_run>
                <run type="dictionary">
                  <argument name="agent_set" type="string">job</argument>
                  <argument hidden="True" name="agents_index" type="string">erm_index</argument>
                  <argument name="chunk_specification" type="string">{'records_per_chunk':50000}</argument>
                  <argument name="coefficients" type="string">coefficients</argument>
                  <argument name="data_objects" type="string">datasets</argument>
                  <argument hidden="True" name="debuglevel" type="string">debuglevel</argument>
                  <argument hidden="True" name="specification" type="string">specification</argument>
                  <argument name="maximum_runs" type="integer">1</argument>
                </run>
              </structure>
 </model>
   <model copyable="True" hidden="False" name="work_at_home_choice_model" type="model">
        <structure type="dictionary">
           <import hidden="True" name="import" type="dictionary">
                  <class_module type="string">psrc_parcel.models.work_at_home_choice_model_by_zones</class_module>
                  <class_name>WorkAtHomeChoiceModelByZones</class_name>
           </import>
          <init type="dictionary">
          <name hidden="True" name="name" type="string">WorkAtHomeChoiceModelByZones</name>
            <argument name="filter" parser_action="quote_string" type="string">job.home_based_status==1</argument>
            <argument name="choices" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
          </init>
          <run type="dictionary">
               <argument name="zones" type="string">zone</argument>
          </run>
          <prepare_for_run type="dictionary">
            <argument name="agents_filter" parser_action="quote_string" type="string">urbansim_parcel.person.is_worker</argument>
          </prepare_for_run>
        </structure>  
    </model>
    <model copyable="True" hidden="False" name="workplace_choice_model_for_resident" type="model">
        <structure type="dictionary">
          <init type="dictionary">
          <argument name="filter" parser_action="quote_string" type="string">job.home_based_status==0</argument>
          <argument name="run_config" type="dictionary">
          <key name="capacity_string" type="string">is_untaken_nhb_job = numpy.logical_and(job.number_of_agents(person)==0, job.home_based_status==0)</key>
          </argument>
          </init>
          <run type="dictionary">
              <argument name="agents_filter" parser_action="quote_string" type="string">urbansim_parcel.person.is_non_home_based_worker</argument>
          </run>
        </structure>  
    </model>
    <model copyable="True" hidden="False" name="governmental_employment_location_choice_model_without_filter" type="model">
      <structure type="dictionary">
           <import hidden="True" name="import" type="dictionary">
                  <class_module type="string">psrc_parcel.models.scaling_jobs_model_by_geography</class_module>
                  <class_name>ScalingJobsModelByGeography</class_name>
           </import>
          <init type="dictionary">
          <name hidden="True" name="name" type="string">ScalingJobsModelByGeography</name>
          <argument name="debuglevel" type="string">2</argument>
          </init>
          <prepare_for_run type="dictionary">
    <name hidden="True" name="name" type="string">prepare_for_run</name>
          <argument name="agent_set" type="string">job</argument>
          <argument name="agents_filter" type="string" parser_action="quote_string">numpy.logical_or(job.sector_id==18, job.sector_id==19)</argument>
          <argument name="agents_index" type="string">erm_index</argument>
    <output hidden="True" name="output" type="string">filtered_erm_index</output>
    </prepare_for_run>
          <run type="dictionary">
              <argument name="geography_set" type="string">city</argument>
              <argument name="location_set" type="string">building</argument>
              <argument name="agent_set" type="string">job</argument>
              <argument name="agents_index" type="string">filtered_erm_index</argument>
          </run>
       </structure>
    </model>
    <model name="household_relocation_model" type="model">
        <structure type="dictionary">
        <init type="dictionary">
            <argument name="probabilities" parser_action="quote_string" convert_blank_to_none="True" type="string"/>
        </init>
        <prepare_for_run type="dictionary">
          <argument name="rate_storage" type="string" convert_blank_to_none="True"/>
          <argument name="rate_table" parser_action="quote_string" type="string" convert_blank_to_none="True"/>
        </prepare_for_run>
     </structure>
     </model>
    <model name="household_location_choice_model" type="model">
        <structure type="dictionary">
          <import hidden="True" name="import" type="dictionary">
            <class_module type="string">urbansim.models.subarea_household_location_choice_model</class_module>
            <class_name>SubareaHouseholdLocationChoiceModel</class_name>
          </import>
          <init type="dictionary">
            <name hidden="True" name="name" type="string">SubareaHouseholdLocationChoiceModel</name>
            <argument name="subarea_id_name" parser_action="quote_string" type="string">census_block_group_id</argument>
            <argument name="sampler" parser_action="quote_string" type="string" convert_blank_to_none="True">opus_core.samplers.weighted_sampler</argument>
            <argument name="simulation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">urbansim_parcel.building.vacant_residential_units</argument>
            <argument name="estimation_weight_string" parser_action="quote_string" type="string" model_dependency_type="variable">urbansim_parcel.building.vacant_residential_units</argument>            
            <!--<argument name="number_of_units_string" parser_action="quote_string" type="string" convert_blank_to_none="True"/>-->
            <argument name="sample_size_locations" type="integer">500</argument>
            <argument name="run_config" type="dictionary">
              <key name="lottery_max_iterations" type="integer">20</key>
              <key name="include_mnl_bias_correction_term" type="boolean">False</key>
              <key name="accept_unavailability_of_choices" type="boolean">True</key>
              <key name="sample_alternatives_by_group" type="boolean">False</key>
            </argument>
            <argument name="estimate_config" type="dictionary">
              <key name="sample_alternatives_by_group" type="boolean">False</key>
              <key name="include_mnl_bias_correction_term" type="boolean">False</key>
            </argument>
          </init>
          <run type="dictionary">
            <argument name="chunk_specification" type="string">{'records_per_chunk':2000}</argument>
            <argument name="flush_after_each_subarea" type="boolean">True</argument>
            <argument name="run_no_area" type="boolean">False</argument>
            <argument name="maximum_runs" type="integer">3</argument>
          </run>
        </structure>
        <specification type="dictionary" inherit_parent_values="False">
          <submodel name="submodel" submodel_id="-2" type="submodel" hidden="Children">
            <description type="string">Non-inmigrants</description>
            <variable_list type="variable_list">
             <!--  <variable_spec name="building.Kitsap"/> -->
              <variable_spec name="building.multifamily_type"/>
              <variable_spec name="household_x_building.housing_range"/>
              <variable_spec name="building.iv_ln_price_residual"/>
              <!-- <variable_spec name="household_x_building.kids_x_kids"/> -->
              <!--<variable_spec name="building.ln_price_per_unit"/> -->
              <!--<variable_spec name="building.ngoodpubl_schools"/>-->
              <!-- <variable_spec name="household_x_building.kids_x_has_good_publ_schools"/> -->
              <!--<variable_spec name="building.no_good_publ_schools"/>
              <variable_spec name="household_x_building.twoplus_x_sqft_per_HH_member"/>-->
             <!-- <variable_spec name="building.lnretailden_wwd"/>
              <variable_spec name="building.lnparkarea_wwd"/>
              <variable_spec name="building.park_wwd_bldg"/> -->
              <variable_spec name="household_x_building.per_capita_income_x_size"/>
             <!--  <variable_spec name="household_x_building.income_x_size"/> -->
               <!--  <variable_spec name="household_x_building.inc_x_mfr"/> -->
             <!-- <variable_spec name="household_x_building.inc_x_condo"/>-->
              <variable_spec name="household_x_building.one_pers_x_not_sfr"/>
              <!-- <variable_spec name="household_x_building.two_pers_x_not_sfr"/> -->
              <!--<variable_spec name="household_x_building.big_not_in_seattle"/>  -->
             <!--  <variable_spec name="household_x_building.disposable_inc"/> -->
              <!-- <variable_spec name="building.sqft_per_unit"/> -->
              <!--<variable_spec name="household_x_building.zero_workers_x_avg_work_logsum"/>-->
              <variable_spec name="household_x_building.space_per_pers_gt1T"/>
              <variable_spec name="household_x_building.owner_x_is_not_mfr"/>
             <!--<variable_spec name="household_x_building.high_income_x_ln_sqft_per_unit"/> 
                <variable_spec name="household_x_building.low_income_x_ln_sqft_per_unit"/> -->
               <!--<variable_spec name="building.ln_sqft_per_unit"/> -->
              <!-- <variable_spec name="building.ln_resunit"/>-->
              <!-- <variable_spec name="building.schooldistr_totscore"/> -->
              <variable_spec name="household_x_building.npers_x_condo_ifgt2"/>
              <!-- <variable_spec name="household_x_building.mnl_bias" fixed_value="1"/> -->
              <!-- Might be put in to address household size issues
               <variable_spec name="household_x_building.kids_x_ngood_publ_schools"/>
               <variable_spec name="household_x_building.pers_gt_2_x_condo"/>
               <variable_spec name="household_x_building.pers_lt_3_if_seattle"/>     
               -->               
            </variable_list>
          </submodel>
        </specification>
      </model>
 </models>
 </model_manager>
 <scenario_manager>
     <scenario type="scenario" executable="True" name="job_initialization">
     <parent type="scenario_name">urbansim_parcel_baseline</parent>
     <base_year type="integer">2014</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2015</firstyear>
        <lastyear type="integer">2015</lastyear>
      </years_to_run>
      <seed type="integer" convert_blank_to_none="True">1</seed>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfigurationNoDB</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/job_data/qcew_data_elcm/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/job_data/qcew_data_elcm/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="employment_relocation_model" type="selectable">True</selectable>
        <!-- -->
        <selectable name="employment_location_choice_model" type="model_choice">True<group_members type="string">non_home_based</group_members></selectable>
	<selectable name="employment_relocation_model" type="selectable">True</selectable>
	<selectable name="non_home_based_employment_location_choice_model_city" type="model_choice">True<group_members type="string">non_home_based</group_members> </selectable>
        <selectable name="governmental_employment_location_choice_model_without_filter" type="model_choice">True</selectable>
        <selectable name="work_at_home_choice_model" type="model_choice">False</selectable>
        <selectable name="workplace_choice_model_for_resident" type="model_choice">False</selectable>
      </models_to_run>
      <advanced type="category">
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/job_data/qcew_data_elcm</cache_directory>
         <flush_variables type="boolean">False</flush_variables>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['psrc_parcel', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <datasets_to_cache_after_each_model type="list">[]</datasets_to_cache_after_each_model>
      <datasets_to_preload inherit_parent_values="False" parser_action="list_to_dictionary" type="selectable_list">
        <selectable copyable="True" type="selectable" name="job">False</selectable>
        <selectable copyable="True" type="selectable" name="zone">False</selectable>
        <selectable copyable="True" type="selectable" name="building" followers="my_dataset">False</selectable>
        <selectable copyable="True" type="selectable" name="person">False</selectable>
        <selectable copyable="True" type="selectable" name="home_based_status">True</selectable>
      </datasets_to_preload>
      </advanced>
    </scenario>
    <scenario type="scenario" executable="True" name="household_initialization">
     <parent type="scenario_name">urbansim_parcel_baseline</parent>
     <base_year type="integer">2014</base_year>
      <years_to_run config_name="years" type="tuple">
        <firstyear type="integer">2015</firstyear>
        <lastyear type="integer">2015</lastyear>
      </years_to_run>
      <seed type="integer" convert_blank_to_none="True">1</seed>
      <creating_baseyear_cache_configuration type="class">
        <class_name hidden="True" type="string">CreatingBaseyearCacheConfigurationNoDB</class_name>
        <class_module hidden="True" type="string">urbansim.configurations.creating_baseyear_cache_configuration</class_module>
        <argument config_name="cache_directory_root" name="scenario_runs_directory" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/HHprep/runs</argument>
        <argument name="baseyear_cache" type="class">
          <class_name hidden="True" type="string">BaseyearCacheConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.baseyear_cache_configuration</class_module>
          <argument name="existing_cache_to_copy" parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/HHprep/base_year_data</argument>
        </argument>
      </creating_baseyear_cache_configuration>
      <models_to_run config_name="models" type="selectable_list">
        <selectable name="household_relocation_model" type="selectable">True</selectable>
        <selectable name="household_location_choice_model" type="model_choice">True</selectable>
      </models_to_run>
      <advanced type="category">
      <cache_directory parser_action="prefix_with_opus_data_path" type="directory">psrc_parcel/HHprep</cache_directory>
         <flush_variables type="boolean">False</flush_variables>
        <dataset_pool_configuration type="class">
          <class_name hidden="True" type="string">DatasetPoolConfiguration</class_name>
          <class_module hidden="True" type="string">opus_core.configurations.dataset_pool_configuration</class_module>
          <argument name="package_order" type="list">['psrc_parcel', 'urbansim_parcel', 'urbansim', 'opus_core']</argument>
        </dataset_pool_configuration>
        <datasets_to_cache_after_each_model type="list">[]</datasets_to_cache_after_each_model>
      <datasets_to_preload inherit_parent_values="False" parser_action="list_to_dictionary" type="selectable_list">
        <selectable copyable="True" type="selectable" name="household">False</selectable>
        <selectable copyable="True" type="selectable" name="building" followers="my_dataset">False</selectable>
      </datasets_to_preload>
      </advanced>
    </scenario>
 </scenario_manager>
 </opus_project>
